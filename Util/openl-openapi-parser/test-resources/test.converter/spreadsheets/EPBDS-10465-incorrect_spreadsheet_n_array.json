{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "description": "A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team",
      "email": "apiteam@swagger.io",
      "url": "http://swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://petstore.swagger.io/api"
    }
  ],
  "paths": {
    "/NewPet": {
      "post": {
        "description": "Creates a new pet in the store. Duplicates are allowed",
        "operationId": "addPet",
        "requestBody": {
          "description": "Pet to add to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPet"
                }
              }
            }
          }
        }
      }
    },
    "/petsN": {
      "post": {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "find pet by id",
        "requestBody": {
          "description": "Pet to add to the store",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyType"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NewPet": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "NumberOfEligible": {
            "type": "integer",
            "format": "int32"
          },
          "NumberOfEnrolled": {
            "type": "number",
            "format": "double"
          },
          "MonthlyPremium": {
            "type": "number",
            "format": "double"
          },
          "TotalMonthlyPreExpenseCost": {
            "type": "number",
            "format": "double"
          },
          "TotalNetClaimCost": {
            "type": "number",
            "format": "double"
          },
          "TotalWeeklyBenefit": {
            "type": "number",
            "format": "double"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "MyType": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "someField": {
            "type": "string"
          },
          "PetArray": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NewPet"
                  }
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}