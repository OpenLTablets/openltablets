/* Generated By:JavaCC: Do not edit this line. JGrammarConstants.java */
package org.openl.grammars.jgrammar;

public interface JGrammarConstants {

    int EOF = 0;
    int ABSTRACT = 6;
    int BREAK = 7;
    int CASE = 8;
    int CATCH = 9;
    int CONST = 10;
    int CONTINUE = 11;
    int _DEFAULT = 12;
    int DO = 13;
    int ELSE = 14;
    int EXTENDS = 15;
    int FALSE = 16;
    int FINAL = 17;
    int FINALLY = 18;
    int FOR = 19;
    int GOTO = 20;
    int IF = 21;
    int IMPLEMENTS = 22;
    int IMPORT = 23;
    int INSTANCEOF = 24;
    int INTERFACE = 25;
    int NATIVE = 26;
    int NEW = 27;
    int NULL = 28;
    int PACKAGE = 29;
    int PRIVATE = 30;
    int PROTECTED = 31;
    int PUBLIC = 32;
    int RETURN = 33;
    int STATIC = 34;
    int SUPER = 35;
    int SWITCH = 36;
    int SYNCHRONIZED = 37;
    int THROW = 38;
    int THROWS = 39;
    int TRANSIENT = 40;
    int TRUE = 41;
    int TRY = 42;
    int VOID = 43;
    int VOLATILE = 44;
    int WHILE = 45;
    int LPAREN = 46;
    int RPAREN = 47;
    int LBRACE = 48;
    int RBRACE = 49;
    int LBRACKET = 50;
    int RBRACKET = 51;
    int SEMICOLON = 52;
    int COMMA = 53;
    int DOT = 54;
    int ASSIGN = 55;
    int GT = 56;
    int LT = 57;
    int BANG = 58;
    int TILDE = 59;
    int HOOK = 60;
    int COLON = 61;
    int EQ = 62;
    int LE = 63;
    int GE = 64;
    int NE = 65;
    int SC_OR = 66;
    int SC_AND = 67;
    int INCR = 68;
    int DECR = 69;
    int PLUS = 70;
    int MINUS = 71;
    int STAR = 72;
    int SLASH = 73;
    int BIT_AND = 74;
    int BIT_OR = 75;
    int XOR = 76;
    int REM = 77;
    int LSHIFT = 78;
    int RSIGNEDSHIFT = 79;
    int RUNSIGNEDSHIFT = 80;
    int PLUSASSIGN = 81;
    int MINUSASSIGN = 82;
    int STARASSIGN = 83;
    int SLASHASSIGN = 84;
    int ANDASSIGN = 85;
    int ORASSIGN = 86;
    int XORASSIGN = 87;
    int REMASSIGN = 88;
    int LSHIFTASSIGN = 89;
    int RSIGNEDSHIFTASSIGN = 90;
    int RUNSIGNEDSHIFTASSIGN = 91;
    int EXP = 92;
    int IMPL = 93;
    int INTEGER_LITERAL = 94;
    int DECIMAL_LITERAL = 95;
    int HEX_LITERAL = 96;
    int OCTAL_LITERAL = 97;
    int FLOATING_POINT_LITERAL = 98;
    int EXPONENT = 99;
    int CHARACTER_LITERAL = 100;
    int STRING_LITERAL = 101;
    int IDENTIFIER = 102;
    int LETTER = 103;
    int DIGIT = 104;
    int SINGLE_LINE_COMMENT = 107;
    int FORMAL_COMMENT = 108;
    int MULTI_LINE_COMMENT = 109;

    int DEFAULT = 0;
    int IN_FORMAL_COMMENT = 1;
    int IN_MULTI_LINE_COMMENT = 2;

    String[] tokenImage = { "<EOF>", "\" \"", "\"\\r\"", "\"\\t\"", "\"\\n\"", "\"\\f\"", "\"abstract\"", "\"break\"",
            "\"case\"", "\"catch\"", "\"const\"", "\"continue\"", "\"default\"", "\"do\"", "\"else\"", "\"extends\"",
            "\"false\"", "\"final\"", "\"finally\"", "\"for\"", "\"goto\"", "\"if\"", "\"implements\"", "\"import\"",
            "\"instanceof\"", "\"interface\"", "\"native\"", "\"new\"", "\"null\"", "\"package\"", "\"private\"",
            "\"protected\"", "\"public\"", "\"return\"", "\"static\"", "\"super\"", "\"switch\"", "\"synchronized\"",
            "\"throw\"", "\"throws\"", "\"transient\"", "\"true\"", "\"try\"", "\"void\"", "\"volatile\"", "\"while\"",
            "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"[\"", "\"]\"", "\";\"", "\",\"", "\".\"", "\"=\"", "\">\"", "\"<\"",
            "\"!\"", "\"~\"", "\"?\"", "\":\"", "\"==\"", "\"<=\"", "\">=\"", "\"!=\"", "\"||\"", "\"&&\"", "\"++\"",
            "\"--\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\"&\"", "\"|\"", "\"^\"", "\"%\"", "\"<<\"", "\">>\"",
            "\">>>\"", "\"+=\"", "\"-=\"", "\"*=\"", "\"/=\"", "\"&=\"", "\"|=\"", "\"^=\"", "\"%=\"", "\"<<=\"",
            "\">>=\"", "\">>>=\"", "\"**\"", "\"->\"", "<INTEGER_LITERAL>", "<DECIMAL_LITERAL>", "<HEX_LITERAL>",
            "<OCTAL_LITERAL>", "<FLOATING_POINT_LITERAL>", "<EXPONENT>", "<CHARACTER_LITERAL>", "<STRING_LITERAL>",
            "<IDENTIFIER>", "<LETTER>", "<DIGIT>", "<token of kind 105>", "\"/*\"", "<SINGLE_LINE_COMMENT>", "\"*/\"",
            "\"*/\"", "<token of kind 110>", };

}
