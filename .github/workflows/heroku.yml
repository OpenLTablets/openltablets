# This workflow will build and deploys docker images to Heroku dynos

name: Heroku App

on:
  # Manual run from the GitHub action page
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build'
        required: false
      merge:
        description: "Merge 'Ref'?"
        required: true
        type: boolean
        default: true
      app:
        description: 'Docker image'
        type: choice
        required: true
        default: WebStudio
        options:
          - WebStudio
          - Demo
          - RuleServices
          - RuleServices (ALL)
      server:
        description: 'Heroku app server'
        type: choice
        required: false
        options:
          - '.'
          - qa1
          - qa2
          - qa3
          - qa4
          - dev1
          - dev2
          - dev3
          - dev4
      isConfigured:
        description: "-Dwebstudio.configured=true"
        type: boolean
        default: true
        required: true
      isDeployer:
        description: "-Druleservice.deployer.enabled=true"
        type: boolean
        default: true
        required: true
      javaOpts:
        description: 'JAVA_OPTS'
        required: false

jobs:
  build:

    name: Working on ${{ github.ref_name }}

    runs-on: ubuntu-20.04

    steps:

    - name: Configure GIT
      run: |
        git config --global user.name "OpenL Tablets"
        git config --global user.email openltablets@gmail.com
        git config --global core.autocrlf false

    - name: Checkout ${{ github.event.inputs.branch }}
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.ref }}

    - name: Setup Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11
        cache: 'maven'

    - name: Merge
      env:
        MERGE_MSG: "Merge ${{ github.ref_name }} into ${{ inputs.ref }}"
        DEPTH: 300
      if: >-
        inputs.ref != '' &&
        inputs.merge &&
        inputs.ref != github.ref_name
      run: |
        git fetch --no-tags --no-recurse-submodules --progress --deepen=$DEPTH origin '+${{ inputs.ref }}'
        git fetch --no-tags --no-recurse-submodules --progress --depth=$DEPTH origin '+${{ github.ref_name }}'
        git merge FETCH_HEAD -m "$MERGE_MSG"

    - name: Maven version
      run: mvn -v

    - name: Build with Maven
      run: mvn package -DskipTests -T 1C "-Dstyle.color=always"

    - name: Deploy ${{ inputs.app }} to ${{ inputs.server }}
      uses: ./.github/actions/deploy-heroku
      with:
        login: ${{ secrets.HEROKU_LOGIN }}
        token: ${{ secrets.HEROKU_TOKEN }}
        app-name: >-
          ${{
            format( 'openl-{0}',
              inputs.server!='.' && inputs.server ||
              fromJson('{
                "Demo": "demo",
                "WebStudio": "webstudio",
                "RuleServices": "ruleservice",
                "RuleServices (ALL)": "ruleservice-all"
              }')[inputs.app]
            )
          }}
        javaOpts: >-
          -Djetty.http.port=$PORT -Xms16M -Xmx450M
          -Dxxx.yyy=jdbc:sqr://www.cloud:1433;db=ab -Dxxx=$YYY
          ${{ inputs.isConfigured && '-Dwebstudio.configured=true' || '' }}
          ${{ inputs.isDeployer && '-Druleservice.deployer.enabled=true' || '' }}
          ${{ inputs.isDeployer && inputs.app != 'Demo' && '-Dproduction-repository.uri=${OPENL_HOME}/repo' || '' }}
          ${{ inputs.javaOpts }}
        dockerfile: Dockerfiles/${{ inputs.app == 'Demo' && 'Demo' || 'WebApp' }}
        context: >-
          ${{ fromJson('{
            "Demo": "DEMO/org.openl.rules.demo/target",
            "WebStudio": "STUDIO/org.openl.rules.webstudio",
            "RuleServices": "WSFrontend/org.openl.rules.ruleservice.ws",
            "RuleServices (ALL)": "WSFrontend/org.openl.rules.ruleservice.ws.all"
          }')[inputs.app] }}
