name: "Deploy to Heroku"
description: "Builds and deploys the Docker image to Heroku dynos"
inputs:
  login:
    required: true
    description: "Login name (email) for authentication with Heroku"
  token:
    required: true
    description: "Token (password) for authentication with Heroku"
  app-name:
    required: true
    description: "The dynos app name in Heroku where the application will be deployed"
  dockerfile:
    required: false
    description: "Location of the Dockerfile file"
    default: "Dockerfile"
  context:
    required: false
    description: "Path to the Docker context directory for building"
    default: "."
  javaOpts:
    required: false
    description: "Java options, such as: -Xms16M -Xmx64M -Dlog=true"

runs:
  using: "composite"
  steps:
    - name: Build Docker Image
      shell: bash
      env:
        APP_NAME: ${{ inputs.app-name }}
        DOCKERFILE: ${{ inputs.dockerfile }}
        CONTEXT: ${{ inputs.context }}
      run: docker build -t "registry.heroku.com/$APP_NAME/web" -f "$DOCKERFILE" "$CONTEXT"

    - name: Push Docker Image
      shell: bash
      env:
        APP_NAME: ${{ inputs.app-name }}
        LOGIN: ${{ inputs.login }}
        TOKEN: ${{ inputs.token }}
      run: |
        docker login -u "$LOGIN" -p "$TOKEN" registry.heroku.com
        docker push "registry.heroku.com/$APP_NAME/web"

    - name: Set JAVA_OPTS
      shell: bash
      env:
        APP_NAME: ${{ inputs.app-name }}
        LOGIN: ${{ inputs.login }}
        TOKEN: ${{ inputs.token }}
        JAVA_OPTS: ${{ inputs.javaOpts }}
      if: inputs.javaOpts != ''
      run: |
        curl -X PATCH "https://api.heroku.com/apps/$APP_NAME/config-vars" \
            -d "{\"JAVA_OPTS\":\"$JAVA_OPTS\"}" \
            -H 'Content-Type: application/json' \
            -H 'Accept: Accept: application/vnd.heroku+json; version=3' \
            -u "$LOGIN:$TOKEN"

    - name: Deploy
      shell: bash
      env:
        APP_NAME: ${{ inputs.app-name }}
        LOGIN: ${{ inputs.login }}
        TOKEN: ${{ inputs.token }}
        JAVA_OPTS: ${{ inputs.javaOpts }}
      run: |
        SHA=$(docker inspect "registry.heroku.com/$APP_NAME/web" --format={{.Id}})
        echo "Deploy image: $SHA"
        curl -X PATCH "https://api.heroku.com/apps/$APP_NAME/formation" \
            -d "{ \"updates\": [{ \"type\": \"web\", \"docker_image\": \"$SHA\" }]}" \
            -H 'Content-Type: application/json' \
            -H 'Accept: Accept: application/vnd.heroku+json; version=3.docker-releases' \
            -u "$LOGIN:$TOKEN"
        echo "### Deployed on [$APP_NAME](https://$APP_NAME.herokuapp.com/) :rocket:" >> $GITHUB_STEP_SUMMARY
