HTTP/1.1 200 OK
Content-Type: application/json

{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenL Tablets WebStudio API",
    "version": "#.##.*"
  },
  "servers": [
    {
      "url": "http://example.com/rest"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "tags": [
    {
      "name": "Compare"
    },
    {
      "name": "Conflict"
    },
    {
      "name": "Design Repository"
    },
    {
      "name": "History"
    },
    {
      "name": "Info"
    },
    {
      "name": "Mail"
    },
    {
      "name": "Management"
    },
    {
      "name": "Message"
    },
    {
      "name": "Notification"
    },
    {
      "name": "Project Compilation"
    },
    {
      "name": "Project Tables"
    },
    {
      "name": "Tags"
    },
    {
      "name": "Test"
    },
    {
      "name": "Trace"
    },
    {
      "name": "Users"
    }
  ],
  "paths": {
    "/public/info/http.json": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "trace": {
        "tags": [
          "Info"
        ],
        "summary": "Get HTTP servlet request information.",
        "description": "Extract information from the HttpServletRequest, ServletContext, HttpHeaders.",
        "operationId": "*",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/project/tables": {
      "get": {
        "tags": [
          "Project Tables"
        ],
        "summary": "Get project tables",
        "description": "Gets the list of tables with their dependencies from currently opened project",
        "operationId": "getTablesWithDependencies",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Table"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          }
        }
      }
    },
    "/public/info/build.json": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Get custom build information.",
        "description": "Gets information from `build-info.properties` file, if exists in application resources",
        "operationId": "getBuildInfo",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          }
        }
      }
    },
    "/compile/tests": {
      "get": {
        "tags": [
          "Project Compilation"
        ],
        "summary": "Get tests",
        "description": "Get tests",
        "operationId": "tests",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleTestsInfo"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user profile",
        "description": "Get current user profile",
        "operationId": "getUserProfile",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit current user profile",
        "description": "Edit current user profile",
        "operationId": "editUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileEditModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/users/options": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "User options",
        "description": "User options",
        "operationId": "options",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOptions"
                }
              }
            }
          }
        }
      }
    },
    "/admin/management/groups/{id}": {
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Delete group",
        "description": "Delete group by ID",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format":"int64"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/repo/project": {
      "post": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Create or update project from zip file",
        "description": "Uploads a zipped project to a design repository. The upload will be performed if the project in the design repository is not locked by other user.",
        "operationId": "*",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Project Template Binary. The file type can be provided in the header field `Content-Type`:\n* ZIP (`application/zip`)",
                    "format": "binary"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Optional comment used as initial commit Git message. If it's empty, the default commit message will be used like: \n```\nThe project <project-name> is created\n```"
                  }
                }
              },
              "encoding": {
                "file": {
                  "contentType": "application/zip"
                }
              }
            },
            "application/zip": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "deprecated": true
      }
    },
    "/public/notification.txt": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notification message",
        "description": "Returns notification message if exists, or empty",
        "operationId": "getNotification",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "Current Text Notification or empty",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/repo/lockProject/{name}": {
      "post": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Lock project",
        "description": "Locks the given project. The lock will be set if this project is not locked.",
        "operationId": "lockProject",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/public/info/openl.json": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Get OpenL Information",
        "description": "Returns OpenL Information like version, build number, build version, and etc.",
        "operationId": "getOpenLInfo",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/management/groups": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get all groups",
        "description": "Get all groups with their privileges and subgroups",
        "operationId": "getGroups",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/UIGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Save or update group",
        "description": "Save new group or update existed one",
        "operationId": "saveGroup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "oldName": {
                    "type": "string",
                    "description": "Previous group name"
                  },
                  "name": {
                    "type": "string",
                    "description": "Group name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Group description"
                  },
                  "group": {
                    "uniqueItems": true,
                    "type": "array",
                    "description": "Subgroups",
                    "items": {
                      "type": "string"
                    }
                  },
                  "privilege": {
                    "uniqueItems": true,
                    "type": "array",
                    "description": "Group Privileges",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/repo/project/{name}": {
      "get": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Download project",
        "description": "Download project",
        "operationId": "getLastProject",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Content-Disposition": {
                "description": "This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "Design Repository"
        ],
        "summary": "#2 Create or update project from zip file",
        "description": "Uploads a zipped project to a design repository. The upload will be performed if the project in the design repository is not locked by other user.",
        "operationId": "*",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Project Template Binary. The file type can be provided in the header field `Content-Type`:\n* ZIP (`application/zip`)",
                    "format": "binary"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Optional comment used as initial commit Git message. If it's empty, the default commit message will be used like: \n```\nThe project <project-name> is created\n```"
                  }
                }
              },
              "encoding": {
                "file": {
                  "contentType": "application/zip"
                }
              }
            }
          }
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "deprecated": true
      }
    },
    "/mail/send/{username}": {
      "post": {
        "tags": [
          "Mail"
        ],
        "summary": "Send verification token",
        "description": "Send verification token",
        "operationId": "sendVerification",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          }
        }
      }
    },
    "/test/rule": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Manual",
        "description": "Manual",
        "operationId": "manual",
        "parameters": [
          {
            "name": "response-monitor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentOpenedModule",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }, {
            "in": "query",
            "name": "skipEmptyParameters",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Content-Disposition": {
                "description": "This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Contains the session cookie which name is started with `response-monitor_` plus `response-monitor` value from query request parameter.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/xlsx": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tag-config/types/{id}": {
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update existing tag type",
        "description": "Updates existing tag type by ID",
        "operationId": "updateTagType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag type ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagTypeDTO_CreateOrUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "Updated"
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete tag type",
        "description": "Deletes tag type by ID",
        "operationId": "deleteTagType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag type ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/compile/tests/{tableId}": {
      "get": {
        "tags": [
          "Project Compilation"
        ],
        "summary": "Get test table compilation readiness",
        "description": "Get test table compilation readiness",
        "operationId": "*",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Test table ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableTestsInfo"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Get all users",
        "operationId": "getAllUsers",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserModel"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "Create new user",
        "operationId": "addUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/repos/{repo-name}/projects/{project-name}": {
      "put": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Single Project API by Design Repository",
        "description": "The main goal is to create a new OpenL Project or update from a given template (template will be provided in the request body) and store it in the requested Design Repository. The repository name can be taken from the previous API. New project is always created in the main branch if the requested repository is Git.",
        "operationId": "createProjectFromZip",
        "parameters": [
          {
            "name": "repo-name",
            "in": "path",
            "description": "Unique Identifier of target Design Repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project-name",
            "in": "path",
            "description": "Final project name. This parameter must be unique and will be used for project folder name and in rules.xml",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Project path in target repository. This parameter is optional and can be provided only if Flat folder structure is not enabled for target repository."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Optional comment used as initial commit Git message. If it's empty, the default commit message will be used like: \n```\nThe project <project-name> is created\n```"
                  },
                  "template": {
                    "type": "string",
                    "description": "Project Template Binary. The file type can be provided in the header field `Content-Type`:\n* ZIP (`application/zip`)",
                    "format": "binary"
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "Optional parameter used to specify if requested resource can be overwritten or not. \nIf a resource doesn't already exist, an overwrite flag is ignored.\nIf resource exists:\n* If overwrite = `true`, resource must be updated.\n* If overwrite = `false`, returns 409 Conflict error"
                  }
                }
              },
              "encoding": {
                "template": {
                  "contentType": "application/zip"
                }
              }
            }
          }
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectViewModel_CreateOrUpdate"
                }
              }
            }
          }
        }
      }
    },
    "/admin/management/groups/external": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Search external groups",
        "description": "Search external groups",
        "operationId": "searchExternalGroup",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search term e.g. full group name or fragment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of maximum results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mail/settings": {
      "get": {
        "tags": [
          "Mail"
        ],
        "summary": "Mail settings",
        "description": "Mail settings",
        "operationId": "getMailConfig",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailConfigModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mail"
        ],
        "summary": "Update mail configuration",
        "description": "Update mail configuration",
        "operationId": "updateMailConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailConfigModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/message/{messageId}/url": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Get message URL",
        "description": "Get message URL",
        "operationId": "messageUrl",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/compile/progress/{messageId}/{messageIndex}": {
      "get": {
        "tags": [
          "Project Compilation"
        ],
        "summary": "Get project compilation progress",
        "description": "Gets project compilation progress",
        "operationId": "*",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Latest message ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "messageIndex",
            "in": "path",
            "description": "Latest message index",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompileModuleInfo"
                }
              }
            }
          }
        }
      }
    },
    "/repo/project/{name}/{version}": {
      "get": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Download project by specific revision",
        "description": "Download project by specific revision",
        "operationId": "getProject",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Project version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Content-Disposition": {
                "description": "This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/module/isModified": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Check module modification",
        "description": "Checks if current project module is modified.\nReturns the following:\n* `true` if modified\n* `false` if not modified\n* Empty response if it is not possible to get module status",
        "operationId": "isModuleModified",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "Modification status",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/config/application.properties":{
      "get":{
        "summary":"Download application.properties file",
        "description":"Downloads `application.properties` file with description of all properties.",
        "operationId":"getApplicationProperties",
        "responses":{
          "423":{
            "description":"Locked",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/BaseError"
                }
              }
            }
          },
          "500":{
            "description":"Internal Server Error",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/BaseError"
                }
              }
            }
          },
          "403":{
            "description":"Forbidden",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/BaseError"
                }
              }
            }
          },
          "404":{
            "description":"Not Found",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/BaseError"
                }
              }
            }
          },
          "409":{
            "description":"Conflict",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/BaseError"
                }
              }
            }
          },
          "400":{
            "description":"Bad Request",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200":{
            "description":"default response",
            "content":{
              "text/plain;charset=UTF-8":{
                "schema":{
                  "type":"string"
                }
              }
            }
          }
        }
      }
    },
    "/history/project": {
      "get": {
        "tags": [
          "History"
        ],
        "summary": "Get project history",
        "description": "Get currently opened project history",
        "operationId": "getProjectHistory",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectHistoryItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user details",
        "description": "Get user details by username",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit user",
        "description": "Edit existing user",
        "operationId": "editUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete existing user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/admin/management/groups/settings": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get groups settings",
        "description": "Get groups settings",
        "operationId": "getSettings",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettingsModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Save groups settings",
        "description": "Save groups settings",
        "operationId": "saveSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSettingsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/trace/nodes": {
      "get": {
        "tags": [
          "Trace"
        ],
        "summary": "Get trace nodes",
        "description": "Gets child trace nodes by parent node ID",
        "operationId": "getNodes",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Parent trace node ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showRealNumbers",
            "in": "query",
            "description": "Number pretty format. If `true`, `0.30000000000001` will be displayed as `0.3`",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TraceNode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conflict/local": {
      "get": {
        "tags": [
          "Conflict"
        ],
        "summary": "Get local changes",
        "description": "Gets local changes",
        "operationId": "local",
        "parameters": [
          {
            "name": "repo-id",
            "in": "query",
            "description": "Design Repository ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Artifact Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-monitor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "Local Excel file",
            "headers": {
              "Content-Disposition": {
                "description": "This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Contains the session cookie which name is started with `response-monitor_` plus `response-monitor` value from query request parameter.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/compile/project": {
      "get": {
        "tags": [
          "Project Compilation"
        ],
        "summary": "Get project compilation readiness",
        "description": "Get project compilation readiness",
        "operationId": "project",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/admin/management/privileges": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get privileges",
        "description": "Get privileges",
        "operationId": "getPrivileges",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/groups/external": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user external groups",
        "description": "Get user external groups",
        "operationId": "getUserExternalGroups",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "matched",
            "in": "query",
            "description": "* If not defined, returns all external groups for user \n* If matched = `true`, returns all external groups which are matched with WebStudio groups\n* If matched = `false`, returns all external groups which are not matched with WebStudio groups",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/compare/xls": {
      "post": {
        "tags": [
          "Compare"
        ],
        "summary": "Compare Excel files",
        "description": "Compares two Excel files",
        "operationId": "compareXls",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "File Name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file1": {
                    "type": "string",
                    "description": "First Excel File",
                    "format": "binary"
                  },
                  "file2": {
                    "type": "string",
                    "description": "Second Excel File",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file1": {
                  "contentType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"
                },
                "file2": {
                  "contentType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"
                }
              }
            }
          }
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "Comparison Result Location",
            "headers": {
              "Location": {
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/mail/verify/{token}": {
      "get": {
        "tags": [
          "Mail"
        ],
        "summary": "Verify e-mail",
        "description": "Verify e-mail",
        "operationId": "verify",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Verification token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/admin/notification.txt": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Save new notification message",
        "description": "Saves new text notification. If request body is empty, removes existing notification",
        "operationId": "postNotification",
        "requestBody": {
          "description": "Notification text to save or empty to remove existing",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/compile/table/{tableId}": {
      "get": {
        "tags": [
          "Project Compilation"
        ],
        "summary": "Get table compilation progress",
        "description": "Get table compilation progress",
        "operationId": "table",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableInfo"
                }
              }
            }
          }
        }
      }
    },
    "/test/testcase": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Download test results",
        "description": "Download test results",
        "operationId": "download",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Test table ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRanges",
            "in": "query",
            "description": "Comma separated test case IDs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pp",
            "in": "query",
            "description": "Tests per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "response-monitor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentOpenedModule",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Content-Disposition": {
                "description": "This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Contains the session cookie which name is started with `response-monitor_` plus `response-monitor` value from query request parameter.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/xlsx": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tag-config/types": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get all types",
        "description": "Finds all types",
        "operationId": "getTypes",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagTypeDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Create new tag type",
        "description": "Creates new tag type",
        "operationId": "addTagType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagTypeDTO_CreateOrUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tag-config/types/{tagTypeId}/tags": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add new tag to tag type",
        "description": "Adds new tag to existing tag type",
        "operationId": "addTag",
        "parameters": [
          {
            "name": "tagTypeId",
            "in": "path",
            "description": "Tag type ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/repos": {
      "get": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Get Design Repositories",
        "description": "Retrieve the List of configured Design Repositories",
        "operationId": "getRepositoryList",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "The list of configured Design Repositories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepositoryViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/tag-config/types/{tagTypeId}/tags/{id}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete existing tag from tag type",
        "description": "Deletes tag from tag type by ID",
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "tagTypeId",
            "in": "path",
            "description": "Tag type ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/public/info/sys.json": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Get System Information",
        "description": "Returns System Information like Java version, OS version, current type, available used resources RAM, CPU, threads, and etc.",
        "operationId": "getSysInfo",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conflict/repository": {
      "get": {
        "tags": [
          "Conflict"
        ],
        "summary": "Get changes from repository",
        "description": "Get changes from repository",
        "operationId": "repository",
        "parameters": [
          {
            "name": "repo-id",
            "in": "query",
            "description": "Design Repository ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Artifact Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Artifact Version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-monitor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "Excel file from repository",
            "headers": {
              "Content-Disposition": {
                "description": "This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Contains the session cookie which name is started with `response-monitor_` plus `response-monitor` value from query request parameter.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/repo/unlockProject/{name}": {
      "post": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Unlock project",
        "description": "Unlocks the given project. The unlock will be set if this project is locked by current user.",
        "operationId": "unlockProject",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/repos/{repo-name}/projects": {
      "get": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Get Project List by Repository",
        "description": "By default, the project list will be returned based on master branch",
        "operationId": "getProjectListByRepository",
        "parameters": [
          {
            "name": "repo-name",
            "in": "path",
            "description": "Unique Identifier of target Design Repository",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "The Project List or Empty List by Repository",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectViewModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/repo/projects": {
      "get": {
        "tags": [
          "Design Repository"
        ],
        "summary": "Get all projects",
        "description": "Gets all projects from default design repository",
        "operationId": "getProjects",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDescription"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/admin/tag-config/types/{tagTypeId}/tags/{tagId}": {
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update existing tag in tag type",
        "description": "Updates existing tag in tag type",
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "tagTypeId",
            "in": "path",
            "description": "Tag type ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "Updated"
          }
        }
      }
    },
    "/users/info": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit current user info",
        "description": "Edit current user info",
        "operationId": "editUserInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfoModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/history": {
      "delete": {
        "tags": [
          "History"
        ],
        "summary": "Clear history",
        "description": "Clear history",
        "operationId": "deleteAllHistory",
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    },
    "/conflict/merged": {
      "get": {
        "tags": [
          "Conflict"
        ],
        "summary": "Get merged changes",
        "description": "Gets merged changes",
        "operationId": "merged",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Artifact Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-monitor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "Merged Excel file",
            "headers": {
              "Content-Disposition": {
                "description": "This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Contains the session cookie which name is started with `response-monitor_` plus `response-monitor` value from query request parameter.",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/message/{messageId}/stacktrace": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Get message stacktrace",
        "description": "Get message stacktrace",
        "operationId": "messageStacktrace",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "200": {
            "description": "default response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/history/restore": {
      "post": {
        "tags": [
          "History"
        ],
        "summary": "Restore from history",
        "description": "Restore from history",
        "operationId": "restore",
        "requestBody": {
          "description": "History ID",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "204": {
            "description": "default response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Localized error message"
          }
        }
      },
      "FieldError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Localized error message"
          },
          "field": {
            "type": "string",
            "description": "Affected field of the validated object"
          },
          "rejectedValue": {
            "type": "object",
            "description": "Rejected field value"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Localized error message"
          },
          "fields": {
            "type": "array",
            "description": "Field errors",
            "items": {
              "$ref": "#/components/schemas/FieldError"
            }
          },
          "errors": {
            "type": "array",
            "description": "Additional Global Errors",
            "items": {
              "$ref": "#/components/schemas/BaseError"
            }
          }
        }
      },
      "ModuleTestsInfo": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "compiled": {
            "type": "boolean"
          },
          "tableRunState": {
            "type": "string",
            "enum": [
              "CAN_RUN",
              "CAN_RUN_MODULE",
              "CANNOT_RUN"
            ]
          }
        }
      },
      "ChangePasswordModel": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "New password"
          },
          "confirmPassword": {
            "type": "string",
            "description": "Confirm password"
          },
          "currentPassword": {
            "type": "string",
            "description": "Current password"
          }
        }
      },
      "UserProfileEditModel": {
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "description": "User e-mail",
            "example": "test@test"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "User display name",
            "example": "John Doe"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          },
          "showHeader": {
            "type": "boolean",
            "description": "Show table headers"
          },
          "showFormulas": {
            "type": "boolean",
            "description": "Show formulas"
          },
          "testsPerPage": {
            "type": "integer",
            "description": "Test results per page",
            "format": "int32"
          },
          "testsFailuresOnly": {
            "type": "boolean",
            "description": "Test failures only"
          },
          "testsFailuresPerTest": {
            "type": "integer",
            "description": "Number of failures per test",
            "format": "int32"
          },
          "showComplexResult": {
            "type": "boolean",
            "description": "Show complex result"
          },
          "showRealNumbers": {
            "type": "boolean",
            "description": "Number pretty format. If `true`, `0.30000000000001` will be displayed as `0.3`"
          },
          "changePassword": {
            "$ref": "#/components/schemas/ChangePasswordModel"
          }
        }
      },
      "UserOptions": {
        "type": "object",
        "properties": {
          "canCreateInternalUsers": {
            "type": "boolean",
            "description": "Can create internal users"
          },
          "userMode": {
            "type": "string",
            "description": "User mode"
          },
          "emailVerification": {
            "type": "boolean",
            "description": "Is e-mail verification required"
          }
        }
      },
      "UIGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Group ID",
            "format":"int64"
          },
          "description": {
            "type": "string",
            "description": "Group description"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "Subgroups",
            "items": {
              "type": "string"
            }
          },
          "privileges": {
            "uniqueItems": true,
            "type": "array",
            "description": "Group Privileges",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NotificationModel": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Localized notification message"
          },
          "code": {
            "type": "string",
            "description": "Notification code"
          },
          "args": {
            "type": "array",
            "description": "Message arguments",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "TableDescription": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TableTestsInfo": {
        "type": "object",
        "properties": {
          "allTests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableDescription"
            }
          },
          "compiled": {
            "type": "boolean"
          }
        }
      },
      "GroupModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ADMIN",
              "DEFAULT",
              "EXTERNAL"
            ]
          }
        }
      },
      "InternalPasswordModel": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "UserExternalFlags": {
        "type": "object",
        "properties": {
          "emailVerified": {
            "type": "boolean",
            "description": "Is e-mail verified"
          },
          "displayNameExternal": {
            "type": "boolean",
            "description": "Is display name pooled from external authentication system"
          },
          "firstNameExternal": {
            "type": "boolean",
            "description": "Is first name pooled from external authentication system"
          },
          "lastNameExternal": {
            "type": "boolean",
            "description": "Is last name pooled from external authentication system"
          },
          "emailExternal": {
            "type": "boolean",
            "description": "Is e-mail pooled from external authentication system"
          }
        }
      },
      "UserModel": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "description": "User e-mail",
            "example": "test@test"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "User display name",
            "example": "John Doe"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          },
          "password": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "example": "qwerty"
          },
          "groups": {
            "uniqueItems": true,
            "type": "array",
            "description": "Assigned Groups",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Username",
            "example": "jdoe"
          },
          "internalPassword": {
            "$ref": "#/components/schemas/InternalPasswordModel"
          },
          "currentUser": {
            "type": "boolean",
            "description": "Current user marker"
          },
          "superUser": {
            "type": "boolean",
            "description": "Superuser marker"
          },
          "unsafePassword": {
            "type": "boolean",
            "description": "Unsafe password marker"
          },
          "externalFlags": {
            "$ref": "#/components/schemas/UserExternalFlags"
          },
          "notMatchedExternalGroupsCount": {
            "type": "integer",
            "description": "Number of external groups which is unknown by WebStudio",
            "format": "int64"
          },
          "online": {
            "type": "boolean",
            "description": "User online marker"
          },
          "userGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupModel"
            }
          }
        }
      },
      "ProjectViewModel_CreateOrUpdate": {
        "required": [
          "rev"
        ],
        "type": "object",
        "properties": {
          "branch": {
            "type": "string",
            "description": "Branch Name. Can be absent if current repository doesn't support branches"
          },
          "rev": {
            "type": "string",
            "description": "Revision ID"
          }
        }
      },
      "MailConfigModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Mail server url",
            "example": "smtps://mail.example.com:1587"
          },
          "username": {
            "type": "string",
            "description": "Username for authentication on mail server",
            "example": "jhon@mail.example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for authentication on mail server",
            "example": "qwerty"
          }
        }
      },
      "TagTypeDTO_CreateOrUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tag type name"
          },
          "extensible": {
            "type": "boolean"
          },
          "nullable": {
            "type": "boolean"
          }
        }
      },
      "CompileModuleInfo": {
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDescription"
            }
          },
          "messageId": {
            "type": "integer",
            "format": "int64"
          },
          "messageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorsCount": {
            "type": "integer",
            "format": "int32"
          },
          "warningsCount": {
            "type": "integer",
            "format": "int32"
          },
          "modulesCount": {
            "type": "integer",
            "format": "int32"
          },
          "modulesCompiled": {
            "type": "integer",
            "format": "int32"
          },
          "compilationCompleted": {
            "type": "boolean"
          }
        }
      },
      "MessageDescription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "summary": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "INFO",
              "WARN",
              "ERROR"
            ]
          }
        }
      },
      "ProjectHistoryItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string"
          },
          "current": {
            "type": "boolean"
          }
        }
      },
      "GroupSettingsModel": {
        "type": "object",
        "properties": {
          "defaultGroup": {
            "maxLength": 65,
            "minLength": 0,
            "type": "string",
            "description": "Default user group"
          }
        }
      },
      "TraceNode": {
        "type": "object",
        "properties": {
          "lazy": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "tooltip": {
            "type": "string"
          },
          "key": {
            "type": "integer",
            "format": "int32"
          },
          "extraClasses": {
            "type": "string"
          }
        }
      },
      "UserEditModel": {
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "description": "User e-mail",
            "example": "test@test"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "User display name",
            "example": "John Doe"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          },
          "password": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "example": "qwerty"
          },
          "groups": {
            "uniqueItems": true,
            "type": "array",
            "description": "Assigned Groups",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OpenlProblemMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "summary": {
            "type": "string"
          },
          "hasStacktrace": {
            "type": "boolean"
          },
          "errorCode": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasLinkToCell": {
            "type": "boolean"
          },
          "tableId": {
            "type": "string"
          },
          "errorCell": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "INFO",
              "WARN",
              "ERROR"
            ]
          }
        }
      },
      "PairStringTableDescription": {
        "type": "object",
        "properties": {
          "left": {
            "type": "string"
          },
          "right": {
            "$ref": "#/components/schemas/TableDescription"
          },
          "value": {
            "$ref": "#/components/schemas/TableDescription"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "TableInfo": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenlProblemMessage"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenlProblemMessage"
            }
          },
          "targetTables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PairStringTableDescription"
            }
          },
          "tableUrl": {
            "type": "string"
          },
          "tableRunState": {
            "type": "string",
            "enum": [
              "CAN_RUN",
              "CAN_RUN_MODULE",
              "CANNOT_RUN"
            ]
          }
        }
      },
      "RepositoryViewModel": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Repository unique identifier. Used as identifier in all requests"
          },
          "name": {
            "type": "string",
            "description": "Repository display name"
          }
        }
      },
      "UserCreateModel": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "description": "User e-mail",
            "example": "test@test"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "User display name",
            "example": "John Doe"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          },
          "password": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "example": "qwerty"
          },
          "groups": {
            "uniqueItems": true,
            "type": "array",
            "description": "Assigned Groups",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Username",
            "example": "jdoe"
          },
          "internalPassword": {
            "$ref": "#/components/schemas/InternalPasswordModel"
          }
        }
      },
      "ProjectViewModel": {
        "required": [
          "modifiedAt",
          "modifiedBy",
          "name",
          "rev"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Project Name"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Author of latest update"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Date and time of latest update",
            "format": "date-time"
          },
          "branch": {
            "type": "string",
            "description": "Branch Name. Can be absent if current repository doesn't support branches"
          },
          "rev": {
            "type": "string",
            "description": "Revision ID"
          },
          "path": {
            "type": "string",
            "description": "Project path in target repository. Can be absent if Design Repository is flat"
          }
        }
      },
      "TagDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Tag ID",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Tag name"
          },
          "tagTypeId": {
            "type": "integer",
            "description": "Linked tag type ID",
            "format": "int64"
          }
        }
      },
      "TagTypeDTO": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Tag type ID",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Tag type name"
          },
          "extensible": {
            "type": "boolean"
          },
          "nullable": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "description": "Nested tags",
            "items": {
              "$ref": "#/components/schemas/TagDTO"
            }
          }
        }
      },
      "ProjectDescription": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "emailModifiedBy": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "lockedBy": {
            "type": "string"
          },
          "lockedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserProfileModel": {
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "description": "User e-mail",
            "example": "test@test"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "User display name",
            "example": "John Doe"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          },
          "showHeader": {
            "type": "boolean",
            "description": "Show table headers"
          },
          "showFormulas": {
            "type": "boolean",
            "description": "Show formulas"
          },
          "testsPerPage": {
            "type": "integer",
            "description": "Test results per page",
            "format": "int32"
          },
          "testsFailuresOnly": {
            "type": "boolean",
            "description": "Test failures only"
          },
          "testsFailuresPerTest": {
            "type": "integer",
            "description": "Number of failures per test",
            "format": "int32"
          },
          "showComplexResult": {
            "type": "boolean",
            "description": "Show complex result"
          },
          "showRealNumbers": {
            "type": "boolean",
            "description": "Number pretty format. If `true`, `0.30000000000001` will be displayed as `0.3`"
          },
          "username": {
            "type": "string",
            "description": "Username"
          },
          "externalFlags": {
            "$ref": "#/components/schemas/UserExternalFlags"
          }
        }
      },
      "UserInfoModel": {
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 0,
            "type": "string",
            "description": "User e-mail",
            "example": "test@test"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "User display name",
            "example": "John Doe"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "lastName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          }
        }
      },
      "Table": {
        "required": [
          "id",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Table name"
          },
          "id": {
            "type": "string",
            "description": "Table ID"
          },
          "url": {
            "type": "string",
            "description": "Table URL"
          },
          "dependencies": {
            "uniqueItems": true,
            "type": "array",
            "description": "Dependent tables if any",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
