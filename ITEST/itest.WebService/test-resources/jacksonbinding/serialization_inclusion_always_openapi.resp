HTTP/1.1 200
Content-Type: application/json

{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "Auto-generated OpenAPI schema from the OpenL rules",
    "title" : "rules-serializationInclusionAlways",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://example.com/rules-serializationInclusionAlways"
  } ],
  "paths" : {
    "/getObject" : {
      "get" : {
        "description" : "Rules method: org.openl.generated.beans.MyType getObject()",
        "operationId" : "getObject",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyType"
                }
              }
            },
            "description" : "Successful operation"
          },
          "204" : {
            "description" : "Successful operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Cannot parse 'bar' to JSON",
                  "type" : "BAD_REQUEST"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description" : "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "Example 1" : {
                    "description" : "Example 1",
                    "value" : {
                      "message" : "Some message",
                      "type" : "USER_ERROR"
                    }
                  },
                  "Example 2" : {
                    "description" : "Example 2",
                    "value" : {
                      "message" : "Some message",
                      "code" : "code.example",
                      "type" : "USER_ERROR"
                    }
                  }
                },
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JAXRSUserErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/JAXRSErrorResponse"
                  } ]
                }
              }
            },
            "description" : "Custom user errors in rules or validation errors in input parameters"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Failed to load lazy method.",
                  "type" : "COMPILATION"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description" : "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary" : "MyType getObject()"
      }
    }
  },
  "components" : {
    "schemas" : {
      "JAXRSErrorResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "USER_ERROR", "RULES_RUNTIME", "COMPILATION", "SYSTEM", "BAD_REQUEST", "VALIDATION" ]
          }
        }
      },
      "JAXRSUserErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "LocalTime" : {
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nano" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MyType" : {
        "type" : "object",
        "properties" : {
          "b" : {
            "type" : "boolean"
          },
          "intArr" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "intArr2" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "ld" : {
            "type" : "string",
            "format" : "date"
          },
          "ldt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lt" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "num" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 22
          },
          "obj" : {
            "type" : "object"
          },
          "opt" : {
            "type" : "object"
          },
          "opt2" : {
            "type" : "object"
          },
          "str" : {
            "type" : "string",
            "default" : "test"
          },
          "zdt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      }
    }
  }
}