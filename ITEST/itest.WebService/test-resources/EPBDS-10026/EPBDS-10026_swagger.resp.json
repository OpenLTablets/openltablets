{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "EPBDS-10026"
  },
  "basePath": "/REST/EPBDS-10026/EPBDS-10026",
  "paths": {
    "/main": {
      "post": {
        "summary": "Main main(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.Main main(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "main",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Main"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/mySpr": {
      "post": {
        "summary": "MySpr mySpr(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.MySpr mySpr(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "mySpr",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MySpr"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/mySpr2": {
      "post": {
        "summary": "MySpr2 mySpr2(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.MySpr2 mySpr2(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "mySpr2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MySpr2"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/arrSpreadsheetResultspr1": {
      "post": {
        "summary": "Spr1[] arrSpreadsheetResultspr1(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.Spr1[] arrSpreadsheetResultspr1(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "arrSpreadsheetResultspr1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Spr1"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/arrSpreadsheetResult": {
      "post": {
        "summary": "AnySpreadsheetResult[] arrSpreadsheetResult(IRulesRuntimeContext)",
        "description": "Method: org.openl.generated.spreadsheetresults.AnySpreadsheetResult[] arrSpreadsheetResult(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "arrSpreadsheetResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnySpreadsheetResult"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    },
    "/arrObjSpreadsheetResult": {
      "post": {
        "summary": "Object[] arrObjSpreadsheetResult(IRulesRuntimeContext)",
        "description": "Method: java.lang.Object[] arrObjSpreadsheetResult(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "arrObjSpreadsheetResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DefaultRulesRuntimeContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AnySpreadsheetResult": {
      "type": "object",
      "properties": {
        "value3Step3": {
          "type": "number",
          "format": "double"
        },
        "value4Step3": {
          "type": "number",
          "format": "double"
        },
        "valueStep3": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "value3Step4": {
          "type": "number",
          "format": "double"
        },
        "value4Step4": {
          "type": "number",
          "format": "double"
        },
        "valueStep4": {
          "type": "object"
        },
        "value1Step1": {
          "type": "number",
          "format": "double"
        },
        "value2Step1": {
          "type": "number",
          "format": "double"
        },
        "valueStep1": {
          "type": "object"
        },
        "value1Step2": {
          "type": "number",
          "format": "double"
        },
        "value2Step2": {
          "type": "number",
          "format": "double"
        },
        "valueStep2": {
          "type": "object"
        },
        "valueStep5": {
          "type": "object"
        },
        "valueStep6": {
          "type": "object"
        },
        "valueStep7": {
          "type": "object"
        },
        "valueStep8": {
          "type": "object"
        },
        "valueStep9": {
          "type": "object"
        },
        "valueStep10": {
          "type": "object"
        },
        "valueStep11": {
          "type": "object"
        },
        "valueStep13": {
          "type": "object"
        },
        "valueStep14": {
          "type": "object"
        },
        "valueStep15": {
          "type": "object"
        },
        "valueStep16": {
          "type": "object"
        },
        "valueStep17": {
          "type": "object"
        },
        "valueStep18": {
          "type": "object"
        },
        "valueStep19": {
          "type": "object"
        },
        "valueStep20": {
          "$ref": "#/definitions/AnySpreadsheetResult"
        },
        "valueStep21": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnySpreadsheetResult"
          }
        },
        "valueStep22": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "valueStep23": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "valueAAA": {
          "type": "number",
          "format": "double"
        },
        "valueStep0": {
          "type": "number",
          "format": "double"
        },
        "valueStep12": {
          "type": "boolean"
        },
        "RowNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ColumnNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TableDetails": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "Main": {
      "type": "object",
      "properties": {
        "step1": {
          "type": "number",
          "format": "double"
        },
        "step2": {
          "$ref": "#/definitions/Spr"
        },
        "step3": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "step4": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spr"
          }
        },
        "step5": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spr"
          }
        },
        "step6": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Spr"
            }
          }
        },
        "step7": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "step8": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step9": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step10": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AnySpreadsheetResult"
            }
          }
        },
        "step11": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnySpreadsheetResult"
          }
        },
        "step13": {
          "type": "object"
        },
        "step14": {
          "type": "object"
        },
        "step15": {
          "type": "object"
        },
        "step16": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "step17": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step18": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step19": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "step20": {
          "$ref": "#/definitions/AnySpreadsheetResult"
        },
        "step21": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spr"
          }
        },
        "step22": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step23": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "aAA": {
          "type": "number",
          "format": "double"
        },
        "RowNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ColumnNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TableDetails": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "Spr": {
      "type": "object",
      "properties": {
        "step1": {
          "type": "number",
          "format": "double"
        },
        "step2": {
          "$ref": "#/definitions/Spr1"
        },
        "step3": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "step4": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spr1"
          }
        },
        "step5": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spr1"
          }
        },
        "step6": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Spr1"
            }
          }
        },
        "step7": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "step8": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step9": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step10": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AnySpreadsheetResult"
            }
          }
        },
        "step11": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnySpreadsheetResult"
          }
        },
        "step13": {
          "type": "object"
        },
        "step14": {
          "type": "object"
        },
        "step15": {
          "type": "object"
        },
        "step16": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "step17": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step18": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step19": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "step20": {
          "$ref": "#/definitions/Spr1"
        },
        "step21": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spr1"
          }
        },
        "step22": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "step23": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Spr1": {
      "type": "object",
      "properties": {
        "step1": {
          "type": "number",
          "format": "double"
        },
        "step2": {
          "$ref": "#/definitions/Spr"
        }
      }
    },
    "JAXRSErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "USER_ERROR",
            "RULES_RUNTIME",
            "COMPILATION",
            "SYSTEM",
            "BAD_REQUEST",
            "VALIDATION"
          ]
        },
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DefaultRulesRuntimeContext": {
      "type": "object",
      "properties": {
        "currentDate": {
          "type": "string",
          "format": "date-time"
        },
        "requestDate": {
          "type": "string",
          "format": "date-time"
        },
        "lob": {
          "type": "string"
        },
        "nature": {
          "type": "string"
        },
        "usState": {
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AZ",
            "AR",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "country": {
          "type": "string",
          "enum": [
            "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB",
            "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BV", "BW", "BY",
            "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CX",
            "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK",
            "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS",
            "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR",
            "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA",
            "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK",
            "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE",
            "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM",
            "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG",
            "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TF",
            "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY",
            "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "VY", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"
          ]
        },
        "usRegion": {
          "type": "string",
          "enum": [
            "MW",
            "NE",
            "SE",
            "SW",
            "W"
          ]
        },
        "currency": {
          "type": "string",
          "enum": [
            "ALL",
            "DZD",
            "ARS",
            "AUD",
            "BHD",
            "BYR",
            "BOB",
            "BAM",
            "BRL",
            "CAD",
            "CLP",
            "CNY",
            "COP",
            "CRC",
            "HRK",
            "CZK",
            "DKK",
            "DOP",
            "EGP",
            "EUR",
            "GTQ",
            "HNL",
            "HKD",
            "HUF",
            "ISK",
            "INR",
            "IDR",
            "IQD",
            "ILS",
            "JPY",
            "JOD",
            "KWD",
            "LVL",
            "LBP",
            "LTL",
            "MKD",
            "MYR",
            "MXN",
            "MAD",
            "NZD",
            "NIO",
            "NOK",
            "OMR",
            "PAB",
            "PYG",
            "PEN",
            "PHP",
            "PLN",
            "QAR",
            "RON",
            "RUB",
            "SAR",
            "RSD",
            "SGD",
            "ZAR",
            "SDG",
            "SEK",
            "CHF",
            "SYP",
            "TWD",
            "TND",
            "TRY",
            "UAH",
            "AED",
            "GBP",
            "USD",
            "UYU",
            "VEF",
            "VND",
            "YER"
          ]
        },
        "lang": {
          "type": "string",
          "enum": [
            "ALB",
            "ARA",
            "BEL",
            "BUL",
            "CAT",
            "CHI",
            "SCR",
            "CZE",
            "DAN",
            "DUT",
            "ENG",
            "FIN",
            "FRE",
            "GER",
            "GRE",
            "HEB",
            "HIN",
            "HUN",
            "IND",
            "GLE",
            "ITA",
            "JPN",
            "LAV",
            "LIT",
            "MAC",
            "MAY",
            "MLT",
            "NOR",
            "POL",
            "POR",
            "RUM",
            "RUS",
            "SCC",
            "SLO",
            "SPA",
            "THA",
            "TUR",
            "UKR",
            "VIE"
          ]
        },
        "region": {
          "type": "string",
          "enum": [
            "NCSA",
            "EU",
            "EMEA",
            "APJ"
          ]
        },
        "caProvince": {
          "type": "string",
          "enum": [
            "AB",
            "BC",
            "PE",
            "MB",
            "NB",
            "NS",
            "NU",
            "ON",
            "QC",
            "SK",
            "NL",
            "YT",
            "NT"
          ]
        },
        "caRegion": {
          "type": "string",
          "enum": [
            "QC",
            "HQ"
          ]
        }
      }
    },
    "MySpr": {
      "type": "object",
      "properties": {
        "step1": {
          "type": "number",
          "format": "double"
        },
        "step2": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "MySpr2": {
      "type": "object",
      "properties": {
        "value3Step3": {
          "type": "number",
          "format": "double"
        },
        "value4Step3": {
          "type": "number",
          "format": "double"
        },
        "value3Step4": {
          "type": "number",
          "format": "double"
        },
        "value4Step4": {
          "type": "number",
          "format": "double"
        },
        "value1Step1": {
          "type": "number",
          "format": "double"
        },
        "value2Step1": {
          "type": "number",
          "format": "double"
        },
        "value1Step2": {
          "type": "number",
          "format": "double"
        },
        "value2Step2": {
          "type": "number",
          "format": "double"
        }
      }
    }
  }
}