HTTP/1.1 200
Content-Type: application/json

{
  "openapi": "3.0.1",
  "info": {
    "title": "service name with spaces",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": ".",
      "variables": {}
    }
  ],
  "paths": {
    "/sumTwoDoubles": {
      "post": {
        "summary": "Double sumTwoDoubles(Double, Double)",
        "description": "Rules method: java.lang.Double sumTwoDoubles(java.lang.Double a, java.lang.Double b)",
        "operationId": "sumTwoDoubles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SumTwoDoublesRequest0"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/calVehicleYear": {
      "post": {
        "summary": "Integer calVehicleYear(CalVehicleYearRequest, Double)",
        "description": "Rules method: java.lang.Integer calVehicleYear(org.openl.generated.beans.CalVehicleYearRequest v, java.lang.Double a)",
        "operationId": "calVehicleYear",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalVehicleYearRequest0"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/bar": {
      "post": {
        "summary": "String bar(SumTwoDoublesRequest)",
        "description": "Rules method: java.lang.String bar(org.openl.generated.beans.SumTwoDoublesRequest bar)",
        "operationId": "bar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SumTwoDoublesRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JAXRSUserErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "JAXRSErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "USER_ERROR",
              "RULES_RUNTIME",
              "COMPILATION",
              "SYSTEM",
              "BAD_REQUEST",
              "VALIDATION"
            ]
          }
        }
      },
      "SumTwoDoublesRequest0": {
        "type": "object",
        "properties": {
          "a": {
            "type": "number",
            "format": "double"
          },
          "b": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CalVehicleYearRequest": {
        "type": "object",
        "properties": {
          "modelYear": {
            "type": "integer",
            "format": "int32"
          },
          "vehEffectiveYear": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CalVehicleYearRequest0": {
        "type": "object",
        "properties": {
          "v": {
            "$ref": "#/components/schemas/CalVehicleYearRequest"
          },
          "a": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SumTwoDoublesRequest": {
        "type": "object",
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      }
    }
  }
}
