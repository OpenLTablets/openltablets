HTTP/1.1 200
Content-Type: application/json

{
  "openapi": "3.0.1",
  "info": {
    "title": "EPBDS-12754_EPBDS-12754",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": ".",
      "variables": {}
    }
  ],
  "paths": {
    "/Spr1": {
      "post": {
        "summary": "Spr1 Spr1(Double)",
        "description": "Rules method: SpreadsheetResultSpr1 Spr1(java.lang.Double param)",
        "operationId": "Spr1",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Spr1"
                }
              }
            }
          }
        }
      }
    },
    "/Spr2": {
      "post": {
        "summary": "Spr2 Spr2(Double, Double)",
        "description": "Rules method: SpreadsheetResultSpr2 Spr2(java.lang.Double param, java.lang.Double b)",
        "operationId": "Spr2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Spr2Request"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Spr2"
                }
              }
            }
          }
        }
      }
    },
    "/Spr3": {
      "post": {
        "summary": "Spr3 Spr3(Double)",
        "description": "Rules method: SpreadsheetResultSpr3 Spr3(java.lang.Double param)",
        "operationId": "Spr3",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Spr3"
                }
              }
            }
          }
        }
      }
    },
    "/inputRule": {
      "post": {
        "summary": "MyDatatype inputRule(SprSmartRules)",
        "description": "Rules method: org.openl.generated.beans.MyDatatype inputRule(SpreadsheetResultsprSmartRules a)",
        "operationId": "inputRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SprSmartRules"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyDatatype"
                }
              }
            }
          }
        }
      }
    },
    "/inputRule2": {
      "post": {
        "summary": "MyDatatype inputRule2(Spr1Spr2Spr3)",
        "description": "Rules method: org.openl.generated.beans.MyDatatype inputRule2(SRSpr1 & SRSpr2 & SRSpr3 a)",
        "operationId": "inputRule2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Spr1Spr2Spr3"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyDatatype"
                }
              }
            }
          }
        }
      }
    },
    "/mainSpr": {
      "post": {
        "summary": "MainSpr mainSpr(Double, Double)",
        "description": "Rules method: SpreadsheetResultmainSpr mainSpr(java.lang.Double a, java.lang.Double b)",
        "operationId": "mainSpr",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainSprRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainSpr"
                }
              }
            }
          }
        }
      }
    },
    "/myMethod": {
      "post": {
        "summary": "MyDatatype myMethod(Double)",
        "description": "Rules method: org.openl.generated.beans.MyDatatype myMethod(java.lang.Double s)",
        "operationId": "myMethod",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyDatatype"
                }
              }
            }
          }
        }
      }
    },
    "/sprSmartRules": {
      "post": {
        "summary": "SprSmartRules sprSmartRules(Double, Double, String)",
        "description": "Rules method: SpreadsheetResultsprSmartRules sprSmartRules(java.lang.Double a, java.lang.Double b, java.lang.String param)",
        "operationId": "sprSmartRules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SprSmartRulesRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "message": "Some message",
                      "code": "code.example",
                      "type": "USER_ERROR"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                },
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation"
          },
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SprSmartRules"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JAXRSUserErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["USER_ERROR", "RULES_RUNTIME", "COMPILATION", "SYSTEM", "BAD_REQUEST", "VALIDATION"]
          }
        }
      },
      "JAXRSErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["USER_ERROR", "RULES_RUNTIME", "COMPILATION", "SYSTEM", "BAD_REQUEST", "VALIDATION"]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MyDatatype": {
        "type": "object",
        "properties": {
          "dblField": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Spr1": {
        "type": "object",
        "properties": {
          "Step1": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "Step7": {
            "type": "string"
          }
        }
      },
      "Spr2": {
        "type": "object",
        "properties": {
          "paramCalc": {
            "type": "integer",
            "format": "int32"
          },
          "Step7": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Spr2Request": {
        "type": "object",
        "properties": {
          "param": {
            "type": "number",
            "format": "double"
          },
          "b": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Spr3": {
        "type": "object",
        "properties": {
          "Step4": {
            "$ref": "#/components/schemas/MyDatatype"
          }
        }
      },
      "SprSmartRules": {
        "type": "object",
        "properties": {
          "Step1": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "Step7": {
            "type": "object"
          },
          "paramCalc": {
            "type": "integer",
            "format": "int32"
          },
          "Step4": {
            "$ref": "#/components/schemas/MyDatatype"
          }
        }
      },
      "Spr1Spr2Spr3": {
        "type": "object",
        "properties": {
          "paramCalc": {
            "type": "integer",
            "format": "int32"
          },
          "Step7": {
            "type": "object"
          },
          "Step4": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "Step1": {
            "$ref": "#/components/schemas/MyDatatype"
          }
        }
      },
      "MainSpr": {
        "type": "object",
        "properties": {
          "callSpr": {
            "$ref": "#/components/schemas/SprSmartRules"
          },
          "callSpr1": {
            "$ref": "#/components/schemas/SprSmartRules"
          },
          "retCell": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyDatatype"
            }
          },
          "Stepchik1": {
            "$ref": "#/components/schemas/Spr1"
          },
          "Stepchik3": {
            "$ref": "#/components/schemas/Spr3"
          },
          "Stepchik5": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Spr1Spr3"
            }
          },
          "retCell1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyDatatype"
            }
          },
          "newStep": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Spr1Spr2Spr3"
            }
          }
        }
      },
      "Spr1Spr3": {
        "type": "object",
        "properties": {
          "Step4": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "Step1": {
            "$ref": "#/components/schemas/MyDatatype"
          },
          "Step7": {
            "type": "string"
          }
        }
      },
      "MainSprRequest": {
        "type": "object",
        "properties": {
          "a": {
            "type": "number",
            "format": "double"
          },
          "b": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SprSmartRulesRequest": {
        "type": "object",
        "properties": {
          "a": {
            "type": "number",
            "format": "double"
          },
          "b": {
            "type": "number",
            "format": "double"
          },
          "param": {
            "type": "string"
          }
        }
      }
    }
  }
}
