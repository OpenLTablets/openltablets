{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "rules-serializationInclusionAlways"
  },
  "basePath": "/rules-serializationInclusionAlways",
  "paths": {
    "/getObject": {
      "get": {
        "summary": "MyType getObject()",
        "description": "Rules method: org.openl.generated.beans.MyType getObject()",
        "operationId": "getObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MyType"
            }
          },
          "422": {
            "description": "Custom user errors in rules or validation errors in input parameters",
            "examples": {
              "application/json": {
                "message": "Some message",
                "type": "USER_ERROR"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "400": {
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc.",
            "examples": {
              "application/json": {
                "message": "Cannot parse 'bar' to JSON",
                "type": "BAD_REQUEST"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          },
          "500": {
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.",
            "examples": {
              "application/json": {
                "message": "Failed to load lazy method.",
                "type": "COMPILATION"
              }
            },
            "schema": {
              "$ref": "#/definitions/JAXRSErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LocalTime": {
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MyType": {
      "type": "object",
      "properties": {
        "num": {
          "type": "integer",
          "format": "int64",
          "default": 22
        },
        "str": {
          "type": "string",
          "default": "test"
        },
        "obj": {
          "type": "object"
        },
        "intArr": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "intArr2": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "opt": {
          "type": "object"
        },
        "opt2": {
          "type": "object"
        },
        "ldt": {
          "type": "string",
          "format": "date-time"
        },
        "ld": {
          "type": "string",
          "format": "date"
        },
        "lt": {
          "$ref": "#/definitions/LocalTime"
        },
        "zdt": {
          "type": "string",
          "format": "date-time"
        },
        "b": {
          "type": "boolean"
        }
      }
    },
    "JAXRSErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "USER_ERROR",
            "RULES_RUNTIME",
            "COMPILATION",
            "SYSTEM",
            "BAD_REQUEST",
            "VALIDATION"
          ]
        },
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}