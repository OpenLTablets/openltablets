<?xml version="1.0" encoding="UTF-8"?>
<project name="ChangeVersion" basedir="." default="help">

    <property file="version.properties"/>
    <property name="projects_root" value=".."/>

    <fileset
            id="openl_version_file"
            dir="${projects_root}"
            includes="org.openl.core/**/openl.version.properties"
            />

    <fileset
            id="all_manifest"
            dir="${projects_root}"
            includes="*/META-INF/MANIFEST.MF"
            />

    <fileset
            id="all_feature"
            dir="${projects_root}"
            includes="*.feature/feature.xml"
            />

    <fileset
            id="project_pom"
            dir="${projects_root}"
            includes="*-pom/pom.xml"
            />

    <target name="change" description="Change Version">
        <replaceregexp byline="true">
            <regexp pattern="Bundle-Version: (.*)"/>
            <substitution expression="Bundle-Version: ${version}"/>
            <fileset refid="all_manifest"/>
        </replaceregexp>

        <!--
        Eclipse's 'plugin.xml' file has line with 'version=' sequence
        <?eclipse version="3.0"?>
        that merely specifies version of Eclipse IDE.

        It is possible that other Eclipse specific files can have the same sequence.
        Luckily, our _versions_ has few leading spaces.
        -->
        <replaceregexp byline="true">
            <regexp pattern='\s\sversion="(.*)"'/>
            <substitution expression='  version="${version}"'/>
            <fileset refid="all_feature"/>
        </replaceregexp>
        <replaceregexp byline="true" description="Updates OpenL version">
            <regexp pattern="openl.version=(.*)"/>
            <substitution expression="openl.version=${version}"/>
            <fileset refid="openl_version_file"/>
        </replaceregexp>
        <replaceregexp byline="true" description="Updates build number">
            <regexp pattern="openl.build=(.*)"/>
            <substitution expression="openl.build=${build}"/>
            <fileset refid="openl_version_file"/>
        </replaceregexp>
        <replaceregexp byline="false" description="Updates base-pom version">
        	<regexp pattern="(?&lt;=&lt;version&gt;).*(?=&lt;/version&gt;[.\s]*&lt;/parent&gt;)"/>
            <substitution expression="${version_for_poms}"/>
            <fileset refid="project_pom"/>
        </replaceregexp>
        <replaceregexp byline="true" description="Updates dependecies version">
            <regexp pattern="\s*&lt;dep.version&gt;.*&lt;/dep.version&gt;"/>
            <substitution expression="    &lt;dep.version&gt;${version_for_poms}&lt;/dep.version&gt;"/>
            <fileset refid="project_pom"/>
        </replaceregexp>
    </target>

    <target name="help">
        <echo>
            1. Specify 'version' and 'build' properties in version.properties file.
            2. Start this build script with target 'change'

            Note: it does not change version in pom.xml files
            Please, rely on maven tool(s) to do that.

            P.S.
            It fails on purpose after displaying this text.
            Thus, it guarantees that build process uses this script properly.
        </echo>
        <fail message="Script must fail if target is ommitted."/>
    </target>

</project>