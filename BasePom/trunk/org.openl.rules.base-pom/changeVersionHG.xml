<?xml version="1.0" encoding="UTF-8"?>
<project name="ChangeVersion" basedir="." default="help">

	<property name="projects_root" value="C:/Projects/OpenL/">
	</property>
	<property name="previous_version" value="5.9.3.1">
	</property>
	<property name="version_for_poms" value="5.9.3.2-SNAPSHOT">
	</property>
	<property name="version" value="5.9.3.2-SNAPSHOT">
	</property>

	<fileset id="openl_version_file" dir="${projects_root}" includes="DEV/trunk/org.openl.core/**/openl.version.properties" />

	<fileset id="all_manifest" dir="${projects_root}">
		<include name="POI/trunk/**/MANIFEST.MF" />
		<include name="DEV/trunk/**/MANIFEST.MF" />
		<include name="STUDIO/trunk/**/MANIFEST.MF" />
		<include name="WSFrontend/trunk/**/MANIFEST.MF" />
		<include name="TUT/trunk/**/MANIFEST.MF" />
		<include name="Eclipse/trunk/**/MANIFEST.MF" />
	</fileset>

	<fileset id="all_feature" dir="${projects_root}" includes="Eclipse/trunk/*.feature/feature.xml" />

	<fileset id="base_pom" dir="${projects_root}" includes="BasePom/trunk/org.openl.rules.base-pom/pom.xml"/>

	<fileset id="poi.lib_classpath" dir="${projects_root}" includes="Eclipse/trunk/org.openl.poi.lib/**/*"/>

	<fileset id="other_files" dir="${projects_root}">
		<include name="Eclipse/trunk/org.openl.rules.eclipse.site/site.xml" />
		<include name="Eclipse/trunk/**/WebStudio Starter.launch" />
		<include name="TUT/trunk/org.openl.rules.tutorials/org.openl.tablets.deploy/build.xml" />
		<!-- TODO <include name="**/openl-simple-project/pom.xml"/>-->
		<include name="Eclipse/trunk/org.openl.rules.eclipse.ui.wizard/templates/template/pom.xml" />
	</fileset>

	<target name="changeHG" description="Change Version">
		<echo>Updating manifests</echo>
		<replaceregexp byline="true">
			<regexp pattern="Bundle-Version: (.*)" />
			<substitution expression="Bundle-Version: ${version}" />
			<fileset refid="all_manifest" />
		</replaceregexp>

		<!--
        Eclipse's 'plugin.xml' file has line with 'version=' sequence
        <?eclipse version="3.0"?>
        that merely specifies version of Eclipse IDE.

        It is possible that other Eclipse specific files can have the same sequence.
        Luckily, our _versions_ has few leading spaces.
        -->
		<echo>Updating features and other files</echo>
		<replaceregexp byline="false" flags="-g" description="Updates OpenL Eclipse version">
			<regexp pattern='${previous_version}' />
			<substitution expression='${version}' />
			<fileset refid="all_feature" />
			<fileset refid="other_files" />
		</replaceregexp>

		<echo>Updating openl.version.properties file</echo>
		<replaceregexp byline="true" description="Updates OpenL version">
			<regexp pattern="openl.version=(.*)" />
			<substitution expression="openl.version=${version}" />
			<fileset refid="openl_version_file" />
		</replaceregexp>

		<replaceregexp byline="true" description="Updates build number">
			<regexp pattern="openl.build=(.*)" />
			<substitution expression="openl.build=${build}" />
			<fileset refid="openl_version_file" />
		</replaceregexp>

		<echo>Updating in base-pom</echo>
		<replaceregexp byline="false" description="Updates base-pom version">
			<regexp pattern="(?&lt;=&lt;openl.version.maven&gt;).*(?=&lt;/openl.version.maven&gt;[.\s]*&lt;)" />
			<substitution expression="${version_for_poms}" />
			<fileset refid="base_pom" />
		</replaceregexp>

		<replaceregexp byline="false" description="Updates base-pom version">
			<regexp pattern="(?&lt;=&lt;openl.version.eclipse&gt;).*(?=&lt;/openl.version.eclipse&gt;[.\s]*&lt;)" />
			<substitution expression="${version}" />
			<fileset refid="base_pom" />
		</replaceregexp>

		<echo>Updating poi.modified version in org.openl.poi.lib</echo>
		<replaceregexp byline="false" description="Updates poi.modified version">
			<regexp pattern="(?&lt;=lib/org.openl.lib.poi.dev.modified-).*(?=.jar)" />
			<substitution expression="${version_for_poms}" />
			<fileset refid="poi.lib_classpath" />
		</replaceregexp>
	</target>

	<target name="help">
		<echo>
            1. Specify 'version' and 'build' properties in version.properties file.
            2. Start this build script with target 'change'

            Note: it does not change version in pom.xml files
            Please, rely on maven tool(s) to do that.

            P.S.
            It fails on purpose after displaying this text.
            Thus, it guarantees that build process uses this script properly.
        </echo>
		<fail message="Script must fail if target is ommitted." />
	</target>

</project>