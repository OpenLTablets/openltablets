### File-based local repository
# Repository factory ID for org.openl.rules.repository.file.LocalRepositoryFactory.
repo-file.factory=repo-file
# Location in the file system where a repository must be created.
repo-file.uri=${openl.home}/repositories/local
# Repository changes check interval in seconds. The value must be greater than 0.
repo-file.listener-timer-period = 10
# Property used for backward compatibilities. It defines an additional level of folders to separate deployments.
# This property will be moved to OpenL Tablets Rule Services code.
repo-file.support-deployments=false

### Database-based repository with a connection via JDBC URL
# Repository factory ID for org.openl.rules.repository.db.JdbcDBRepositoryFactory.
repo-jdbc.factory=repo-jdbc
# URL to a database in the jdbc: scheme, such as jdbc:mysql://localhost:3306/repo.
repo-jdbc.uri=jdbc:h2:${openl.home}/repositories/db/db;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=20
repo-jdbc.login=
repo-jdbc.password=
# Repository changes check interval in seconds. The value must be greater than 0.
repo-jdbc.listener-timer-period = 10

### Database-based repository with a connection via datasource stored in the JNDI context
# Repository factory ID for org.openl.rules.repository.db.DatasourceDBRepositoryFactory.
repo-jndi.factory=repo-jndi
# URL to a database datasource located in the JNDI context.
repo-jndi.uri=java:comp/env/jdbc/DB
repo-jndi.login=
repo-jndi.password=
# Repository changes check interval in seconds. The value must be greater than 0.
repo-jndi.listener-timer-period = 10

### Zipped local file system repository.
repo-zip.factory = repo-zip
# Location in the file system where a repository must be created.
repo-zip.uri = ${openl.home}/repositories/zipped
# List of zipped OpenL projects that must be available in the repository.
repo-zip.archives =

### Jar local repository. It works like repo-zip repository, but it scans the classpath to find OpenL projects.
# It determines archives as a zipped OpenL project by the following files in the root of the archive:
# * rules.xml
# * deployment.xml
# * deployment.yaml
# Or if archives locate at /openl/*.zip folder
repo-jar.factory = repo-jar
