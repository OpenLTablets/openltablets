### Git-based repository
# Repository factory ID for org.openl.rules.repository.git.GitRepositoryFactory.
repo-git.factory=repo-git
# Location of the remote Git repository.
repo-git.uri = https://github.com/user/repo.git
# Local path to the Git repository.
repo-git.local-repository-path = ${openl.home}/repositories/name
repo-git.login=
repo-git.password=
# Time to wait between the failed authentication attempt and the next attempt.
# This property prevents a user from being banned because of brute force attack.
repo-git.failed-authentication-seconds=300
# Maximum number of authentication attempts. 
# If this number is reached, authorization is available only after settings reset or OpenL Tablets WebStudio restart.
# If this property is left empty, the number of attempts is unlimited.
# If the value is set to 1, upon the first unsuccessful authentication attempt, subsequent attempts are blocked.
repo-git.max-authentication-attempts=
# Repository changes check interval in seconds. The value must be greater than zero.
repo-git.listener-timer-period=10
# Repository connection timeout in seconds. The value must be greater than zero.
repo-git.connection-timeout=60
# Branch where the changes are comitted.
# If this property is not defined, a default branch from the remote repository is used.
# If the default branch cannot be determined, the "master" branch is used.
repo-git.branch=
# List of protected branches restricted for straight commit, deletion, or merge without successfully passed tests.
repo-git.protected-branches=
# Prefix for the automatically generated tag added to every commit.
repo-git.tag-prefix=
# If the value is left empty, the gc.autoDetach state is not modified, otherwise, it is saved as a Git repository setting.
repo-git.gc-auto-detach=
# Comment message template for the Git commits.
# - {user-message} is replaced with the user defined commit message. This part of the commit message is mandatory.
# - {commit-type} is a system property for commits to recognize the commit type from a message. This part of the commit message is mandatory.
repo-git.comment-template = {user-message} Type: {commit-type}.
