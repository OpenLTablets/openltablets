<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
    default-autowire="no">

    <tx:annotation-driven transaction-manager="transactionManager" />

  <bean id="openlDataSource"
    class="org.apache.commons.dbcp.BasicDataSource">
      <property name="driverClassName" value="#{dbConfig['db.driver']}"/>
      <property name="url" value="#{dbConfig['db.url']}"/>
      <property name="username" value="#{dbConfig['db.user']}"/>
      <property name="password" value="#{dbConfig['db.password']}"/>

      <!-- The maximum number of active connections that can be allocated from
           this pool at the same time, or zero for no limit. -->
      <property name="maxActive" value="8"/>

      <!-- The maximum number of active connections that can remain idle in the
           pool, without extra ones being released, or zero for no limit. -->
      <property name="maxIdle" value="8"/>

      <!-- The minimum number of active connections that can remain idle in the
           pool, without extra ones being created, or 0 to create none. -->
      <property name="minIdle" value="0"/>

      <!-- The maximum number of milliseconds that the pool will wait (when there
           are no available connections) for a connection to be returned before
           throwing an exception, or -1 to wait indefinitely. -->
      <property name="maxWait" value="-1"/>
    </bean>

    <bean id="dataBase" class="org.openl.rules.security.common.spring.db.HsqlServerBean">
      <property name="enabled">
        <bean class="org.openl.rules.security.common.spring.ChooseObjectFactoryBean">
          <property name="testValue" value="#{dbConfig['db.hibernate.dialect']}"/>
          <property name="defaultObject" value="false"/>
          <property name="casesMap">
            <map>
              <entry key="org\.hibernate\.dialect\.HSQLDialect" value="true"/>
            </map>
          </property>
        </bean>
      </property>
      <property name="serverProperties">
        <props>
          <prop key="server.port">9102</prop>
          <prop key="server.database.0">mem:webstudio</prop>
          <prop key="server.dbname.0">webstudiodb</prop>
        </props>
      </property>
    </bean>

    <bean id="openlSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" depends-on="dataBase">
      <property name="dataSource" ref="openlDataSource"/>
      <property name="configLocation" value="classpath:/org/openl/rules/security/standalone/persistence/hibernate.cfg.xml"/>
      <property name="hibernateProperties">
        <props>
          <prop key="hibernate.dialect">#{dbConfig['db.hibernate.dialect']}</prop>
          <prop key="hibernate.show_sql">#{dbConfig['db.hibernate.show_sql']}</prop>
          <prop key="hibernate.format_sql">#{dbConfig['db.hibernate.format_sql']}</prop>
          <prop key="hibernate.use_sql_comments">#{dbConfig['db.hibernate.use_sql_comments']}</prop>
          <prop key="hibernate.jdbc.batch_size">#{dbConfig['db.hibernate.batch_size']}</prop>
          <prop key="hibernate.hbm2ddl.auto">#{dbConfig['db.hibernate.hbm2ddl.auto']}</prop>

          <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
          <prop key="hibernate.cache.use_query_cache">true</prop>
          <prop key="hibernate.connection.pool_size">100</prop>
          <prop key="hibernate.statement_cache.size">100</prop>
          <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
          <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>

          <!-- Fix incompatibility of hibernate libs in JBoss AS -->
          <prop key="hibernate.validator.apply_to_ddl">false</prop>
          <prop key="hibernate.validator.autoregister_listeners">false</prop>
        </props>
      </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
        p:sessionFactory-ref="openlSessionFactory" />

    <bean name="org.dbunit.operation.DatabaseOperation.INSERT"
      class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"/>

    <bean id="dbInitializationNeeded" class="org.openl.rules.security.common.spring.db.DbInitializationNeededChecker">
        <property name="sessionFactory" ref="openlSessionFactory"/>
        <property name="checkDbIsInitialized" value="#{dbConfig['db.populateDatabase']}"/>
    </bean>

    <!-- Populate database with demo data  -->
    <bean id="databasePopulator" class="org.openl.rules.security.common.spring.db.DbUnitDatabasePopulator"
          depends-on="openlSessionFactory">
      <property name="dataSource" ref="openlDataSource"/>
      <property name="enabled" ref="dbInitializationNeeded"/>
      <property name="ordered" value="false"/>
      <!-- for DBMS that support multiple schemata like Oracle -->
      <property name="dbSchema" value="#{dbConfig['db.schema']}"/>
      <property name="dataTypeFactory">
        <bean class="org.openl.rules.security.common.spring.ChooseObjectFactoryBean">
          <property name="testValue" value="#{dbConfig['db.hibernate.dialect']}"/>
          <property name="defaultObject">
            <bean class="org.dbunit.dataset.datatype.DefaultDataTypeFactory"/>
          </property>
          <property name="casesMap">
            <map>
              <entry key="org\.hibernate\.dialect\.Oracle.*Dialect,">
                <bean class="org.dbunit.ext.oracle.OracleDataTypeFactory"/>
              </entry>
            </map>
          </property>
        </bean>
      </property>
      <property name="databaseOperation">
        <bean class="org.openl.rules.security.common.spring.ChooseObjectFactoryBean">
          <property name="testValue" value="#{dbConfig['db.hibernate.dialect']}"/>
          <property name="defaultObject" ref="org.dbunit.operation.DatabaseOperation.INSERT"/>
          <property name="casesMap">
            <map>
              <entry key="org\.hibernate\.dialect\.SQLServerDialect">
                <bean class="org.dbunit.ext.mssql.InsertIdentityOperation">
                  <constructor-arg ref="org.dbunit.operation.DatabaseOperation.INSERT"/>
                </bean>
              </entry>
            </map>
          </property>
        </bean>
      </property>
      <property name="locations">
        <list>
          <value>classpath:META-INF/standalone/data/default_principals.xml</value>
        </list>
      </property>
    </bean>

    <bean name="aclService" class="org.openl.rules.security.standalone.service.DefaultAclService">
      <property name="sessionFactory" ref="openlSessionFactory"/>
    </bean>
</beans>