<ui:composition
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:jsffn="http://rules.openl.org/taglibs/jsffn">

    <c:set var="contextPath" value="#{facesContext.externalContext.request.contextPath}" />

    <script>
        function explain(url) {
           window.open('#{contextPath}/faces/pages/layout/frameView.xhtml' + url
               + '&amp;header=Explanation&amp;title=Explanation&amp;treePage=faces/pages/modules/explain/explain.xhtml&amp;mainPage=faces/pages/modules/explain/showExplainTable.xhtml',"_blank","toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=yes, copyhistory=yes, width=1000, height=800")
        }
    </script>

    <h:panelGroup rendered="#{runAllTestsBean.numberOfTests > 1}">
    <div class="view_header">
        <span>Number of Tests: #{runAllTestsBean.numberOfTests}</span>
        <h:outputText value="#{runAllTestsBean.numberOfFailedTests} failed"
            rendered="#{runAllTestsBean.numberOfFailedTests > 0}"
            styleClass="badge badge-error" style="margin-left: 4px" />

        <c:set var="interval" value="5" />
        <c:set var="curPage" value="#{runAllTestsBean.page}" />    
        <c:set var="maxPage" value="#{runAllTestsBean.lastPage}" />
        <c:set var="firstPage" value="#{curPage > interval ? (curPage - interval + 1) : '1'}" />
        <c:set var="lastPage" value="#{(firstPage + interval - 1) > maxPage ? maxPage : (firstPage + interval - 1)}" />
        <c:set var="perPage" value="#{runAllTestsBean.testsPerPage}" />

        <c:set var="pageUri" value="#test/runAllTests.xhtml" />
        <c:set var="pageUriExtra" value="#{!empty param.uri ? ('&amp;uri='.concat(jsffn:encodeURL(param.uri))) : ''}" />
        <c:set var="pageUriPagerExtra" value="&amp;pp=#{perPage}#{pageUriExtra}" />

        <span class="dropdown" style="position:absolute;top:7px;margin-left:45px">
            <a class="dropdown-toggle link-dropdown" data-toggle="dropdown" href="#">#{perPage == -1 ? 'All' : perPage}</a>
            per page
            <ul class="dropdown-menu link-dropdown-menu" role="menu">
                <li><a tabindex="-1" href="#{pageUri}?pp=1#{pageUriExtra}">1</a></li>
                <li><a tabindex="-1" href="#{pageUri}?pp=5#{pageUriExtra}">5</a></li>
                <li><a tabindex="-1" href="#{pageUri}?pp=20#{pageUriExtra}">20</a></li>
                <li class="divider"></li>
                <li><a tabindex="-1" href="#{pageUri}?pp=-1#{pageUriExtra}">All</a></li>
            </ul>
        </span>
        <h:panelGroup class="pagination pagination-mini" rendered="#{maxPage > 1}" style="position:absolute;top:4px;margin-left:130px">
            <ul>
                <li><a href="#{pageUri}?p=1#{pageUriPagerExtra}">«</a></li>
                <c:if test="#{curPage == 1}">
                <li class="disabled"><span>Prev</span></li>
                </c:if>
                <c:if test="#{curPage > 1}">
                <li><a href="#{pageUri}?p=#{curPage - 1}#{pageUriPagerExtra}">Prev</a></li>
                </c:if>
                <c:forEach begin="#{firstPage}" end="#{lastPage}" var="page">
                <li class="#{curPage == page ? 'active': ''}"><a href="#{pageUri}?p=#{page}#{pageUriPagerExtra}">#{page}</a></li>
                </c:forEach>
                <c:if test="#{maxPage > interval and maxPage > curPage}">
                <li><a href="#{pageUri}?p=#{lastPage + 1}#{pageUriPagerExtra}">...</a></li>
                </c:if>
                <c:if test="#{curPage == maxPage}">
                <li class="disabled"><span>Next</span></li>
                </c:if>
                <c:if test="#{curPage != maxPage}">
                <li><a href="#{pageUri}?p=#{curPage + 1}#{pageUriPagerExtra}">Next</a></li>
                </c:if>
                <li><a href="#{pageUri}?p=#{maxPage}#{pageUriPagerExtra}">»</a></li>
            </ul>
        </h:panelGroup>
    </div>
    </h:panelGroup>

    <h:panelGroup rendered="#{runAllTestsBean.numberOfTests le 1 and not empty runAllTestsBean.testedTableUri}">
    <div class="view_header">
        <h:outputText value="Results of running "/>
        <h:outputLink value="#showTable.xhtml">
            <f:param name="uri" value="#{runAllTestsBean.testedTableUri}" />
            <h:outputText value="#{runAllTestsBean.testedTableName}" />
        </h:outputLink>
    </div>
    </h:panelGroup>

    <div class="content">
        <h:outputText value="View expired. Test data is no more available." rendered="#{runAllTestsBean.numberOfTests == 1 and runAllTestsBean.expired}" />

        <h:panelGroup rendered="#{runAllTestsBean.numberOfTests > 1 or !runAllTestsBean.expired}">
            <ui:repeat value="#{runAllTestsBean.ranTests}" var="testUnitsResults">
            <div class="test">
                <h1>
                    <h:outputLink value="#showTable.xhtml"
                        styleClass="#{testUnitsResults.numberOfFailures > 0 ? 'testError' : 'testSuccess'}">
                        <f:param name="uri" value="#{testUnitsResults.testSuite.uri}" />
                        <h:outputText value="#{runAllTestsBean.getTestTableName(testUnitsResults)}" />
                    </h:outputLink>
                    <span class="badge">#{runAllTestsBean.getTestTableInfo(testUnitsResults)}</span>
                    <h:panelGroup rendered="#{testUnitsResults.numberOfFailures > 0}" class="badge badge-error" style="margin-left:3px">#{testUnitsResults.numberOfFailures} failed</h:panelGroup>
                </h1>
                <table class="table">
                    <tr>
                        <ui:repeat value="#{testUnitsResults.testDataColumnDisplayNames}" var="parameterHeader">
                            <th>#{parameterHeader}</th>
                        </ui:repeat>
                        <h:panelGroup rendered="#{testUnitsResults.anyUnitHasDescription}">
                            <th><h:outputText value="Description" /></th>
                        </h:panelGroup>
                        <h:panelGroup rendered="#{not testUnitsResults.spreadsheetResultTester}">
                            <th><h:outputText value="Expected" /></th>
                        </h:panelGroup>
                        <th>Result</th>
                    </tr>

                    <ui:repeat value="#{testUnitsResults.testUnits}" var="testUnit">
                        <tr>
                            <ui:repeat value="#{runAllTestsBean.getParamDescriptions(testUnit)}" var="parameter">
                            <td>
                                <ui:include src="/pages/modules/test/parameter.xhtml">
                                    <ui:param name="parameter" value="#{parameter}" />
                                </ui:include></td>
                            </ui:repeat>
                            <h:panelGroup rendered="#{testUnitsResults.anyUnitHasDescription}">
                                <td><h:outputText value="#{testUnit.getDescription()}" /></td>
                            </h:panelGroup>

                            <h:panelGroup rendered="#{not testUnitsResults.spreadsheetResultTester}">
                                <td>
                                    <h:panelGroup rendered="#{empty runAllTestsBean.getExplanationValueExpected(testUnit)}">
                                        <ui:repeat value="#{runAllTestsBean.getExpectedParameter(testUnit)}" var="expParam">
                                            <ui:include src="/pages/modules/test/parameter.xhtml">
                                                <ui:param name="parameter" value="#{expParam}" />
                                            </ui:include>
                                        </ui:repeat>
                                    </h:panelGroup>

                                    <h:outputLink value="javascript: explain('?rootID=#{runAllTestsBean.getExpectedExplanatorId(testUnit)}')"
                                        rendered="#{not empty runAllTestsBean.getExplanationValueExpected(testUnit)}">                                     
                                        <h:outputText value="#{runAllTestsBean.getFormattedExplanationValueExpected(testUnit)}" />                                    	
                                    </h:outputLink></td>
                            </h:panelGroup>
                            <td>
                                <ui:param name="compareResult" value="#{testUnit.compareResult()}" />

                                <h:panelGroup rendered="#{compareResult == 0 or compareResult == 1}">
                                    <h:panelGroup rendered="#{!testUnitsResults.runmethod}">
                                        <i class="#{compareResult == 0 ? 'case-success' : 'case-error'}"></i>
                                    </h:panelGroup>

                                    <h:panelGroup rendered="#{empty runAllTestsBean.getExplanationValueActual(testUnit) and empty runAllTestsBean.getSpreadsheetResult(testUnit)}">
                                        <div class="case-result">
                                            <h:panelGroup rendered="#{not runAllTestsBean.isResultThrowable(testUnit)}">
                                                <ui:repeat value="#{runAllTestsBean.getActualParameter(testUnit)}" var="actualParam">
                                                    <ui:include src="/pages/modules/test/parameter.xhtml">
                                                        <ui:param name="parameter" value="#{actualParam}" />
                                                    </ui:include>
                                                </ui:repeat>
                                            </h:panelGroup>
                                            <h:panelGroup rendered="#{runAllTestsBean.isResultThrowable(testUnit)}">
                                                <ui:repeat value="#{runAllTestsBean.getResultMessages(testUnit)}" var="actualParam">
                                                    <c:set var="messageBoxClass"
                                                        value="#{message.severity == 'ERROR' ? 'error_box' : (message.severity == 'WARN' ? 'warning_box' : 'info_box')}" />
                                                    <div class="#{messageBoxClass}">
                                                        <h:outputText id="summary" value="#{actualParam.summary}" />
                                                    </div>
                                                </ui:repeat>
                                            </h:panelGroup></div>
                                    </h:panelGroup>

                                    <h:outputLink
                                        value="javascript: explain('?rootID=#{runAllTestsBean.getActualExplanatorId(testUnit)}')"
                                        rendered="#{not empty runAllTestsBean.getExplanationValueActual(testUnit)}">
                                        <h:outputText value="#{runAllTestsBean.getFormattedExplanationValueActual(testUnit)}" />
                                    </h:outputLink>
                                    <h:outputText rendered="#{not empty runAllTestsBean.getSpreadsheetResult(testUnit)}"
                                        value="#{runAllTestsBean.getFormattedSpreadsheetResult(testUnit)}" escape="false" />
                                </h:panelGroup> 
                                <h:panelGroup rendered="#{compareResult == 2}">
                                    <ui:include src="/pages/modules/messages.xhtml">
                                        <ui:param name="messages" value="#{runAllTestsBean.getErrors(testUnit)}" />
                                        <ui:param name="editable" value="#{studio.model.editable}" />
                                    </ui:include>
                                </h:panelGroup></td>
                        </tr>
                    </ui:repeat>
                </table>
            </div>
            </ui:repeat>
        </h:panelGroup>
    </div>

</ui:composition>
