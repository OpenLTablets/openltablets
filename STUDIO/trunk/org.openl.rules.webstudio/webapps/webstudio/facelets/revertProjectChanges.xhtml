<ui:composition
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:a4j="http://richfaces.org/a4j"
    xmlns:rich="http://richfaces.org/rich"
    template="/facelets/common/studioBase.xhtml">

    <ui:define name="header">
        <style>
            .column {
                padding: 5px 11px;
                text-align: center;
            }
        </style>
        <a4j:loadScript src="resource:///js/prototype/prototype-1.6.1.js" />
    </ui:define>

    <ui:define name="page">

        <h2>Revert Module Changes</h2>

        <c:set var="history" value="#{revertProjectChangesBean.history}" />

        <h:panelGroup rendered="#{empty history}">
            <h:panelGrid>
                <p class="info_box">Module has no changes</p>
            </h:panelGrid>
        </h:panelGroup>

        <h:panelGroup rendered="#{not empty history}">
            <h:panelGrid>
                <h:messages globalOnly="true" errorClass="error_box" infoClass="info_box"
                    style="list-style: none; padding: 0px" />
            </h:panelGrid>

            <h:form>

                <rich:dataTable value="#{history}" var="historyItem" rowKeyVar="row"
                    onRowMouseOver="rowMouseOver(this)" onRowMouseOut="rowMouseOut(this)"
                    onRowClick="if (#{!historyItem.disabled}) { setVersionToRevert(#{historyItem.version}); rowMouseClick(this); }"
                    headerClass="column" columnClasses="column">
                    <rich:column>
                        <f:facet name="header">
                            <h:outputText value="#" />
                        </f:facet>
                        <h:outputText value="#{row + 1}" />
                    </rich:column>
                    <rich:column>
                        <f:facet name="header">
                            <h:outputText value="Modified On" />
                        </f:facet>
                        <h:outputText value="#{historyItem.disabled ? 'Initial' : historyItem.modifiedOn}"
                            style="#{historyItem.disabled ? 'font-weight: bold; color:red;' : ''}" />
                    </rich:column>
                    <rich:columns value="#{revertProjectChangesBean.sources}" var="source">
                        <f:facet name="header">
                            <h:outputText value="#{source}" />
                        </f:facet>
                        <h:graphicImage value="webresource/images/ok.png"
                            rendered="#{historyItem.sourceName == source}" />
                    </rich:columns>
                    <rich:column>
                        <f:facet name="header">
                            <h:outputText value="Compare" />
                        </f:facet>
                        <h:selectBooleanCheckbox
                            onclick="return checkVersionToCompare(this, #{historyItem.version})" />
                    </rich:column>
                </rich:dataTable>

                <br />
                <input type="hidden" id="versionToRevert" name="toRevert" value=""  />
                <input type="hidden" id="versionsToCompare" name="toCompare" value="" />
                <h:commandButton id="revertBtn" value="Revert" action="#{revertProjectChangesBean.revert}" />
                <a4j:commandButton id="compareBtn" value="Compare" action="#{revertProjectChangesBean.compare}"
                    oncomplete="window.open('#{contextPath}/faces/facelets/diff/compare.xhtml?disableUpload=true','Compare','width=1000,height=700,screenX=50,screenY=100,resizable=yes,scrollbars=yes,status=yes');" />
            </h:form>

        <script type="text/javascript">
            var rowHoverColor = '#FAE5C1';
            var rowDefaultColor = '#{a4jSkin.tableBackgroundColor}';
            var rowSelectedColor = '#FBBE83';
            var selectedRow;

            var versionsToCompare = [];

            var revertBtn = #{rich:element('revertBtn')};
            revertBtn.disabled = true;
            var compareBtn = #{rich:element('compareBtn')};
            compareBtn.disabled = true;

            function rowMouseOver(row) {
                row.style.cursor = 'pointer';
                if (row != selectedRow) {
                    row.style.backgroundColor = rowHoverColor;
                }
            }

            function rowMouseOut(row) {
                if (row != selectedRow) {
                    row.style.backgroundColor =  rowDefaultColor;
                }
            }

            function rowMouseClick(row, disabled) {
                if (!disabled) {
                    if (selectedRow) {
                        selectedRow.style.backgroundColor = rowDefaultColor;
                    }
                    row.style.backgroundColor = rowSelectedColor;
                    selectedRow = row;
                }
            }

            function setVersionToRevert(version) {
                $('versionToRevert').value = version;
                revertBtn.disabled = false;
            }

            function checkVersionToCompare(checkbox, version) {
                // Check
                if (checkbox.checked) {
                    if (versionsToCompare.length >= 2) {
                        alert('Ooops, maximum number of projects to compare is 2');
                        return false;
                    }
                    versionsToCompare.push(version);

                // Uncheck
                } else {
                    versionsToCompare = versionsToCompare.without(version);
                }

                $('versionsToCompare').value = versionsToCompare.join();

                if (versionsToCompare.length >= 2) {
                    compareBtn.disabled = false;
                } else {
                    compareBtn.disabled = true;
                }
            }
        </script>

        </h:panelGroup>

    </ui:define>
</ui:composition>
