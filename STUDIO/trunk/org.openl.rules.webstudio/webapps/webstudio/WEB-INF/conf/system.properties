# Common properties

# deprecated
deployer = production

project.history.home = ${webstudio.home}/project-history

user.workspace.home = ${webstudio.home}/user-workspace
user.settings.home = ${webstudio.home}/user-settings

update.system.properties = true
data.format.date = MM/dd/yyyy


# Design Repository properties

# File with NodeType definitions.
# It can be used to initialize JCR at first start.
# Note, that some implementations of JCR require manual steps to do that.
design-repository.jcr.nodetypes = /org/openl/rules/repository/openl_nodetypes.xml

design-repository.name = Design

# Where should we place new projects in the JCR?
design-repository.rules.path = /DESIGN/rules
design-repository.deployments.path = /DESIGN/deployments

# Which class should we instantiate in RepositoryFactory?
design-repository.factory = org.openl.rules.repository.factories.LocalJackrabbitDesignRepositoryFactory
# Available types are
#design-repository.factory = org.openl.rules.repository.factories.RmiJackrabbitDesignRepositoryFactory
#design-repository.factory = org.openl.rules.repository.factories.WebDavJackrabbitDesignRepositoryFactory

# Where JCR keeps its files (Local mode)
design-repository.local.home = ${webstudio.home}/design-repository

# In case of RMI this property defines how to access it
design-repository.remote.rmi.url = //localhost:1099/design-repository

# In case of WebDav this property defines how to access it
design-repository.remote.webdav.url = http://localhost:8080/design-repository


# Production Repository properties

production-repository-configs = rules-production.properties


# System properties

custom.spreadsheet.type = false
dispatching.mode = java