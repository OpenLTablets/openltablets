<div>
    <div>Table properties can be defined for all tables of a module (module level properties) in a file name of the
        module.
    </div>

    <div>The file name pattern can include:</div>
    <ul>
        <li>text symbols;</li>
        <li>table property names enclosed in '%' marks;</li>
        <li>if a table property value is supposed to be Date then Date format should be also specified right after the
            property name and colon:
            <pre>&lt;text&gt;%&lt;property name&gt;%&lt;text&gt;%&lt;property name&gt;:&lt;date format&gt;%</pre>
        </li>
    </ul>
    <div>
        Possible property names:
        <b>effectiveDate</b>,
        <b>expirationDate</b>,
        <b>startRequestDate</b>,
        <b>endRequestDate</b>,
        <b>lob</b>,
        <b>usregion</b>,
        <b>country</b>,
        <b>currency</b>,
        <b>lang</b>,
        <b>state</b>,
        <b>region</b>
    </div>
    <div>Note: Date formats description and examples can be found in
        <a href="http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" target="_blank">
            Date and Time Patterns
        </a>.
    </div>

    <br/>

    <div>For example, for a pattern <b>AUTO-%state%-%effectiveDate:MMddyyyy%</b> a user can specify values for
        properties <b>US State</b> and <b>Effective date</b> via a file name for a whole module.
    </div>
    <div>For instance, for the module with file name <b>AUTO-FL-01022014.xlsx</b> the following module
        properties: <b>US State= 'Florida'</b>, <b>Effective date = 02 Jan 2014</b> - will be retrieved and inherited
        by module tables.
    </div>

    <br/>

    <div>If a file name doesn't match the pattern then module properties are not defined.</div>

</div>