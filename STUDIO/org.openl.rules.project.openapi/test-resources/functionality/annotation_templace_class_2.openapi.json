{
  "components": {
    "schemas": {
      "BalanceDynamicIndexCalculationRequest": {
        "properties": {
          "currentFinancialData": {
            "$ref": "#/components/schemas/FinancialData"
          },
          "previousFinancialData": {
            "$ref": "#/components/schemas/FinancialData"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "BalanceQualityIndexCalculation": {
        "properties": {
          "Description_BalanceQualityIndex": {
            "type": "string"
          },
          "Description_CapitalAdequacy": {
            "type": "string"
          },
          "Description_CapitalAdequacyScore": {
            "type": "string"
          },
          "Description_ClaimsOnCustomerRatio": {
            "type": "string"
          },
          "Description_ClaimsOnCustomerRatioScore": {
            "type": "string"
          },
          "Description_CreditPortfolioQuality": {
            "type": "string"
          },
          "Description_CreditPortfolioQualityScore": {
            "type": "string"
          },
          "Description_HighLiquidityRatio": {
            "type": "string"
          },
          "Description_HighLiquidityRatioScore": {
            "type": "string"
          },
          "Description_LiabilitiesToCustomersOnDemandRatio": {
            "type": "string"
          },
          "Description_LiabilitiesToCustomersOnDemandRatioScore": {
            "type": "string"
          },
          "Description_LiquidityRatio": {
            "type": "string"
          },
          "Description_LiquidityRatioScore": {
            "type": "string"
          },
          "Description_NetMoneyMarketLiabilities": {
            "type": "string"
          },
          "Description_NetMoneyMarketLiabilitiesScore": {
            "type": "string"
          },
          "Description_OtherAssetsRatio": {
            "type": "string"
          },
          "Description_OtherAssetsRatioScore": {
            "type": "string"
          },
          "Description_QuickRatio": {
            "type": "string"
          },
          "Description_QuickRatioScore": {
            "type": "string"
          },
          "Description_SecuredByPropertyChargesClaimsRatio": {
            "type": "string"
          },
          "Description_SecuredByPropertyChargesClaimsRatioScore": {
            "type": "string"
          },
          "Value_BalanceQualityIndex": {
            "format": "double",
            "type": "number"
          },
          "Value_CapitalAdequacy": {
            "format": "double",
            "type": "number"
          },
          "Value_CapitalAdequacyScore": {
            "format": "double",
            "type": "number"
          },
          "Value_ClaimsOnCustomerRatio": {
            "format": "double",
            "type": "number"
          },
          "Value_ClaimsOnCustomerRatioScore": {
            "format": "double",
            "type": "number"
          },
          "Value_CreditPortfolioQuality": {
            "format": "double",
            "type": "number"
          },
          "Value_CreditPortfolioQualityScore": {
            "format": "double",
            "type": "number"
          },
          "Value_HighLiquidityRatio": {
            "format": "double",
            "type": "number"
          },
          "Value_HighLiquidityRatioScore": {
            "format": "double",
            "type": "number"
          },
          "Value_LiabilitiesToCustomersOnDemandRatio": {
            "format": "double",
            "type": "number"
          },
          "Value_LiabilitiesToCustomersOnDemandRatioScore": {
            "format": "double",
            "type": "number"
          },
          "Value_LiquidityRatio": {
            "format": "double",
            "type": "number"
          },
          "Value_LiquidityRatioScore": {
            "format": "double",
            "type": "number"
          },
          "Value_NetMoneyMarketLiabilities": {
            "format": "double",
            "type": "number"
          },
          "Value_NetMoneyMarketLiabilitiesScore": {
            "format": "double",
            "type": "number"
          },
          "Value_OtherAssetsRatio": {
            "format": "double",
            "type": "number"
          },
          "Value_OtherAssetsRatioScore": {
            "format": "double",
            "type": "number"
          },
          "Value_QuickRatio": {
            "format": "double",
            "type": "number"
          },
          "Value_QuickRatioScore": {
            "format": "double",
            "type": "number"
          },
          "Value_SecuredByPropertyChargesClaimsRatio": {
            "format": "double",
            "type": "number"
          },
          "Value_SecuredByPropertyChargesClaimsRatioScore": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BalanceQualityIndexCalculationRequest": {
        "properties": {
          "currentFinancialData": {
            "$ref": "#/components/schemas/FinancialData"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "Bank": {
        "properties": {
          "bankFullName": {
            "type": "string"
          },
          "bankID": {
            "type": "string"
          },
          "bankRatings": {
            "items": {
              "$ref": "#/components/schemas/Rating"
            },
            "type": "array"
          },
          "countryCode": {
            "default": "DE",
            "type": "string"
          },
          "currentFinancialData": {
            "$ref": "#/components/schemas/FinancialData"
          },
          "previousFinancialData": {
            "$ref": "#/components/schemas/FinancialData"
          },
          "qualityIndicators": {
            "$ref": "#/components/schemas/QualityIndicators"
          }
        },
        "type": "object"
      },
      "BankLimitIndexRequest": {
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "bankRatingGroup": {
            "type": "string"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "BankQualitativeIndexCalculationRequest": {
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "BankRatingCalculation": {
        "properties": {
          "Description_BalanceDynamicIndexCalculation": {
            "type": "string"
          },
          "Description_BankQualitativeIndexCalculation": {
            "type": "string"
          },
          "Description_BankRating": {
            "type": "string"
          },
          "Description_BankRatingGroup": {
            "type": "string"
          },
          "Description_IsAdequateNormativeIndexCalculation": {
            "type": "string"
          },
          "Description_Limit": {
            "type": "string"
          },
          "Description_LimitIndex": {
            "type": "string"
          },
          "Value_BalanceDynamicIndexCalculation": {
            "format": "double",
            "type": "number"
          },
          "Value_BalanceQualityIndexCalculation": {
            "$ref": "#/components/schemas/BalanceQualityIndexCalculation"
          },
          "Value_BankQualitativeIndexCalculation": {
            "format": "double",
            "type": "number"
          },
          "Value_BankRating": {
            "format": "double",
            "type": "number"
          },
          "Value_BankRatingGroup": {
            "type": "string"
          },
          "Value_IsAdequateNormativeIndexCalculation": {
            "format": "double",
            "type": "number"
          },
          "Value_Limit": {
            "format": "double",
            "type": "number"
          },
          "Value_LimitIndex": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BankRatingCalculationRequest": {
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "BankRatingGroupRequest": {
        "properties": {
          "bankRating": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "CapitalAdequacyScoreRequest": {
        "properties": {
          "capitalAdequacy": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "CapitalDynamicScoreRequest": {
        "properties": {
          "capitalDynamic": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "ClaimsOnCustomerRatioScoreRequest": {
        "properties": {
          "claimsOnCustomerRatio": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "CreditPortfolioQualityScoreRequest": {
        "properties": {
          "creditPortfolioQuality": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "DefaultRulesRuntimeContext": {
        "properties": {
          "origin" : {
            "type" : "string",
            "enum" : [ "Base", "Custom" ]
          },
          "caProvince": {
            "enum": [
              "AB", "BC", "PE", "MB", "NB", "NS", "NU", "ON", "QC", "SK", "NL", "YT", "NT"
            ],
            "type": "string"
          },
          "caRegion": {
            "enum": [
              "QC", "HQ"
            ],
            "type": "string"
          },
          "country": {
            "enum": [
              "AE", "AL", "AR", "AS", "AT", "AU", "BA", "BE", "BG", "BH", "BO", "BR", "BY", "CA", "CH", "CK", "CL",
              "CN", "CO", "CR", "CS", "CY", "CZ", "DE", "DK", "DO", "DZ", "EC", "EE", "EG", "ES", "FI", "FJ", "FR",
              "GB", "GR", "GT", "HK", "HN", "HR", "HU", "ID", "IE", "IL", "IN", "IQ", "IS", "IT", "JO", "JP", "KW",
              "LB", "LT", "LU", "LV", "MA", "MK", "MT", "MX", "MY", "NI", "NL", "NO", "NZ", "OM", "PA", "PE", "PG",
              "PH", "PL", "PR", "PT", "PY", "QA", "RO", "RU", "SA", "SB", "SD", "SE", "SG", "SI", "SK", "SV", "SY",
              "TH", "TN", "TO", "TR", "TW", "UA", "US", "UY", "VE", "VN", "VU", "WS", "YE", "ZA"
            ],
            "type": "string"
          },
          "currency": {
            "enum": [
              "ALL", "DZD", "ARS", "AUD", "BHD", "BYR", "BOB", "BAM", "BRL", "CAD", "CLP", "CNY", "COP", "CRC", "HRK",
              "CZK", "DKK", "DOP", "EGP", "EUR", "GTQ", "HNL", "HKD", "HUF", "ISK", "INR", "IDR", "IQD", "ILS", "JPY",
              "JOD", "KWD", "LVL", "LBP", "LTL", "MKD", "MYR", "MXN", "MAD", "NZD", "NIO", "NOK", "OMR", "PAB", "PYG",
              "PEN", "PHP", "PLN", "QAR", "RON", "RUB", "SAR", "RSD", "SGD", "ZAR", "SDG", "SEK", "CHF", "SYP", "TWD",
              "THB", "TND", "TRY", "UAH", "AED", "GBP", "USD", "UYU", "VEF", "VND", "YER"
            ],
            "type": "string"
          },
          "currentDate": {
            "format": "date-time",
            "type": "string"
          },
          "lang": {
            "enum": [
              "ALB", "ARA", "BEL", "BUL", "CAT", "CHI", "SCR", "CZE", "DAN", "DUT", "ENG", "FIN", "FRE", "GER", "GRE",
              "HEB", "HIN", "HUN", "IND", "GLE", "ITA", "JPN", "LAV", "LIT", "MAC", "MAY", "MLT", "NOR", "POL", "POR",
              "RUM", "RUS", "SCC", "SLO", "SPA", "THA", "TUR", "UKR", "VIE"
            ],
            "type": "string"
          },
          "lob": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "nature": {
            "type": "string"
          },
          "region": {
            "enum": [
              "NCSA", "EU", "EMEA", "APJ"
            ],
            "type": "string"
          },
          "requestDate": {
            "format": "date-time",
            "type": "string"
          },
          "usRegion": {
            "enum": [
              "MW", "NE", "SE", "SW", "W"
            ],
            "type": "string"
          },
          "usState": {
            "enum": [
              "AL", "AK", "AS", "AZ", "AR", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "ID", "IL", "IN",
              "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM",
              "NY", "NC", "ND", "MP", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VI",
              "VA", "WA", "WV", "WI", "WY"
            ],
            "type": "string"
          },
          "origin" : {
            "type" : "string",
            "enum" : [ "Base", "Custom" ]
          }
        },
        "type": "object"
      },
      "DowngradesOfBankRatingScoreRequest": {
        "properties": {
          "downgradesOfBankRating": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "EquityScoreRequest": {
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "equity": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "FinancialData": {
        "properties": {
          "capital": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "claimsOnBanks": {
            "default": 0.0,
            "format": "double",
            "type": "number"
          },
          "claimsOnCustomers": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "claimsOnDemand": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "claimsSecuredByPropertyCharges": {
            "default": 0.0,
            "format": "double",
            "type": "number"
          },
          "claimsUpTo3Months": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "consolidatedProfit": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "equity": {
            "default": 0.0,
            "format": "double",
            "type": "number"
          },
          "liabilities": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "liabilitiesOnDemand": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "liabilitiesToBanks": {
            "default": 0.0,
            "format": "double",
            "type": "number"
          },
          "liabilitiesToCustomers": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          },
          "liabilitiesToCustomersOnDemand": {
            "default": 0.0,
            "format": "double",
            "type": "number"
          },
          "loanLossProvisionsForClaimsOnCustomers": {
            "default": 0.0,
            "format": "double",
            "type": "number"
          },
          "otherAssets": {
            "default": 0.0,
            "format": "double",
            "type": "number"
          },
          "reportDate": {
            "format": "date-time",
            "type": "string"
          },
          "totalAssets": {
            "default": 0.0001,
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "HighLiquidityRatioScoreRequest": {
        "properties": {
          "highLiquidityRatio": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "IsAdequateCoreCapitalRatioScoreRequest": {
        "properties": {
          "isAdequateCoreCapitalRatio": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "IsAdequateLiquidityRatioScoreRequest": {
        "properties": {
          "isAdequateLiquidityRatio": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "IsAdequateMaxCreditRiskScoreRequest": {
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "isAdequateMaxCreditRisk": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "IsAdequateNormativeIndexCalculationRequest": {
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "JAXRSErrorResponse": {
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "enum": [
              "USER_ERROR", "RULES_RUNTIME", "COMPILATION", "SYSTEM", "BAD_REQUEST", "VALIDATION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "JAXRSUserErrorResponse": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LiabilitiesToCustomersDynamicScoreRequest": {
        "properties": {
          "LiabToCustDynamic": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "LiabilitiesToCustomersOnDemandRatioScoreRequest": {
        "properties": {
          "liabilitiesToCustOnDemand": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "LiquidityDynamicScoreRequest": {
        "properties": {
          "liquidityDynamic": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "LiquidityRatioScoreRequest": {
        "properties": {
          "liquidityRatio": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "LossesInThisYearScoreRequest": {
        "properties": {
          "lossesInThisYear": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "NegativeHistoryRelationsScoreRequest": {
        "properties": {
          "negativeHistoryRelations": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "NegativeInfoShareHoldersOrManagementScoreRequest": {
        "properties": {
          "negativeManagInfo": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "NegativeMassMediaScoreRequest": {
        "properties": {
          "negativeMassMedia": {
            "type": "boolean"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "NetMoneyMarketLiabilitiesScoreRequest": {
        "properties": {
          "netMoneyMarketLiabilities": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "OtherAssetsRatioScoreRequest": {
        "properties": {
          "otherAssetsRatio": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "ProfitDynamicScoreRequest": {
        "properties": {
          "profit": {
            "format": "double",
            "type": "number"
          },
          "profitDynamic": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "QualityIndicators": {
        "properties": {
          "downgradesOfBankRating": {
            "default": false,
            "type": "boolean"
          },
          "isAdequateCoreCapitalRatio": {
            "default": true,
            "type": "boolean"
          },
          "isAdequateLiquidityRatio": {
            "default": true,
            "type": "boolean"
          },
          "isAdequateMaxCreditRisk": {
            "default": true,
            "type": "boolean"
          },
          "lossesInThisYear": {
            "default": false,
            "type": "boolean"
          },
          "negativeHistoryRelations": {
            "default": false,
            "type": "boolean"
          },
          "negativeInfoShareHoldersOrManagement": {
            "default": false,
            "type": "boolean"
          },
          "negativeMassMedia": {
            "default": false,
            "type": "boolean"
          },
          "reportDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QuickRatioScoreRequest": {
        "properties": {
          "quickRatio": {
            "format": "double",
            "type": "number"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "Rating": {
        "properties": {
          "rating": {
            "type": "string"
          },
          "ratingAgency": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecuredByPropertyChargesClaimsRatioScoreRequest": {
        "properties": {
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "securedClaimsRatio": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "SetNonZeroValuesRequest": {
        "properties": {
          "financialData": {
            "$ref": "#/components/schemas/FinancialData"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          }
        },
        "type": "object"
      },
      "TotalBalanceScoreRequest": {
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "runtimeContext": {
            "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "totalBalance": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "openapi": "3.#.#",
  "paths": {
    "/prefix/BalanceDynamicIndexCalculation": {
      "post": {
        "description": "Rules method: java.lang.Double BalanceDynamicIndexCalculation(org.openl.generated.beans.FinancialData currentFinancialData, org.openl.generated.beans.FinancialData previousFinancialData)",
        "operationId": "BalanceDynamicIndexCalculation",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceDynamicIndexCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double BalanceDynamicIndexCalculation(IRulesRuntimeContext, FinancialData, FinancialData)"
      }
    },
    "/prefix/BalanceQualityIndexCalculation": {
      "post": {
        "description": "Rules method: SpreadsheetResultBalanceQualityIndexCalculation BalanceQualityIndexCalculation(org.openl.generated.beans.FinancialData currentFinancialData)",
        "operationId": "BalanceQualityIndexCalculation",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceQualityIndexCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceQualityIndexCalculation"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "BalanceQualityIndexCalculation BalanceQualityIndexCalculation(IRulesRuntimeContext, FinancialData)"
      }
    },
    "/prefix/BankLimitIndex": {
      "post": {
        "description": "Rules method: java.lang.Double BankLimitIndex(org.openl.generated.beans.Bank bank, RatingGroup bankRatingGroup)",
        "operationId": "BankLimitIndex",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankLimitIndexRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double BankLimitIndex(IRulesRuntimeContext, Bank, String)"
      }
    },
    "/prefix/BankQualitativeIndexCalculation": {
      "post": {
        "description": "Rules method: java.lang.Double BankQualitativeIndexCalculation(org.openl.generated.beans.Bank bank)",
        "operationId": "BankQualitativeIndexCalculation",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankQualitativeIndexCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double BankQualitativeIndexCalculation(IRulesRuntimeContext, Bank)"
      }
    },
    "/prefix/BankRatingCalculation": {
      "post": {
        "description": "Rules method: SpreadsheetResultBankRatingCalculation BankRatingCalculation(org.openl.generated.beans.Bank bank)",
        "operationId": "BankRatingCalculation",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankRatingCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRatingCalculation"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "BankRatingCalculation BankRatingCalculation(IRulesRuntimeContext, Bank)"
      }
    },
    "/prefix/BankRatingGroup": {
      "post": {
        "description": "Rules method: RatingGroup BankRatingGroup(java.lang.Double bankRating)",
        "operationId": "BankRatingGroup",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankRatingGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "String BankRatingGroup(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/CapitalAdequacyScore": {
      "post": {
        "description": "Rules method: java.lang.Double CapitalAdequacyScore(java.lang.Double capitalAdequacy)",
        "operationId": "CapitalAdequacyScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapitalAdequacyScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double CapitalAdequacyScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/CapitalDynamicScore": {
      "post": {
        "description": "Rules method: java.lang.Double CapitalDynamicScore(java.lang.Double capitalDynamic)",
        "operationId": "CapitalDynamicScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapitalDynamicScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double CapitalDynamicScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/ClaimsOnCustomerRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double ClaimsOnCustomerRatioScore(java.lang.Double claimsOnCustomerRatio)",
        "operationId": "ClaimsOnCustomerRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimsOnCustomerRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double ClaimsOnCustomerRatioScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/CreditPortfolioQualityScore": {
      "post": {
        "description": "Rules method: java.lang.Double CreditPortfolioQualityScore(java.lang.Double creditPortfolioQuality)",
        "operationId": "CreditPortfolioQualityScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditPortfolioQualityScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double CreditPortfolioQualityScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/DowngradesOfBankRatingScore": {
      "post": {
        "description": "Rules method: java.lang.Double DowngradesOfBankRatingScore(boolean downgradesOfBankRating)",
        "operationId": "DowngradesOfBankRatingScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DowngradesOfBankRatingScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double DowngradesOfBankRatingScore(IRulesRuntimeContext, boolean)"
      }
    },
    "/prefix/EquityScore": {
      "post": {
        "description": "Rules method: java.lang.Double EquityScore(CountryCode countryCode, java.lang.Double equity)",
        "operationId": "EquityScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquityScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double EquityScore(IRulesRuntimeContext, String, Double)"
      }
    },
    "/prefix/HighLiquidityRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double HighLiquidityRatioScore(java.lang.Double highLiquidityRatio)",
        "operationId": "HighLiquidityRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HighLiquidityRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double HighLiquidityRatioScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/IsAdequateCoreCapitalRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double IsAdequateCoreCapitalRatioScore(java.lang.Boolean isAdequateCoreCapitalRatio)",
        "operationId": "IsAdequateCoreCapitalRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsAdequateCoreCapitalRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double IsAdequateCoreCapitalRatioScore(IRulesRuntimeContext, Boolean)"
      }
    },
    "/prefix/IsAdequateLiquidityRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double IsAdequateLiquidityRatioScore(java.lang.Boolean isAdequateLiquidityRatio)",
        "operationId": "IsAdequateLiquidityRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsAdequateLiquidityRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double IsAdequateLiquidityRatioScore(IRulesRuntimeContext, Boolean)"
      }
    },
    "/prefix/IsAdequateMaxCreditRiskScore": {
      "post": {
        "description": "Rules method: java.lang.Double IsAdequateMaxCreditRiskScore(CountryCode countryCode, java.lang.Boolean isAdequateMaxCreditRisk)",
        "operationId": "IsAdequateMaxCreditRiskScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsAdequateMaxCreditRiskScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double IsAdequateMaxCreditRiskScore(IRulesRuntimeContext, String, Boolean)"
      }
    },
    "/prefix/IsAdequateNormativeIndexCalculation": {
      "post": {
        "description": "Rules method: java.lang.Double IsAdequateNormativeIndexCalculation(org.openl.generated.beans.Bank bank)",
        "operationId": "IsAdequateNormativeIndexCalculation",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsAdequateNormativeIndexCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double IsAdequateNormativeIndexCalculation(IRulesRuntimeContext, Bank)"
      }
    },
    "/prefix/LiabilitiesToCustomersDynamicScore": {
      "post": {
        "description": "Rules method: java.lang.Double LiabilitiesToCustomersDynamicScore(java.lang.Double LiabToCustDynamic)",
        "operationId": "LiabilitiesToCustomersDynamicScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiabilitiesToCustomersDynamicScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double LiabilitiesToCustomersDynamicScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/LiabilitiesToCustomersOnDemandRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double LiabilitiesToCustomersOnDemandRatioScore(java.lang.Double liabilitiesToCustOnDemand)",
        "operationId": "LiabilitiesToCustomersOnDemandRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiabilitiesToCustomersOnDemandRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double LiabilitiesToCustomersOnDemandRatioScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/LiquidityDynamicScore": {
      "post": {
        "description": "Rules method: java.lang.Double LiquidityDynamicScore(java.lang.Double liquidityDynamic)",
        "operationId": "LiquidityDynamicScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiquidityDynamicScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double LiquidityDynamicScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/LiquidityRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double LiquidityRatioScore(java.lang.Double liquidityRatio)",
        "operationId": "LiquidityRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiquidityRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double LiquidityRatioScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/LossesInThisYearScore": {
      "post": {
        "description": "Rules method: java.lang.Double LossesInThisYearScore(java.lang.Boolean lossesInThisYear)",
        "operationId": "LossesInThisYearScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LossesInThisYearScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double LossesInThisYearScore(IRulesRuntimeContext, Boolean)"
      }
    },
    "/prefix/MaxLimit": {
      "post": {
        "description": "Rules method: java.lang.Double MaxLimit()",
        "operationId": "MaxLimit",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double MaxLimit(IRulesRuntimeContext)"
      }
    },
    "/prefix/NegativeHistoryRelationsScore": {
      "post": {
        "description": "Rules method: java.lang.Double NegativeHistoryRelationsScore(java.lang.Boolean negativeHistoryRelations)",
        "operationId": "NegativeHistoryRelationsScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NegativeHistoryRelationsScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double NegativeHistoryRelationsScore(IRulesRuntimeContext, Boolean)"
      }
    },
    "/prefix/NegativeInfoShareHoldersOrManagementScore": {
      "post": {
        "description": "Rules method: java.lang.Double NegativeInfoShareHoldersOrManagementScore(java.lang.Boolean negativeManagInfo)",
        "operationId": "NegativeInfoShareHoldersOrManagementScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NegativeInfoShareHoldersOrManagementScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double NegativeInfoShareHoldersOrManagementScore(IRulesRuntimeContext, Boolean)"
      }
    },
    "/prefix/NegativeMassMediaScore": {
      "post": {
        "description": "Rules method: java.lang.Double NegativeMassMediaScore(java.lang.Boolean negativeMassMedia)",
        "operationId": "NegativeMassMediaScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NegativeMassMediaScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double NegativeMassMediaScore(IRulesRuntimeContext, Boolean)"
      }
    },
    "/prefix/NetMoneyMarketLiabilitiesScore": {
      "post": {
        "description": "Rules method: java.lang.Double NetMoneyMarketLiabilitiesScore(java.lang.Double netMoneyMarketLiabilities)",
        "operationId": "NetMoneyMarketLiabilitiesScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetMoneyMarketLiabilitiesScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double NetMoneyMarketLiabilitiesScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/OtherAssetsRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double OtherAssetsRatioScore(java.lang.Double otherAssetsRatio)",
        "operationId": "OtherAssetsRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtherAssetsRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double OtherAssetsRatioScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/ProfitDynamicScore": {
      "post": {
        "description": "Rules method: java.lang.Double ProfitDynamicScore(java.lang.Double profitDynamic, java.lang.Double profit)",
        "operationId": "ProfitDynamicScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfitDynamicScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double ProfitDynamicScore(IRulesRuntimeContext, Double, Double)"
      }
    },
    "/prefix/QuickRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double QuickRatioScore(java.lang.Double quickRatio)",
        "operationId": "QuickRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double QuickRatioScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/SecuredByPropertyChargesClaimsRatioScore": {
      "post": {
        "description": "Rules method: java.lang.Double SecuredByPropertyChargesClaimsRatioScore(java.lang.Double securedClaimsRatio)",
        "operationId": "SecuredByPropertyChargesClaimsRatioScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecuredByPropertyChargesClaimsRatioScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double SecuredByPropertyChargesClaimsRatioScore(IRulesRuntimeContext, Double)"
      }
    },
    "/prefix/SetNonZeroValues": {
      "post": {
        "description": "Rules method: void SetNonZeroValues(org.openl.generated.beans.FinancialData financialData)",
        "operationId": "SetNonZeroValues",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetNonZeroValuesRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "void SetNonZeroValues(IRulesRuntimeContext, FinancialData)"
      }
    },
    "/prefix/TotalBalanceScore": {
      "post": {
        "description": "Rules method: java.lang.Double TotalBalanceScore(java.lang.Double totalBalance, CountryCode countryCode)",
        "operationId": "TotalBalanceScore",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotalBalanceScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Double TotalBalanceScore(IRulesRuntimeContext, Double, String)"
      }
    },
    "/prefix/getBankData": {
      "post": {
        "description": "Method: org.openl.generated.beans.Bank[] getBankData(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getBankData",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Bank"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Bank[] getBankData(IRulesRuntimeContext)"
      }
    },
    "/prefix/getBankFinancialData": {
      "post": {
        "description": "Method: org.openl.generated.beans.FinancialData[] getBankFinancialData(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getBankFinancialData",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FinancialData"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "FinancialData[] getBankFinancialData(IRulesRuntimeContext)"
      }
    },
    "/prefix/getBankRatingList": {
      "post": {
        "description": "Method: org.openl.generated.beans.Rating[] getBankRatingList(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getBankRatingList",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "Rating[] getBankRatingList(IRulesRuntimeContext)"
      }
    },
    "/prefix/getQualityIndicatorsData": {
      "post": {
        "description": "Method: org.openl.generated.beans.QualityIndicators[] getQualityIndicatorsData(org.openl.rules.context.IRulesRuntimeContext)",
        "operationId": "getQualityIndicatorsData",
        "parameters": [{"example":"en-GB","in":"header","name":"Accept-Language","schema":{"type":"string"}}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultRulesRuntimeContext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QualityIndicators"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful operation"
          },
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Cannot parse 'bar' to JSON",
                  "type": "BAD_REQUEST"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Example 1": {
                    "description": "Example 1",
                    "value": {
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  },
                  "Example 2": {
                    "description": "Example 2",
                    "value": {
                      "code": "code.example",
                      "message": "Some message",
                      "type": "USER_ERROR"
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JAXRSUserErrorResponse"
                    }, {
                      "$ref": "#/components/schemas/JAXRSErrorResponse"
                    }
                  ]
                }
              }
            },
            "description": "Custom user errors in rules or validation errors in input parameters"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Failed to load lazy method.",
                  "type": "COMPILATION"
                },
                "schema": {
                  "$ref": "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description": "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary": "QualityIndicators[] getQualityIndicatorsData(IRulesRuntimeContext)"
      }
    }
  }
}
