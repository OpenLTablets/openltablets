# OpenAPI specification allows the formatting of description fields at all levels.
# Thus, according to the specification, wherever the description field is permissible, we can format it,
# and the description field conforms to the CommonMark formatting style
# @see https://spec.commonmark.org/0.30
repos.create-project-from-zip.desc = The main goal is to create a new OpenL Project or update from a given template (template will be provided in the request body) and store it in the requested Design Repository. The repository name can be taken from the previous API. New project is always created in the main branch if the requested repository is Git.
repos.create-project-from-zip.summary = Single Project API by Design Repository
repos.create-project-from-zip.param.project-name.desc = Final project name. This parameter must be unique and will be used for project folder name and in rules.xml
repos.create-project-from-zip.param.path.desc = Project path in target repository. This parameter is optional and can be provided only if Flat folder structure isn't enabled for target repository.
repos.create-project-from-zip.param.comment.desc = Optional comment used as initial commit Git message. If it's empty, the default commit message will be used like: \n```\nThe project <project-name> is created\n```
repos.create-project-from-zip.param.overwrite.desc = Optional parameter used to specify if requested resource can be overwritten or not. \n\
  If a resource doesn't already exist, an overwrite flag is ignored.\n\
  If resource exists:\n\
  * If overwrite = `true`, resource must be updated.\n\
  * If overwrite = `false`, returns 409 Conflict error
repos.create-project-from-zip.param.template.desc = Project Template Binary. The file type can be provided in the header field `Content-Type`:\n\
   * ZIP (`application/zip`)

repos.get-project-list-by-repository.desc = By default, the project list will be returned based on master branch
repos.get-project-list-by-repository.summary = Get Project List by Repository
repos.get-project-list-by-repository.200.desc = The Project List or Empty List by Repository

repos.get-repository-list.desc = Retrieve the List of configured Design Repositories
repos.get-repository-list.summary = Get Design Repositories
repos.get-repository-list.200.desc = The list of configured Design Repositories

tags.get-types.desc = Finds all types
tags.get-types.summary = Get all types

tags.add-tag-type.summary = Create new tag type
tags.add-tag-type.desc = Creates new tag type

tags.delete-tag-type.summary = Delete tag type
tags.delete-tag-type.desc = Deletes tag type by ID

tags.update-tag-type.summary = Update existing tag type
tags.update-tag-type.desc = Updates existing tag type by ID

tags.delete-tag.summary = Delete existing tag from tag type
tags.delete-tag.desc = Deletes tag from tag type by ID

tags.add-tag.summary = Add new tag to tag type
tags.add-tag.desc = Adds new tag to existing tag type

tags.update-tag.summary = Update existing tag in tag type
tags.update-tag.desc = Updates existing tag in tag type

tags.tag-type.id.desc = Tag type ID
tags.tag.id.desc = Tag ID

info.get-sys-info.summary = Get System Information
info.get-sys-info.desc = Returns System Information like Java version, OS version, current type, available used resources RAM, CPU, threads, and etc.

info.get-openl-info.summary = Get OpenL Information
info.get-openl-info.desc = Returns OpenL Information like version, build number, build version, and etc.

notif.get-notif.summary = Get notification message
notif.get-notif.desc = Returns notification message if exists, or empty
notif.get-notif.200.desc = Current Text Notification or empty

notif.post-notif.summary = Save new notification message
notif.post-notif.desc = Saves new text notification. If request body is empty, removes existing notification
notif.post-notif.req-body.desc = Notification text to save or empty to remove existing

module.is-module-modified.summary = Check module modification
module.is-module-modified.desc = Checks if current project module is modified.\n\
  Returns the following:\n\
  * `true` if modified\n\
  * `false` if not modified\n\
  * Empty response if it is not possible to get module status
module.is-module-modified.200.desc = Modification status

diff.compare-xls.summary = Compare Excel files
diff.compare-xls.desc = Compares two Excel files
diff.compare-xls.303.desc = Comparison Result Location
diff.field.file.1 = First Excel File
diff.field.file.2 = Second Excel File
diff.field.file-name = File Name

trace.get-nodes.summary = Get trace nodes
trace.get-nodes.desc = Gets child trace nodes by parent node ID
trace.field.showRealNumbers = Number pretty format. If `true`, `0.30000000000001` will be displayed as `0.3`
trace.field.id = Parent trace node ID

conflict.merged.summary = Get merged changes
conflict.merged.desc = Gets merged changes
conflict.merged.200.desc = Merged Excel file

conflict.local.summary = Get local changes
conflict.local.desc = Gets local changes
conflict.local.200.desc = Local Excel file

conflict.repository.summary = Get changes from repository
conflict.repository.desc = Get changes from repository
conflict.repository.200.desc = Excel file from repository

conflict.field.repo-id = Design Repository ID
conflict.field.name = Artifact Name
conflict.field.version = Artifact Version

conflict.header.content-disposition.desc = This header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.
conflict.header.set-cookie.desc = Contains the session cookie which name is started with `response-monitor_` plus `response-monitor` value from query request parameter.
