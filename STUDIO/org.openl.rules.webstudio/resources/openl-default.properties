# Log rounds to use. The value must be between 4 and 31.
# The larger the strength parameter is, the more work is to be done (exponentially) to hash the passwords.
# The default value is 10.
webstudio.bcrypt.strength = 10

webstudio.analytics = false

# Identifier of whether OpenL Tablets WebStudio is configured for work. 
# If not, at startup, the installation wizard for setup is displayed.
webstudio.configured = false

# System properties
custom.spreadsheet.type = true
dispatching.mode = java
dispatching.validation=true

# Define authentication mode using one of the following values:
# - single - no authentication. 
#   A single DEFAULT user with administrative privileges will be used. This value is convenient for local usage.
# - demo - in-memory database-based authentication with predefined set of users: a1, u0 ... u4, user, admin
# - multi - database-based authentication with initial administrative user. For more information, see db.* properties.
# - ad - LDAP / Active Directory.
# - saml - SAML.
# - cas - CAS.
# Additional settings are described in security.* properties.
user.mode = single

# Comma-separated list of users with assigned ADMIN permissions for initial setup of OpenL Tablets WebStudio.
# If users do not exist in a database, they are created and then assigned a group with the ADMIN permission.
# If such group does not exist yet, it is created.
security.administrators =

# Definition of a default group for any authenticated user. 
# It can be a restricted read-only 'Viewers' group so that any logged in user can view projects in OpenL Tablets WebStudio but cannot modify them.
# If this property is defined, logged in users are automatically added to the database therefore simplifying initial user management.
security.default-group =

# Number of threads in which tests are executed.
test.run.thread.count = 4

compile.auto = true

# Encoding used to uncompress zip file if UTF-8 is not applicable.
# Note: Depending on the system locale, Windows zips are often compressed using the DOS charset, and not the Windows ANSI charset.
zip.charsets.support = IBM866, IBM437, IBM850, windows-1252, windows-1251, windows-1250, ISO-8859-1

# Common properties

user.workspace.home = ${openl.home.shared}/user-workspace

project.history.count = 100

update.system.properties = false
data.format.date = MM/dd/yyyy
data.format.time = hh:mm:ss a
data.format.datetime = ${data.format.date} ${data.format.time}

# Compatibility properties
openl.compatibility.version =

### Database properties
db.url = jdbc:h2:${openl.home}/users-db/db;AUTO_SERVER=TRUE
db.user =
db.password =
###

### Mail server connection
# Server URL defined as follows: smtps://mail.example.com:1587
mail.url=
# Username for authentication on the mail server defined as "jhon@mail.example.com" or "jhon".
mail.username=
mail.password=

### Default values for user settings
rules.tree.view = type

table.view = developer
table.formulas.show = false

test.export.to.excel = false
test.tests.perpage = 5
test.failures.only = false
test.failures.pertest = 5
test.result.complex.show = false
trace.realNumbers.show = false

# Default project groupings in the repository. 
# Available values are [Repository] to group by repository or any tag type defined in the Admin tab.
project.grouping.level.1 =
project.grouping.level.2 =
project.grouping.level.3 =
###

### Diff manager properties
# Comparison cleanup time in seconds after inactivity period.
diff-manager.inactive-cleanup-period = 600

### Design repository properties
design-repository-configs = design

repository.design.name = Design

# Class to instantiate in RepositoryFactory.
repository.design.factory = repo-git
# Repository URI.
repository.design.uri =

repository.design.login =
repository.design.password =

# Path to the repository directory where projects are stored. The value must end with "/".
repository.design.base.path = DESIGN/rules/


# Storage location identifier.
# If set to true, all projects are stored in the folder configured in the "repository.design.base.path" property.
# If set to false, projects can be stored in any folder.
repository.design.folder-structure.flat = true

### AWS S3 specific properties
# Non-standard service endpoint. If the value is left empty, Amazon AWS endpoint is used.
repository.design.service-endpoint = ${repo-aws-s3.service-endpoint}
# Logical unit of storage in the AWS object storage service. The value is globally unique.
repository.design.bucket-name = ${repo-aws-s3.bucket-name}
# AWS region that is geographically the closest one to a user to optimize latency, minimize costs and so on.
repository.design.region-name = ${repo-aws-s3.region-name}
# Alphanumeric text string identifying the account owner.
repository.design.access-key = ${repo-aws-s3.access-key}
# Password for a given access key.
repository.design.secret-key = ${repo-aws-s3.secret-key}
###

### Git specific properties
# Local path for the Git repository.
repository.design.local-repository-path = ${openl.home}/repositories/design
# Branch where the changes are committed.
# If this property is not defined, a default branch from a remote repository is used.
# If the default branch cannot be determined, the "master" branch is used.
repository.design.branch = ${repo-git.branch}
# List of protected branches restricted for straight commit, deletion, or merge without successfully passed tests.
repository.design.protected-branches = ${repo-git.protected-branches}
# Prefix for the automatically generated tag to be added to every commit.
repository.design.tag-prefix = ${repo-git.tag-prefix}
# Comment message template for the Git commits.
# - {user-message} is replaced by user defined commit message. This part of the commit message is mandatory.
# - {commit-type} is a system property for commits to recognize the commit type from a message. This part of the commit message is mandatory.
repository.design.comment-template = ${repo-git.comment-template}
# New branch pattern. {project-name}, {username}, and {current-date} are replaced with the corresponding values.
# The following characters are not supported: \ : * ? " < > | { } ~ ^
# Consecutive symbols '.' and '/' are not supported and cannot be used in the beginning of the value.
repository.design.new-branch.pattern = WebStudio/{project-name}/{username}/{current-date}
# Additional regular expression for validating the new branch name.
repository.design.new-branch.regex =
# Error message displayed when creating a new branch with the name that does not match the additional regular expression.
repository.design.new-branch.regex-error =
# Repository connection timeout in seconds. The value must be greater than zero.
repository.design.connection-timeout = ${repo-git.connection-timeout}
# Time to wait between the failed authentication attempt and the next attempt.
# This property prevents a user from being banned because of brute force attack.
repository.design.failed-authentication-seconds = ${repo-git.failed-authentication-seconds}
# Maximum number of authentication attempts. 
# If this number is reached, authorization is available only after settings reset or OpenL Tablets WebStudio restart.
repository.design.max-authentication-attempts = ${repo-git.max-authentication-attempts}
###

### AWS S3 and Git specific properties
# Repository changes check interval in seconds. The value must be greater than 0.
repository.design.listener-timer-period = ${repo-git.listener-timer-period}
###

# Regexp to validate comments. If the value is left empty, the comment is not validated.
repository.design.comment-template.comment-validation-pattern =
# Message displayed for the invalid comment.
repository.design.comment-template.invalid-comment-message = Invalid comment: Comment doesn't match validation pattern

### User message default properties
repository.design.comment-template.use-custom-comments = false
repository.design.comment-template.user-message.default.save = Project {project-name} is saved.
repository.design.comment-template.user-message.default.create = Project {project-name} is created.
repository.design.comment-template.user-message.default.archive = Project {project-name} is archived.
repository.design.comment-template.user-message.default.restore = Project {project-name} is restored.
repository.design.comment-template.user-message.default.erase = Project {project-name} is erased.
repository.design.comment-template.user-message.default.copied-from = Copied from: {project-name}.
# Supported variables: {revision}, {author}, {datetime}
repository.design.comment-template.user-message.default.restored-from = Restored from revision of {author} on {datetime}.
###

### Deploy configuration repository properties
# If the value is left empty, deploy configuration repository uses its own settings.
# Otherwise, the specified design repository is used to store deploy configurations.
repository.deploy-config.use-repository =

repository.deploy-config.name = Deploy Configuration

# Class to instantiate in RepositoryFactory.
repository.deploy-config.factory = repo-git

# Deploy configuration repository URI.
repository.deploy-config.uri =

repository.deploy-config.login =
repository.deploy-config.password =

# Path to the repository folder where deploy configurations are stored. The value must end with "/".
repository.deploy-config.base.path = DESIGN/deployments/

# If set to true, all projects are stored in the folder configured in the "repository.deploy-config.base.path" property.
# If set to false, projects can be stored in any folder.
repository.deploy-config.folder-structure.flat = true

### AWS S3 specific properties
# Non-standard service endpoint. If the value is left empty, Amazon AWS endpoint is used.
repository.deploy-config.service-endpoint = ${repo-aws-s3.service-endpoint}
# Logical unit of storage in the AWS object storage service. The value is globally unique.
repository.deploy-config.bucket-name = ${repo-aws-s3.bucket-name}
# AWS region that is geographically the closest one to a user to optimize latency, minimize costs and so on.
repository.deploy-config.region-name = ${repo-aws-s3.region-name}
# Alphanumeric text string that identifies the account owner.
repository.deploy-config.access-key = ${repo-aws-s3.access-key}
# Password for a given access key.
repository.deploy-config.secret-key = ${repo-aws-s3.secret-key}
###

### Git specific properties
# Local path for the Git repository.
repository.deploy-config.local-repository-path = ${openl.home}/repositories/deploy-config
# Branch where the changes are committed.
# If this property is not defined, a default branch from a remote repository is used.
# If the default branch cannot be determined, the "master" branch is used.
repository.deploy-config.branch = ${repo-git.branch}
# Prefix for the automatically generated tag to be added to every commit.
repository.deploy-config.tag-prefix = ${repo-git.tag-prefix}
# Comment message template for the Git commits.
# - {user-message} is replaced by user defined commit message. This part of the commit message is mandatory.
# - {commit-type} is a system property for commits to recognize the commit type from a message. This part of the commit message is mandatory.
repository.deploy-config.comment-template = ${repo-git.comment-template}
# Repository connection timeout in seconds. The value must be greater than zero.
repository.deploy-config.connection-timeout = ${repo-git.connection-timeout}
# Time to wait between the failed authentication attempt and the next attempt.
# This property prevents a user from being banned because of brute force attack.
repository.deploy-config.failed-authentication-seconds = ${repo-git.failed-authentication-seconds}
# Maximum number of authentication attempts.
# If this number is reached, authorization is available only after settings reset or OpenL Tablets WebStudio restart.
repository.deploy-config.max-authentication-attempts = ${repo-git.max-authentication-attempts}
###

### AWS S3 and Git specific properties
# Repository changes check interval in seconds. The value must be greater than 0.
repository.deploy-config.listener-timer-period = ${repo-git.listener-timer-period}
###


# Regexp to validate comments. If the value is left empty, the comment is not validated.
repository.deploy-config.comment-template.comment-validation-pattern =
# Message displayed for the invalid comment.
repository.deploy-config.comment-template.invalid-comment-message = Invalid comment: Comment doesn't match validation pattern
### User message default settings
repository.deploy-config.comment-template.use-custom-comments = false
repository.deploy-config.comment-template.user-message.default.save = Deploy configuration {project-name} is saved.
repository.deploy-config.comment-template.user-message.default.create = Deploy configuration {project-name} is created.
repository.deploy-config.comment-template.user-message.default.archive = Deploy configuration {project-name} is archived.
repository.deploy-config.comment-template.user-message.default.restore = Deploy configuration {project-name} is restored.
repository.deploy-config.comment-template.user-message.default.erase = Deploy configuration {project-name} is erased.
repository.deploy-config.comment-template.user-message.default.copied-from = Copied from: {project-name}.
# Supported variables: {revision}, {author}, {datetime}
repository.deploy-config.comment-template.user-message.default.restored-from = Restored from revision of {author} on {datetime}.
###

### Central Authentication Service (CAS) properties
# OpenL Tablets WebStudio server url.
security.cas.app-url = https://localhost:8443/webstudio
# CAS server URL.
security.cas.cas-server-url-prefix = https://localhost:9443/cas
# CAS 3.0 protocol validator prefix that contains "/p3" in url and can retrieve attributes. If CAS 2.0 is used, remove "/p3".
security.cas.cas-server-ticket-validator-prefix = ${security.cas.cas-server-url-prefix}/p3
# CAS attribute for the first name. Keep it empty if the CAS server does not return this attribute.
security.cas.attribute.first-name =
# CAS attribute for the second name. Keep it empty if the CAS server does not return this attribute.
security.cas.attribute.last-name =
# CAS attribute for groups. Keep it empty if the CAS server does not return this attribute, or groups are managed in OpenL Tablets WebStudio.
security.cas.attribute.groups =

### SAML properties
# Important: all SAML attributes are case-sensitive.

# Property that enables the identity provider to identify (distinguish) OpenL Tablets WebStudio as a separate service provider.
# In Keycloak IdP, the value must exactly match the client ID.
# In Okta, the value must match the service provider entity ID.
security.saml.entity-id = webstudio
# SAML server metadata URL in the XML format used for binding to the server to retrieve additional settings for autoconfiguration.
security.saml.saml-server-metadata-url=
# SAML attribute for the username. Keep it empty if the SAML server does not return this attribute or a default algorithm for username retrieval must be used.
security.saml.attribute.username =
# SAML attribute for the first name. Keep it empty if the SAML server does not return this attribute.
security.saml.attribute.first-name = urn:oid:2.5.4.42
# SAML attribute for the second name. Keep it empty if the SAML server does not return this attribute.
security.saml.attribute.last-name = urn:oid:2.5.4.4
# SAML attribute for the display name. Keep it empty if the SAML server does not return this attribute.
security.saml.attribute.display-name = urn:oid:2.16.840.1.113730.3.1.241
# SAML attribute for the email. Keep it empty if the SAML server does not return this attribute.
security.saml.attribute.email = urn:oid:0.9.2342.19200300.100.1.3
# SAML attribute for groups. Keep it empty if the SAML server does not return this attribute or groups are managed in OpenL Tablets WebStudio.
# Typical attributes: Role, Group, groups, member.
security.saml.attribute.groups =
# Sets binding for sending a SAML message to IDP. The value can be left empty or set to the value resembling the following:
# - urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
# - urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
# - urn:oasis:names:tc:SAML:2.0:bindings:PAOS
# - urn:oasis:names:tc:SAML:2.0:profiles:holder-of-key:SSO:browser
security.saml.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
# Base-64 encoded string that contains a public key for the SAML IDP server.
security.saml.server-certificate=
# Identifier of whether IdP must force a user to reauthenticate.
security.saml.forceAuthN = false

### OAuth2 properties
# Important: all OAuth2 attributes are case-sensitive.

# Identifier of whether the identity provider must identify OpenL Tablets WebStudio as a separate service provider.
# For Keycloak OP, the value must exactly match the client ID.
# For Okta, the value must match the service provider entity ID.
security.oauth2.client-id = webstudio
# Client secret used by the OAuth Client to authenticate to the authorization server.
security.oauth2.client-secret =
# OAuth2 authorization server URL. It is used for binding with the server to get additional settings for autoconfiguration.
security.oauth2.issuer-uri =
# The scope requested by a client during the authorization request flow, such as openid, email, or profile.
# https://oauth.net/2/scope/
security.oauth2.scope = openid,profile
# Authorization grant, that is, credentials representing the resource owner's authorization.
# https://oauth.net/2/grant-types/
security.oauth2.grant-type = authorization_code
# OAuth2 attribute for the username. Keep it empty if the OAuth2 server does not return this attribute or a default algorithm for username retrieval must be used.
security.oauth2.attribute.username = preferred_username
# OAuth2 attribute for the first name. Keep it empty if the OAuth2 server does not return this attribute.
security.oauth2.attribute.first-name = given_name
# OAuth2 attribute for the second name. Keep it empty if the OAuth2 server does not return this attribute.
security.oauth2.attribute.last-name = family_name
# OAuth2 attribute for the display name. Keep it empty if the OAuth2 server does not return this attribute.
security.oauth2.attribute.display-name = name
# OAuth2 attribute for the email. Keep it empty if the OAuth2 server does not return this attribute.
security.oauth2.attribute.email = email
# OAuth2 attribute for groups. Keep it empty if the OAuth2 server does not return this attribute or groups are managed in OpenL Tablets WebStudio.
# Typical attributes: Role, Group, groups, member.
security.oauth2.attribute.groups = groups

### Active Directory (AD) properties
# Default domain against which a user is logged in.
# If the value is not defined, the domain is retrieved from the user's login.
#security.ad.domain=example.com
security.ad.domain=
# Authentication server.
security.ad.server-url=ldap://ldap.example.com:3268

# Occurrences of {0} are replaced with UPN that resembles login@domain.

# Occurrences of {1} are replaced with the login only.
# Filter for searching for a logged in user in the LDAP system.
# - for PRE Windows 2000
#security.ad.search-filter=(&(objectClass=user)(sAMAccountName={1}))
# - simple case for OpenLDAP
#security.ad.search-filter=(uid={0})
# - for Active Directory
security.ad.search-filter=(&(objectClass=user)(userPrincipalName={0}))

# Occurrences of {2} are replaced with the DN of the found user.
# Select all groups and their nested groups in LDAP to which a user belongs.
security.ad.group-filter=(&(objectClass=group)(member:1.2.840.113556.1.4.1941:={2}))

# Production repository properties.
production-repository-configs = production

repository.production.name = Deployment

# Property for accessing a databases via JDBC.
repository.production.factory = repo-jdbc
repository.production.uri = jdbc:h2:mem:repo;DB_CLOSE_DELAY=-1

# Property for accessing a databases JNDI. this property defines how to access it
#repository.production.factory = repo-jndi
#repository.production.uri = java:comp/env/jdbc/deploymentDB

#Login and password for a remote repository.
repository.production.login =
repository.production.password =

### AWS S3 specific properties
# Non-standard service endpoint. If the value is left empty, Amazon AWS endpoint is used.
repository.production.service-endpoint = ${repo-aws-s3.service-endpoint}
# Logical unit of storage in the AWS object storage service. The value is globally unique.
repository.production.bucket-name = ${repo-aws-s3.bucket-name}
# AWS region that is geographically the closest one to a user to optimize latency, minimize costs and so on.
repository.production.region-name = ${repo-aws-s3.region-name}
# Alphanumeric text string identifying the account owner.
repository.production.access-key = ${repo-aws-s3.access-key}
# Password for a given access key.
repository.production.secret-key = ${repo-aws-s3.secret-key}
###

### Git specific properties
# Local path for a Git repository.
repository.production.local-repository-path = ${openl.home}/repositories/production
# Branch where the changes are committed.
# If this property is not defined, a default branch from a remote repository is used.
# If the default branch cannot be determined, the "master" branch is used.
repository.production.branch = ${repo-git.branch}
# Prefix for the automatically generated tag to be added to every commit.
repository.production.tag-prefix = ${repo-git.tag-prefix}
# Comment template for commits. 
# - {commit-type} is for predefined OpenL Tablets-specific commit types used by OpenL Tablets.
# - {user-message} is for a meaningful message describing commit.
repository.production.comment-template = ${repo-git.comment-template}
# Repository connection timeout in seconds. The value must be greater than zero.
repository.production.connection-timeout = ${repo-git.connection-timeout}
# Time to wait between the failed authentication attempt and the next attempt.
# This property prevents a user from being banned because of brute force attack.
repository.production.failed-authentication-seconds = ${repo-git.failed-authentication-seconds}
# Maximum number of authentication attempts.
# If this number is reached, authorization is available only after settings reset or OpenL Tablets WebStudio restart.
repository.production.max-authentication-attempts = ${repo-git.max-authentication-attempts}
###

### AWS S3 and Git specific properties
# Repository changes check interval in seconds. The value must be greater than 0.
repository.production.listener-timer-period= ${repo-git.listener-timer-period}
###
# Path to the repository folder where deployments are stored. The value must end with "/".
repository.production.base.path=deploy/


#Notification displayed to all OpenL Tablets WebStudio users.
admin.notification-file=${openl.home.shared}/notification.txt


# Class to instantiate in RepositoryFactory.
repository.settings.factory = repo-file
# Repository URI.
repository.settings.uri = ${openl.home.shared}/repositories/settings

# Folder for locks used in repository settings.
repository.settings.locks.root = ${openl.home.shared}/locks/repositories/settings
# Maximum time a lock can live, in seconds.
repository.settings.locks.time-to-live = 60

# Default name and path for a module with the data types generated from the OpenAPI file.
openapi.default.data.module.name = Models
openapi.default.data.module.path = rules/Models.xlsx
# Default name and path for a module with the rules generated from the OpenAPI file.
openapi.default.algorithm.module.name = Algorithms
openapi.default.algorithm.module.path = rules/Algorithms.xlsx

### CORS support
#
# Comma-separated list of origins allowed to access the resource.
# Use an asterix * to enable access to the resource from any origin.
# Example: https://www.w3.org, https://www.example.com.
# No value means that the resource cannot be accessed.
cors.allowed.origins =

# Comma-separated list of HTTP methods to access the resource using the cross-origin requests.
# These methods are a part of the Access-Control-Allow-Methods header in a pre-flight response.
# Example: GET,POST.
cors.allowed.methods = GET,OPTIONS,HEAD,PUT,POST

# Comma separated list of request headers used in an actual request.
# These headers are returned as a part of the Access-Control-Allow-Headers header in a pre-flight response.
# Example: Origin,Accept.
cors.allowed.headers = Content-Type,Accept,api_key,Authorization

# Number of seconds for which a browser is allowed to cache the result of the pre-flight request.
# This value is included as a part of the Access-Control-Max-Age header in the pre-flight response.
# A negative value prevents the CORS filter from adding this response header to the pre-flight response.
cors.preflight.maxage = 7200
