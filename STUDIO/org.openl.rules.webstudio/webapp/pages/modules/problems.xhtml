<ui:composition
        xmlns="http://www.w3.org/1999/xhtml"
        xmlns:c="http://java.sun.com/jsp/jstl/core"
        xmlns:ui="http://java.sun.com/jsf/facelets">

    <c:set var="contextPath" value="#{facesContext.externalContext.request.contextPath}"/>

    <style>
        .panel-header {
            padding-left: 24px
        }

        .message-panel {
            float: left;
            padding-right: 10px;
        }

        .info-panel {
            padding-left: 25px
        }

        .message-block {
            margin-bottom: 3px;
            padding: 2px 3px;
        }

        .message-block:hover {
            background-color: lightgrey;
        }

        .message-panel-text{
            vertical-align: top;
        }

        .message-block-link{
            color: black;
            text-decoration:none;
        }

        .ui-layout-resizer-closed .layout-extractable-info{
            padding-left: 25px
        }

        .ui-layout-resizer-south .layout-extractable-info{
            line-height: 20px;
        }

        .ui-layout-resizer-south-closed {
            height: 20px !important;
            font-size: inherit !important;
            background: #ffffff;
        }

    </style>

    <div class="panel">
        <div class="panel-header container">
            <div class="info-panel layout-extractable-info">
                <div id="errors-info-panel" class='message-panel'>
                    <span class="message-panel-text">Errors:</span>
                    <span id="errors-count" class='badge badge-error'/>
                </div>
                <div id="warnings-info-panel" class='message-panel'>
                    <span class="message-panel-text">Warnings:</span>
                    <span id="warnings-count" class='badge badge-warning'/>
                </div>
                <div id="progress-info-panel" style="display: none" class='messagePanel'/>
            </div>
        </div>

        <div class="panel-body container">
            <div id="errors-panel"></div>
            <div id="warnings-panel"></div>
        </div>

        <script>
            //<![CDATA[
                var $jq = jQuery.noConflict();
                var messageId = -1;
                var messageIndex = -1;
                var projectId = ws.storage.get("WS_PREVIOUS_PAGE_STATE").project;
                var progressInfoPanel = $jq('#progress-info-panel');
                $jq('#progress-info-panel').bind('refresh', function () {
                    if (projectId != ws.storage.get("WS_PREVIOUS_PAGE_STATE").project
                        || ws.storage.get("WS_PREVIOUS_PAGE_STATE").module === "") {
                        ws.ui.problems.hide();
                        setTimeout(function () {$jq('#progress-info-panel').trigger('refresh')}, 1000);
                    } else {
                        $jq.ajax({
                            url: "#{contextPath}/web/compile/progress/" + messageId + "/" + messageIndex,
                            datatype: "json"
                        })
                        .done(function (data) {
                            progressInfoPanel.text("Compiled " + Math.round(data.modulesCompiled / data.modulesCount * 100) + "% (" + data.modulesCompiled + "/" + data.modulesCount + ")");
                            $jq('#errors-info-panel').toggle(data.errorsCount !== 0);
                            $jq('#errors-count').text(data.errorsCount);

                            $jq('#warnings-info-panel').toggle(data.warningsCount !== 0);
                            $jq('#warnings-count').text(data.warningsCount);

                            if (data.messageIndex !== -1 || data.messageId !== -1) {
                                messageIndex = data.messageIndex;
                                messageId = data.messageId;
                            }

                            if (data.messages.length !== 0) {
                                var warningsPanel = document.getElementById("warnings-panel");
                                var errorsPanel = document.getElementById("errors-panel");
                                var warningsHtml = "";
                                var errorsHtml = "";

                                data.messages.forEach(function (item) {
                                    if (item.severity === 'WARN') {
                                        warningsHtml +=
                                            "<div class='message-block problem-warning problem-small'>"
                                                + "<a href = " + item.url + " class='message-block-link'>" + ws.utils.escapeHtml(item.summary) + "</a>"
                                            + "</div>";
                                    } else if (item.severity === 'ERROR') {
                                        errorsHtml +=
                                            "<div class='message-block problem-error problem-small'>"
                                                + "<a href = " + item.url + " class='message-block-link'>" + ws.utils.escapeHtml(item.summary) + "</a>"
                                            + "</div>";
                                    }
                                });

                                var warningsDiv = document.createElement("DIV");
                                var errorsDiv = document.createElement("DIV");

                                if (data.dataType === 'new') {
                                    while(warningsPanel.firstChild) warningsPanel.removeChild(warningsPanel.firstChild);
                                    while(errorsPanel.firstChild) errorsPanel.removeChild(errorsPanel.firstChild);
                                    warningsDiv.innerHTML = warningsHtml;
                                    errorsDiv.innerHTML = errorsHtml;
                                } else {
                                    warningsDiv.innerHTML += warningsHtml;
                                    errorsDiv.innerHTML += errorsHtml;
                                }

                                warningsPanel.appendChild(warningsDiv);
                                errorsPanel.appendChild(errorsDiv);
                            }

                            if (!data.compilationCompleted) {
                                inProgress();
                                setTimeout(function () {$jq('#progress-info-panel').trigger('refresh')}, 1000);
                            } else {
                                finished();
                            }
                            if (data.compilationCompleted) {
                                ws.nav.reloadPanel('left');
                            }
                        });
                    }
                });

                $jq('#progress-info-panel').trigger('refresh');


                var inProgress = function() {
                    progressInfoPanel.attr("data-compilation-status", "inProgress");
                    progressInfoPanel.show();
                    ws.ui.problems.show();
                };

                var finished = function() {
                    progressInfoPanel.attr("data-compilation-status", "finished");
                    var timestamp = Date.now();
                    progressInfoPanel.attr("data-compilation-finished", timestamp);
                    setTimeout(function() {
                       var requiredProgressPanel =
                            $j("#progress-info-panel[data-compilation-status='finished'][data-compilation-finished='" + timestamp + "']");
                       if (requiredProgressPanel.length > 0 ) {
                            requiredProgressPanel.hide();
                            if ($jq('#warnings-count').text() == 0 && $jq('#errors-count').text() == 0) {
                                ws.ui.problems.hide()
                            }
                       }
                    }, 10000);
                };
            //]]>
        </script>
    </div>

</ui:composition>
