<?xml version="1.0" encoding="UTF-8"?>
<ui:composition
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a4j="http://richfaces.org/a4j">

    <h:panelGroup id="editProjectTagsPanel">
        #{editProjectTagsBean.init(node)}
        <h3>
            Tags
        </h3>
        <table class="formfields" style="max-width: 500px;">
            <ui:repeat value="#{editProjectTagsBean.tags}" var="tag">
                <tr>
                    <td class="label">
                        <h:outputText value="#{tag.type.name}:"/>
                    </td>
                    <td>
                        <h:outputText value="#{empty tag.name ? '[None]' : tag.name}" rendered="#{not canModifyTags}"/>

                        <h:panelGroup rendered="#{canModifyTags}" styleClass="tag-type-#{tag.type.id}">
                            <h:inputHidden value="#{tag.type.id}"/>

                            <select class="editable-select #{tag.type.extensible ? '' : 'readonly'}">
                                <h:panelGroup rendered="#{tag.type.nullable}">
                                    <h:panelGroup rendered="#{tag.name == '[None]'}">
                                        <option value="[None]" selected="selected">[None]</option>
                                    </h:panelGroup>
                                    <h:panelGroup rendered="#{tag.name != '[None]'}">
                                        <option value="[None]">[None]</option>
                                    </h:panelGroup>
                                </h:panelGroup>
                                <h:panelGroup rendered="#{not tag.type.nullable and tag.name == '[None]'}">
                                    <option value="[None]" disabled="disabled" selected="selected">[None]</option>
                                </h:panelGroup>

                                <ui:repeat value="#{editProjectTagsBean.getTagValues(tag.type.name)}" var="t">
                                    <h:panelGroup rendered="#{tag.name == t.name}">
                                        <option value="#{t.name}" selected="selected"><h:outputText value="#{t.name}"/>
                                        </option>
                                    </h:panelGroup>
                                    <h:panelGroup rendered="#{tag.name != t.name}">
                                        <option value="#{t.name}"><h:outputText value="#{t.name}"/></option>
                                    </h:panelGroup>
                                </ui:repeat>
                            </select>
                            <h:panelGroup styleClass="error"
                                          rendered="#{not empty editProjectTagsBean.errorMessage and editProjectTagsBean.typeId == tag.type.id}">
                                <h:outputText value="#{editProjectTagsBean.errorMessage}"/>
                                <script>
                                    $j(() => setTagValue('#{tag.type.id}', '#{tag.name}'));
                                </script>
                            </h:panelGroup>
                        </h:panelGroup>
                    </td>
                </tr>
            </ui:repeat>

            <h:inputHidden id="repoIdForTags" value="#{editProjectTagsBean.repoId}"/>
            <h:inputHidden id="realPathForTags" value="#{editProjectTagsBean.realPath}"/>
            <a4j:jsFunction name="saveTagChanges" action="#{editProjectTagsBean.save()}"
                            execute="repoIdForTags realPathForTags"
                            render="editProjectTagsPanel">
                <a4j:param name="typeId" assignTo="#{editProjectTagsBean.typeId}"/>
                <a4j:param name="tagName" assignTo="#{editProjectTagsBean.tagName}"/>
            </a4j:jsFunction>
        </table>

        <script>
            //<![CDATA[

            function initEditProjectTagsPanel() {
                $j('.editable-select').editableSelect({
                    filter: false
                }).on('select.editable-select', function (e, $li) {
                    let typeId = $li.parent().parent().find('input[type=hidden]').val();
                    setTagValue(null, null);
                    saveTagChanges(typeId, $li.text());
                });
                let applyManualEdit = function () {
                    let typeId = $j(this).prev('input[type=hidden]').val();
                    setTagValue(null, null);
                    saveTagChanges(typeId, $j(this).val());
                };
                let $comboInputs = $j('.editable-select.es-input');
                $comboInputs.change(applyManualEdit);
                // $comboInputs.focusout(applyManualEdit);

                $j('.editable-select').prop('readonly', false);
                $j('.editable-select.readonly').prop('readonly', true);

                if (editingTagTypeId) {
                    let $edit = $j('.tag-type-' + editingTagTypeId + ' .editable-select.es-input');
                    $edit.val(editingTagValue);
                }
            }

            $j(() => initEditProjectTagsPanel());

            //]]>
        </script>

    </h:panelGroup>

    <script>
        let editingTagTypeId;
        let editingTagValue;

        function setTagValue(typeId, value) {
            editingTagTypeId = typeId;
            editingTagValue = value;
        }
    </script>
</ui:composition>
