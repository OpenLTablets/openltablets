<ui:composition
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:a4j="http://richfaces.org/a4j"
    xmlns:rich="http://richfaces.org/rich">
    <h:outputText rendered="#{empty parameter or empty parameter.value}" value="Empty"
        styleClass="case-empty" />
    <h:panelGroup rendered="#{!empty parameter and !empty parameter.value}">
        <h:panelGroup rendered="#{parameter.type.simple}">
            <h:outputText value="#{helper.formatText(parameter.value, (empty showRealNumbers ? false : showRealNumbers))}"
                rendered="#{!parameterTreeBuilder.isDateParameter(parameter.value) and trace}" />
            <h:outputText value="#{helper.format(parameter.value)}"
                          rendered="#{!parameterTreeBuilder.isDateParameter(parameter.value) and !trace}" />
            <h:outputText value="#{parameter.value}"
                rendered="#{parameterTreeBuilder.isDateParameter(parameter.value)}">
                <f:convertDateTime pattern="#{environment.getProperty('data.format.date')}" />
            </h:outputText>
        </h:panelGroup>
        <h:panelGroup rendered="#{parameterTreeBuilder.isHtmlTable(parameter)}">
            <h:outputText value="#{parameterTreeBuilder.tableToHtml(parameter)}" escape="false" />
        </h:panelGroup>

        <h:panelGroup styleClass="prmt"
            rendered="#{!parameterTreeBuilder.isHtmlTable(parameter) and !parameter.type.simple}">

            <!-- New approach for lazy parameter loading (when requestId is passed) -->
            <h:panelGroup rendered="#{(empty lazy or lazy == 'true') and not empty requestId}">
                <div class="rf-tr param-tree lazy-param-description">
                    <div class="rf-tr-nd">
                        <div class="rf-trn">
                            <ui:param name="objectParameterUrl" value="#{contextPath}/faces/pages/modules/test/objectParameter.xhtml?paramRootId=#{parameterTreeBuilder.getParameterId(requestId, parameter)}&amp;requestId=#{requestId}"/>

                            <a href="javascript:void(0)" onclick="$j(this).closest('.prmt').load('#{objectParameterUrl}'); ws.ui.hideLoader();"
                               style="font-family:Arial,Verdana,sans-serif; color:inherit; text-decoration: none"><span class="rf-trn-hnd rf-trn-hnd-colps">
                                </span><span class="rf-trn-cnt rf-trn-lbl">
                                    #{parameterTreeBuilder.getRoot(parameter)}
                                </span>
                            </a>
                        </div>
                    </div>
                </div>
            </h:panelGroup>

            <!-- Old approach for lazy parameter loading (when requestId is absent) -->
            <h:panelGroup rendered="#{empty param.loaded and (empty lazy or lazy == 'true') and empty requestId}">
                <div class="rf-tr param-tree">
                    <div class="rf-tr-nd">
                        <div class="rf-trn">
                            <a4j:commandLink execute="@this"
                                oncomplete="$j(this).closest('.prmt').find('.rf-trn-hnd:first').click()"
                                style="font-family:Arial,Verdana,sans-serif; color:inherit; text-decoration: none">
                                <a4j:param name="loaded" value="true" /><span class="rf-trn-hnd rf-trn-hnd-colps">
                                </span><span class="rf-trn-cnt rf-trn-lbl">
                                    #{parameterTreeBuilder.getRoot(parameter)}
                                </span>
                            </a4j:commandLink>
                        </div>
                    </div>
                </div>
            </h:panelGroup>

            <!-- When parameter is not lazy or when old approach for lazy loading is used (when requestId is absent) -->
            <rich:tree value="#{parameterTreeBuilder.getTree(requestId, parameter)}" var="node"
                rowKeyConverter="org.richfaces.IntegerSequenceRowKeyConverter"
                rendered="#{!empty param.loaded or lazy == 'false'}" toggleType="client" selectionType="client"
                styleClass="param-tree" toggleNodeEvent="click">
                <!-- rowKeyConverter is a temporary solution.
                 After migrating to the newer version of RichFaces it can be removed.
                 See: https://issues.jboss.org/browse/RF-11102 for details -->
                <rich:treeNode>
                    <h:outputText rendered="#{node.nodeType == 'spreadsheet'}" value="#{node.treeText}" escape="false" />
                    <h:outputText rendered="#{node.nodeType != 'spreadsheet'}" value="#{node.treeText}" escape="true" />
                </rich:treeNode>
            </rich:tree>

        </h:panelGroup>
    </h:panelGroup>
</ui:composition>
