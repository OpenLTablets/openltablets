<ui:composition
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a4j="http://richfaces.org/a4j"
        xmlns:rich="http://richfaces.org/rich"
        xmlns:ui="http://java.sun.com/jsf/facelets">

    <rich:popupPanel id="modalCopyFile" minWidth="580" autosized="true">
        <f:facet name="header">
            <h:outputText value="Copy file"/>
        </f:facet>

        <f:facet name="controls">
            <h:graphicImage value="/images/close.gif" class="close" onclick="RichFaces.$('modalCopyFile').hide();"
                            alt="Close"/>
        </f:facet>

        <h:form id="copyFileForm" styleClass="fields">
            <h:panelGroup id="modalCopyFileData">
                <section>
                    <h3>From</h3>
                    <div>
                        <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label">
                            <h:outputText value="File Name:"/>
                            <h:outputLabel id="copyingFileName" value="#{node.name}"/>

                            <ui:param name="hasVersions"
                                      value="#{!empty repositoryTreeState.selectedProject and !repositoryTreeState.localOnly and node.hasVersions()}"/>

                            <h:outputLabel for="currentRevision" value="Current Revision:" rendered="#{hasVersions}"/>
                            <h:selectBooleanCheckbox id="currentRevision" value="true"
                                                     onchange="showFileRevision(!this.checked)"
                                                     rendered="#{hasVersions}"/>
                        </h:panelGrid>

                        <h:panelGrid columns="2" styleClass="formfields file-revision hidden" cellspacing="1"
                                     columnClasses="label">
                            <h:outputLabel for="fileVersion" value="File Revision:" rendered="#{hasVersions}"/>
                            <h:selectOneMenu id="fileVersion" value="#{repositoryTreeController.version}"
                                             required="true"
                                             rendered="#{hasVersions}">
                                <f:selectItems value="#{repositoryTreeController.toSelectItems(nodeVersionsBean.nodeToView.versions)}"/>
                            </h:selectOneMenu>
                        </h:panelGrid>
                    </div>
                </section>
                <section>
                    <h3>As</h3>
                    <div>
                        <ui:param name="path" value="#{repositoryTreeController.currentNodePath}"/>
                        <input type="hidden" id="copyFileForm:filePath" name="copyFileForm:filePath" value="#{path}"/>

                        <table class="formfields">
                            <tr>
                                <td class="label">
                                    <label for="copyFileForm:filePath">New File Path:</label>
                                </td>
                                <td>
                                    <h:inputText id="newFileFolder"/>
                                </td>
                            </tr>
                            <tr>
                                <td class="label">
                                    <label for="copyFileForm:newFileName" class="required">New File Name:</label>
                                </td>
                                <td>
                                    <h:inputText id="newFileName"/>
                                </td>
                            </tr>
                        </table>
                    </div>
                </section>
            </h:panelGroup>

            <footer>
                <h:commandButton id="copy" value="Copy" action="#{repositoryTreeController.copyFileVersion}"
                                 onclick="RichFaces.$('modalCopyFile').hide();" styleClass="button-primary"/>
                <input type="button" value="Cancel" onclick="RichFaces.$('modalCopyFile').hide();"/>
            </footer>
            <a4j:jsFunction name="initCopyFileDialog" action="#{nodeVersionsBean.updateNodeToView}"
                            render="modalCopyFileData" oncomplete="showCopyFileDialog();" />
        </h:form>

    </rich:popupPanel>

    <script>
        //<![CDATA[
        var newFilePathChangeListener = function() {
            var folder = $j('#copyFileForm\\:newFileFolder').val().trim();
            var fileName = $j('#copyFileForm\\:newFileName').val().trim();
            $j('#copyFileForm\\:filePath').val(folder + '/' + fileName);
            $j('#copyFileForm\\:copy').prop('disabled', fileName.length === 0);
        };

        function openCopyFileDialog() {
            initCopyFileDialog();
        }

        function showCopyFileDialog() {
            var path = $j('#copyFileForm\\:filePath').val();
            $j('#copyFileForm\\:newFileFolder').val(getFolder(path));
            $j('#copyFileForm\\:newFileName').val(getFileName(path) + '.' + getExtension(path));
            newFilePathChangeListener();

            $j('#copyFileForm\\:newFileFolder').off().on('keyup change', newFilePathChangeListener);
            $j('#copyFileForm\\:newFileName').off().on('keyup change', newFilePathChangeListener);

            $j("#copyFileForm\\:currentRevision").attr('checked', true);
            showFileRevision(false);
            RichFaces.$('modalCopyFile').show();
            focusElement('copyFileForm:newFileName');
        }

        function showFileRevision(show) {
            $j(".file-revision").each(function () {
                if (show) {
                    $j(this).removeClass("hidden");
                } else {
                    $j(this).addClass("hidden");
                }
            });
        }
        function replaceSlash(path) {
            return path ? path.replace(/\\/g, '/') : '';
        }

        function getFolder(path) {
            path = replaceSlash(path);
            var index = path.lastIndexOf('/');
            return index < 0 ? '' : path.substring(0, index);
        }

        function getFileName(path) {
            path = replaceSlash(path);
            var from = path.lastIndexOf('/');
            path = from < 0 ? path : path.substring(from + 1);
            var to = path.lastIndexOf('.');
            return to < 0 ? path : path.substring(0, to);
        }

        function getExtension(path) {
            path = replaceSlash(path);
            var index = path.lastIndexOf('.');
            return index < 0 ? '' : path.substring(index + 1);
        }
        //]]>
    </script>
</ui:composition>
