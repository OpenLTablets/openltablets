<ui:composition
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a4j="http://richfaces.org/a4j"
        xmlns:rich="http://richfaces.org/rich"
        xmlns:ui="http://java.sun.com/jsf/facelets">

    <rich:popupPanel id="modalMergeBranches" autosized="true">
        <f:facet name="header">
            <h:outputText value="Sync updates"/>
        </f:facet>

        <f:facet name="controls">
            <h:graphicImage value="/images/close.gif" class="close" alt="Close" title="Close"
                            onclick="RichFaces.$('modalMergeBranches').hide();"/>
        </f:facet>

        <h:form id="mergeBranchesForm">
            <h:panelGroup id="modalMergeBranchesData">
                <p>
                    <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
                        <h:outputText value="Your branch:"/>
                        <h:outputText value="#{branchesBean.currentBranch}"/>

                        <h:outputText value="Their branch:"/>
                        <h:selectOneMenu id="branchToMerge" value="#{branchesBean.branchToMerge}">
                            <f:ajax event="change"
                                    render="importButton importButtonHdn exportButton exportButtonHdn cannotImportMessage cannotExportMessage cannotExportToLockedMessage mergeAttentionMessage"/>
                            <f:selectItems value="#{branchesBean.branchesToMerge}"/>
                        </h:selectOneMenu>
                    </h:panelGrid>
                </p>

                <ui:param name="theirBranchMerged" value="#{branchesBean.theirBranchMerged}"/>
                <ui:param name="yourBranchMerged" value="#{branchesBean.yourBranchMerged}"/>
                <ui:param name="mergedOrLocked" value="#{branchesBean.mergedOrLocked}"/>
                <ui:param name="theirBranchProtected" value="#{branchesBean.theirBranchProtected}"/>
                <ui:param name="yourBranchProtected" value="#{branchesBean.yourBranchProtected}"/>
                <ui:param name="locked" value="#{branchesBean.locked}"/>
                <ui:param name="projectLockedInAnotherBranch" value="#{branchesBean.projectLockedInAnotherBranch}"/>
                <ui:param name="confirmExportMessage" value="`#{branchesBean.branchToMerge}` was modified after the last `Receive their updates` action. Do you want to proceed?
     Otherwise, click the `Receive their updates` button and verify that your changes do not contradict with the latest branch updates."/>

                <h:panelGroup id="cannotImportMessage" layout="block">
                    <h:outputText rendered="#{theirBranchMerged}"
                                  value="You have all their updates: nothing to receive from '#{branchesBean.branchToMerge}â€™."
                                  styleClass="success"/>
                </h:panelGroup>
                <h:panelGroup id="cannotExportToLockedMessage" layout="block">
                    <h:outputText rendered="#{projectLockedInAnotherBranch}"
                                  value="The project is currently  editing in the '#{branchesBean.branchToMerge}' branch and merge cannot be done."
                                  styleClass="success"/>
                </h:panelGroup>
                <h:panelGroup id="cannotExportMessage" layout="block">
                    <h:outputText rendered="#{yourBranchMerged}"
                                  value="They have all your updates. Nothing to send to '#{branchesBean.branchToMerge}'."
                                  styleClass="success"/>
                </h:panelGroup>

                <input id="newUrlAfterMerge" type="hidden" value="#{studio.url()}"/>

                <h:panelGroup id="mergeAttentionMessage">
                    <h:panelGroup  rendered="#{not yourBranchProtected and theirBranchProtected}">
                        <p><span class="attention-text">WARNING!</span> Their branch is protected. Merging into protected branches is not allowed</p>
                    </h:panelGroup>
                    <h:panelGroup  rendered="#{yourBranchProtected and not theirBranchProtected}">
                        <p><span class="attention-text">WARNING!</span> Your branch is protected. Merging into protected branches is not permitted.</p>
                    </h:panelGroup>
                    <h:panelGroup  rendered="#{yourBranchProtected and theirBranchProtected}">
                        <p><span class="attention-text">WARNING!</span> Both branches are protected. Merging into protected branches is not allowed</p>
                    </h:panelGroup>
                </h:panelGroup>
            </h:panelGroup>

            <footer>
                <ui:remove><!-- onclick attribute doesn't work properly in JBoss when JS snippet has #{...} and 'foo\\:bar' at the same time.
                 Because JBoss uses incorrect and outdated https://github.com/javaee/el-spec/blob/master/impl/src/main/java/com/sun/el/parser/AstLiteralExpression.java#L75 class.
                 It encodes all \\, \', \", which makes unparseable JS in the result.
                 But tomcat works properly because https://github.com/apache/tomcat/blob/main/java/org/apache/el/parser/AstLiteralExpression.java#L56 doesn't encode \\, \', \" fragments.
                 --></ui:remove>
                <a4j:commandButton id="importButton"
                                   value="Receive their updates"
                                   title="Receive the latest updates from '#{branchesBean.branchToMerge}' to '#{branchesBean.currentBranch}'"
                                   onclick="modalMergeBranchesImportButtonAction(); return false;"
                                   styleClass="button-primary"
                                   disabled="#{theirBranchMerged or yourBranchProtected}"/>
                <a4j:commandButton id="importButtonHdn"
                                   render="projectTree nodeView @form"
                                   data="#{studio.mergeConflict}"
                                   action="#{branchesBean.mergeImport}"
                                   styleClass="hidden"
                                   oncomplete="onMergeComplete(event.data, #{!facesContext.validationFailed});"/>
                <a4j:commandButton id="exportButton"
                                   value="Send your updates"
                                   title="Send updates from '#{branchesBean.currentBranch}' to '#{branchesBean.branchToMerge}'"
                                   styleClass="button-primary"
                                   disabled="#{mergedOrLocked or theirBranchProtected}"
                                   onclick="modalMergeBranchesExportButtonAction(); return false;"/>
                <a4j:commandButton id="exportButtonHdn"
                                   data="#{studio.mergeConflict}"
                                   render="projectTree nodeView @form"
                                   action="#{branchesBean.mergeExport}"
                                   styleClass="hidden"
                                   onclick="if (!#{theirBranchMerged}) return confirm('#{confirmExportMessage}'); else return true;"
                                   oncomplete="onMergeComplete(event.data, #{!facesContext.validationFailed and !locked});"/>
                <input type="button" value="Cancel" onclick="RichFaces.$('modalMergeBranches').hide();"/>
            </footer>

            <a4j:jsFunction name="renderMergeBranchesForm" render="@form" oncomplete="showMergeBranchesDialog()">
                <a4j:param name="repositoryId" assignTo="#{branchesBean.currentRepositoryId}"/>
                <a4j:param name="projectName" assignTo="#{branchesBean.initProject}"/>
                <a4j:param name="editorMode" assignTo="#{branchesBean.editorMode}"/>
            </a4j:jsFunction>

            <a4j:jsFunction name="refreshRepositoryAfterMerge" render="projectTree nodeView"
                            rendered="#{menu != 'rules'}">
                <a4j:param name="wasMerged" assignTo="#{branchesBean.wasMerged}"/>
            </a4j:jsFunction>
        </h:form>

    </rich:popupPanel>

    <script>
        //<![CDATA[
        function modalMergeBranchesImportButtonAction() {
            withCommitInfoRequired('#{studio.currentUsername}', isMergeBranchesGitRepository, () => $j('#mergeBranchesForm\\:importButtonHdn').click());
        }
        function modalMergeBranchesExportButtonAction() {
            withCommitInfoRequired('#{studio.currentUsername}', isMergeBranchesGitRepository, () => $j('#mergeBranchesForm\\:exportButtonHdn').click());
        }
        var mergeBranchesRepositoryType = undefined;
        function isMergeBranchesGitRepository() {
            return mergeBranchesRepositoryType === 'repo-git';
        }

        function openMergeBranchesDialog(repositoryId, repositoryType, projectName) {
            renderMergeBranchesForm(repositoryId, projectName, #{menu == 'rules'});
            mergeBranchesRepositoryType = repositoryType;
        }

        function showMergeBranchesDialog() {
            RichFaces.$("modalMergeBranches").show();
        }

        function showMessageAfterMerge(wasMerged) {
            if (wasMerged) {
                let newUrl = $j("#newUrlAfterMerge").val();
                ws.nav.go(newUrl, true);
                ws.ui.success('Branches were merged successfully.');
            }
        }

        function onMergeComplete(mergeConflict, successful) {
            if (mergeConflict) {
                RichFaces.$('modalMergeBranches').hide();
                let afterResolveFunction = #{menu == 'rules' ? 'showMessageAfterMerge' : 'refreshRepositoryAfterMerge'};
                openResolveConflictDialog(afterResolveFunction);
            } else if (successful) {
                #{menu == 'rules' ? 'showMessageAfterMerge(successful);' : ''}
                RichFaces.$('modalMergeBranches').hide();
            }
        }

        //]]>
    </script>
</ui:composition>
