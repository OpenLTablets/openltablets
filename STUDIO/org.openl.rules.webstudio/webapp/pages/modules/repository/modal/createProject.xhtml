<ui:composition
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a4j="http://richfaces.org/a4j"
        xmlns:rich="http://richfaces.org/rich"
        xmlns:ui="http://java.sun.com/jsf/facelets">

    <style>
        .table-templates {
            width: 100%;
        }

        .table-templates th {
            padding: 8px 5px;
            border-bottom: 1px solid #ddd;
        }

        .table-templates td {
            padding: 7px 7px 7px 15px;
            border: 1px solid #fff;
        }
    </style>

    <rich:popupPanel id="modalNewProject" autosized="true" minWidth="580" maxWidth="580">
        <f:facet name="header">
            <h:outputText value="Create Project from..."/>
        </f:facet>

        <f:facet name="controls">
            <h:graphicImage value="/images/close.gif" class="close" onclick="hideNewProjectDialog()" alt="Close"/>
        </f:facet>

        <rich:tabPanel id="projectType" switchType="client" onitemchange="resizePopupPanel('modalNewProject')">

            <rich:tab id="template" header="Template">
                <h:form id="createProjectFormTempl" style="padding-top: 4px">
                    <table class="formfields" cellspacing="1">
                        <tr>
                            <td class="label" style="width: 100px">
                                <h:outputLabel styleClass="required" value="Project Template:"/>
                            </td>
                            <td>
                                <div style="height: 243px; overflow: auto; border: 1px solid #ccc; margin-top: 2px">
                                    <table id="projectTemplates" class="table table-over table-templates">
                                        <ui:repeat var="category"
                                                   value="#{repositoryTreeController.getCustomProjectCategories()}">
                                            <tr>
                                                <th>#{category}</th>
                                            </tr>
                                            <ui:repeat var="template"
                                                       value="#{repositoryTreeController.getCustomProjectTemplates(category)}">
                                                <tr>
                                                    <td>
                                                        <input type="hidden" value="custom/#{category}/#{template}"/>
                                                        <span>#{template}</span>
                                                    </td>
                                                </tr>
                                            </ui:repeat>
                                        </ui:repeat>
                                        <tr>
                                            <th>Simple Templates</th>
                                        </tr>
                                        <ui:repeat var="template"
                                                   value="#{repositoryTreeController.getProjectTemplates('templates')}">
                                            <tr>
                                                <td>
                                                    <input type="hidden" value="predefined/templates/#{template}"/>
                                                    <span>#{template}</span>
                                                </td>
                                            </tr>
                                        </ui:repeat>
                                        <tr>
                                            <th>Examples</th>
                                        </tr>
                                        <ui:repeat var="template"
                                                   value="#{repositoryTreeController.getProjectTemplates('examples')}">
                                            <tr>
                                                <td>
                                                    <input type="hidden" value="predefined/examples/#{template}"/>
                                                    <span>#{template}</span>
                                                </td>
                                            </tr>
                                        </ui:repeat>
                                        <tr>
                                            <th>Tutorials</th>
                                        </tr>
                                        <ui:repeat var="template"
                                                   value="#{repositoryTreeController.getProjectTemplates('tutorials')}">
                                            <tr>
                                                <td>
                                                    <input type="hidden" value="predefined/tutorials/#{template}"/>
                                                    <span>#{template}</span>
                                                </td>
                                            </tr>
                                        </ui:repeat>
                                    </table>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="label" style="width: 100px">
                                <h:outputLabel for="projectName" styleClass="required" value="Project Name:"/>
                            </td>
                            <td><h:inputText id="projectName"
                                             size="35" maxlength="70"
                                             value="#{repositoryTreeController.projectName}"
                                             onkeyup="enableCreateButton(this.value.trim().length > 0, #{rich:element('sbtTemplates')});"
                                             onchange="createProjectFormTemplCommentHandler.generateTemplate(this.value.trim(), #{rich:element('createProjectFormTempl:commentTemplate')});"/>
                            </td>
                        </tr>
                        <tr>
                            <td class="label" style="width: 100px">
                                <h:outputLabel for="repositoryTemplate" styleClass="required" value="Repository:" />
                            </td>
                            <td>
                                <h:selectOneMenu id="repositoryTemplate" value="#{repositoryTreeController.repositoryId}">
                                    <f:ajax event="change" execute="@form" render="@form" onevent="initNewProjectDialogUI"/>
                                    <f:selectItem itemLabel="" itemValue="#{null}" itemDisabled="true"/>
                                    <f:selectItems value="#{designTimeRepository.repositories}" var="repository"
                                                   itemValue="#{repository.id}" itemLabel="#{repository.name}"/>
                                </h:selectOneMenu>
                            </td>
                        </tr>
                        <ui:fragment rendered="#{repositoryTreeController.supportsMappedFolders}">
                            <tr>
                                <td class="label" style="width: 100px">
                                    <h:outputLabel for="projectFolderTemplate" value="Path:" />
                                </td>
                                <td><h:inputText id="projectFolderTemplate" size="35"
                                    styleClass="with-button-select"
                                                 value="#{repositoryTreeController.projectFolder}"/>
                                <input type="button" value="..." class="button-select"
                                       onclick="openSelectFolderDialog('#{repositoryTreeController.repositoryId}', 'createProjectFormTempl:projectFolderTemplate')"/>
                                </td>
                            </tr>
                        </ui:fragment>
                        <ui:fragment rendered="#{repositoryTreeController.useCustomComment}">
                            <tr>
                                <td class="label" style="width: 100px">
                                    <h:outputLabel for="commentTemplate" value="Comment:"/>
                                </td>
                                <td><h:inputTextarea id="commentTemplate"
                                                     value="#{repositoryTreeController.createProjectComment}"
                                                     title="#{repositoryTreeController.createProjectComment}"
                                                     type="text"
                                                     size="35"
                                                     readonly="false"
                                                     onkeyup="createProjectFormTemplCommentHandler.isEdited = true;"/>
                                </td>
                            </tr>
                        </ui:fragment>
                    </table>

                    <h:inputHidden id="projectTemplate" value="#{repositoryTreeController.newProjectTemplate}"/>

                    <footer>
                        <!-- TODO: Change h:commandButton to a4j:commandButton and show validation errors inside dialog box.
                                Now errors are shown after dialog is closed. -->
                        <h:commandButton id="sbtTemplates" value="Create" styleClass="button-primary"
                                         action="#{repositoryTreeController.createNewRulesProject}"/>
                        <input type="button" value="Cancel" onclick="hideNewProjectDialog()"/>
                    </footer>
                </h:form>
            </rich:tab>

            <rich:tab header="Excel Files">
                <h:form id="createProjectFormFiles" style="padding-top: 6px">
                    <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
                        <h:outputLabel for="file" styleClass="required" value="File:"/>

                        <rich:fileUpload id="file" fileUploadListener="#{repositoryTreeController.uploadListener}"
                                         onfilesubmit="showLoader();" oncomplete="hideLoader();"
                                         immediateUpload="true"
                                         noDuplicate="true"
                                         onclear="onClearFile(event);"
                                         ontyperejected="showMessagePopup('Only xls and xlsx files are accepted');"
                                         acceptedTypes="xls, xlsx, xlsm"/>

                        <h:outputLabel for="projectName" styleClass="required" value="Project Name:"/>
                        <h:inputText id="projectName" size="35"
                                     maxlength="70"
                                     value="#{repositoryTreeController.projectName}"
                                     onkeyup="enableCreateButton(this.value.trim().length > 0, #{rich:element('sbtFiles')});"
                                     onchange="createProjectFormFilesCommentHandler.generateTemplate(this.value.trim(), #{rich:element('createProjectFormFiles:commentExcel')});"/>

                        <h:outputLabel for="repositoryExcel" value="Repository:" styleClass="required"/>
                        <h:selectOneMenu id="repositoryExcel" value="#{repositoryTreeController.repositoryId}">
                            <f:ajax event="change" execute="@form" render="@form" onevent="initNewProjectDialogUI"/>
                            <f:selectItem itemLabel="" itemValue="#{null}" itemDisabled="true"/>
                            <f:selectItems value="#{designTimeRepository.repositories}" var="repository"
                                           itemValue="#{repository.id}" itemLabel="#{repository.name}"/>
                        </h:selectOneMenu>

                        <h:outputLabel for="projectFolderExcel" value="Path:"
                                       rendered="#{repositoryTreeController.supportsMappedFolders}"/>
                        <h:panelGroup rendered="#{repositoryTreeController.supportsMappedFolders}">
                            <h:inputText id="projectFolderExcel" size="35"
                                         styleClass="with-button-select"
                                         value="#{repositoryTreeController.projectFolder}"/>

                            <input type="button" value="..." class="button-select"
                                   onclick="openSelectFolderDialog('#{repositoryTreeController.repositoryId}', 'createProjectFormFiles:projectFolderExcel')"/>
                        </h:panelGroup>

                        <ui:param name="useCustomComment" value="#{repositoryTreeController.useCustomComment}"/>

                        <h:outputLabel for="commentExcel" value="Comment:" rendered="#{useCustomComment}"/>
                        <h:inputTextarea id="commentExcel"
                                         rendered="#{useCustomComment}"
                                         value="#{repositoryTreeController.createProjectComment}"
                                         title="#{repositoryTreeController.createProjectComment}"
                                         type="text"
                                         size="35"
                                         readonly="false"
                                         onkeyup="createProjectFormFilesCommentHandler.isEdited = true;"/>
                    </h:panelGrid>

                    <footer>
                        <h:commandButton id="sbtFiles" value="Create" styleClass="button-primary"
                                         action="#{repositoryTreeController.createProjectWithFiles}"/>
                        <input type="button" value="Cancel" onclick="hideNewProjectDialog()"/>
                    </footer>
                </h:form>
            </rich:tab>

            <rich:tab header="Zip Archive">
                <h:form id="uploadProjectForm" style="padding-top: 6px">
                    <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
                        <h:outputLabel for="file" styleClass="required" value="File:"/>

                        <rich:fileUpload id="file" fileUploadListener="#{repositoryTreeController.uploadListener}"
                                         onfilesubmit="showLoader();"
                                         oncomplete="uploadProjectFormCommentHandler.isEdited = false; enableCreateButton(#{rich:element('uploadProjectForm:projectName')}.value.trim().length > 0, #{rich:element('sbtZips')});hideLoader();"
                                         onclear="onClearFile(event); enableCreateButton(false, #{rich:element('sbtZips')})"
                                         ontyperejected="showMessagePopup('Only zip files are accepted');"
                                         immediateUpload="true"
                                         render="projectName commentZip"
                                         acceptedTypes="zip" maxFilesQuantity="1"/>

                        <h:outputLabel for="projectName" styleClass="required" value="Project Name:"/>
                        <h:inputText id="projectName" size="35"
                                     maxlength="70"
                                     value="#{repositoryTreeController.projectName}"
                                     onkeyup="enableCreateButton(this.value.trim().length > 0, #{rich:element('sbtZips')});"
                                     onchange="uploadProjectFormCommentHandler.generateTemplate(this.value.trim(), #{rich:element('uploadProjectForm:commentZip')});"/>

                    <h:outputLabel for="repositoryZip" value="Repository:" styleClass="required"/>
                    <h:selectOneMenu id="repositoryZip" value="#{repositoryTreeController.repositoryId}">
                        <f:ajax event="change" execute="@form" render="@form" onevent="initNewProjectDialogUI"/>
                        <f:selectItem itemLabel="" itemValue="#{null}" itemDisabled="true"/>
                        <f:selectItems value="#{designTimeRepository.repositories}" var="repository"
                                       itemValue="#{repository.id}" itemLabel="#{repository.name}"/>
                    </h:selectOneMenu>

                    <h:outputLabel for="projectFolderZip" value="Path:"
                                       rendered="#{repositoryTreeController.supportsMappedFolders}"/>
                    <h:panelGroup rendered="#{repositoryTreeController.supportsMappedFolders}">
                        <h:inputText id="projectFolderZip" size="35"
                                     styleClass="with-button-select"
                                     value="#{repositoryTreeController.projectFolder}"/>

                        <input type="button" value="..." class="button-select"
                               onclick="openSelectFolderDialog('#{repositoryTreeController.repositoryId}', 'uploadProjectForm:projectFolderZip')"/>
                    </h:panelGroup>

                        <ui:param name="useCustomComment" value="#{repositoryTreeController.useCustomComment}"/>

                        <h:outputLabel for="commentZip" value="Comment:" rendered="#{useCustomComment}"/>
                        <h:inputTextarea id="commentZip"
                                         rendered="#{useCustomComment}"
                                         value="#{repositoryTreeController.createProjectComment}"
                                         title="#{repositoryTreeController.createProjectComment}"
                                         type="text"
                                         size="35"
                                         readonly="false"
                                         onkeyup="uploadProjectFormCommentHandler.isEdited = true;"/>
                    </h:panelGrid>

                    <footer>
                        <h:commandButton id="sbtZips" value="Create" action="#{repositoryTreeController.upload}"
                                         styleClass="button-primary"/>
                        <input type="button" value="Cancel" onclick="hideNewProjectDialog()"/>
                    </footer>
                </h:form>
            </rich:tab>

            <rich:tab header="OpenAPI">
                <h:form id="openAPIProjectForm" style="padding-top: 6px">
                    <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
                        <h:outputLabel for="file" styleClass="required" value="File:"/>

                        <rich:fileUpload id="file" fileUploadListener="#{repositoryTreeController.uploadListener}"
                                         onfilesubmit="showLoader(); checkFileName(event);" oncomplete="hideLoader();"
                                         immediateUpload="true"
                                         noDuplicate="true"
                                         onclear="onClearFile(event); enableCreateButton(false, #{rich:element('submitOpenAPIFile')})"
                                         ontyperejected="showMessagePopup('Only JSON and YML/YAML files are accepted');"
                                         render="openAPIProjectName commentOpenAPI"
                                         acceptedTypes="json, yml, yaml" maxFilesQuantity="1"/>

                        <h:outputLabel for="openAPIProjectName" styleClass="required" value="Project Name:"/>
                        <h:inputText id="openAPIProjectName" size="35"
                                     maxlength="70"
                                     value="#{repositoryTreeController.projectName}"
                                     onkeyup="enableCreateButton(this.value.trim().length > 0, #{rich:element('submitOpenAPIFile')});"
                                     onchange="createProjectFormOpenAPICommentHandler.generateTemplate(this.value.trim(), #{rich:element('openAPIProjectForm:commentOpenAPI')});"/>

                        <h:outputLabel for="projectFolderOpenAPI" value="Path in repository:"
                                       rendered="#{repositoryTreeController.supportsMappedFolders}"/>
                        <h:inputText id="projectFolderOpenAPI" size="35"
                                     value="#{repositoryTreeController.projectFolder}"
                                     rendered="#{repositoryTreeController.supportsMappedFolders}"/>

                        <ui:param name="useCustomComment" value="#{repositoryTreeController.useCustomComment}"/>

                        <h:outputLabel for="commentOpenAPI" value="Comment:" rendered="#{useCustomComment}"/>
                        <h:inputTextarea id="commentOpenAPI"
                                         rendered="#{useCustomComment}"
                                         value="#{repositoryTreeController.createProjectComment}"
                                         title="#{repositoryTreeController.createProjectComment}"
                                         type="text"
                                         size="35"
                                         readonly="false"
                                         onkeyup="createProjectFormOpenAPICommentHandler.isEdited = true;"/>
                    </h:panelGrid>
                    <footer>
                        <h:commandButton id="submitOpenAPIFile" value="Create"
                                         action="#{repositoryTreeController.upload}"
                                         styleClass="button-primary"/>
                        <input type="button" value="Cancel" onclick="hideNewProjectDialog()"/>
                    </footer>
                </h:form>
            </rich:tab>

            <rich:tab header="Workspace">
                <h:form id="uploadWorkspaceProjectForm" prependId="false" style="padding-top: 6px">
                    <div style="max-height: 286px; overflow:auto">
                        <h:panelGrid style="width: 100%" id="uploadPrjFromLocalDiv">
                            <rich:dataTable value="#{localUpload.projects4Upload}"
                                            rendered="#{not empty localUpload.projects4Upload}"
                                            var="item" styleClass="table" id="uploadPrjFromLocalTable"
                                            style="width: 98%">
                                <f:facet name="header">
                                    <rich:columnGroup>
                                        <rich:column>
                                            <h:selectBooleanCheckbox id="selectAll" title="Select/Deselect All'"
                                                                     value="#{localUpload.selectAll}"
                                                                     onclick="changeStatus(this);"/>
                                        </rich:column>
                                        <rich:column>
                                            <h:outputText value="Name"/>
                                        </rich:column>
                                    </rich:columnGroup>
                                </f:facet>

                                <rich:column style="text-align: center; width: 20px;">
                                    <h:selectBooleanCheckbox value="#{item.selected}"
                                                             onclick="changeAllProjectCheck(this)"/>
                                </rich:column>
                                <rich:column>
                                    <h:outputText value="#{item.projectName}"/>
                                </rich:column>
                            </rich:dataTable>
                        </h:panelGrid>
                        <h:panelGrid id="uploadPrjFromLocalMessageDiv">
                            <h:outputText value="All projects are already in repository"
                                          rendered="#{empty localUpload.projects4Upload}"/>
                        </h:panelGrid>

                        <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,"
                            rendered="#{not empty localUpload.projects4Upload}">
                            <h:outputLabel for="repositoryLocal" value="Repository:" styleClass="required"/>
                            <h:selectOneMenu id="repositoryLocal" value="#{repositoryTreeController.repositoryId}">
                                <f:ajax event="change" execute="@form" render="@form" onevent="initNewProjectDialogUI"/>
                                <f:selectItem itemLabel="" itemValue="#{null}" itemDisabled="true"/>
                                <f:selectItems value="#{designTimeRepository.repositories}" var="repository"
                                               itemValue="#{repository.id}" itemLabel="#{repository.name}"/>
                            </h:selectOneMenu>
                        </h:panelGrid>

                        <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,"
                                     rendered="#{repositoryTreeController.supportsMappedFolders}">
                            <h:outputLabel for="projectFolderLocal" value="Path:"/>
                            <h:panelGroup>
                                <h:inputText id="projectFolderLocal" size="35"
                                             styleClass="with-button-select"
                                             value="#{localUpload.projectFolder}"/>
                                <input type="button" value="..." class="button-select"
                                       onclick="openSelectFolderDialog('#{repositoryTreeController.repositoryId}', 'uploadWorkspaceProjectForm:projectFolderLocal')"/>
                            </h:panelGroup>
                        </h:panelGrid>
                    </div>
                    <p>
                        <ui:param name="useCustomComment" value="#{repositoryTreeController.useCustomComment}"/>
                        <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,"
                                     rendered="#{useCustomComment}">
                            <h:outputLabel for="commentLocal" value="Comment:"/>
                            <h:inputTextarea id="commentLocal"
                                             value="#{localUpload.createProjectCommentTemplate}"
                                             title="#{localUpload.createProjectCommentTemplate}"
                                             type="text"
                                             size="35"
                                             readonly="false"/>
                        </h:panelGrid>
                    </p>

                    <h:panelGroup id="localUploadButtonPanel">
                        <footer>
                            <a4j:commandButton id="sbtWorkspace" action="#{localUpload.upload}"
                                               styleClass="button-primary"
                                               rendered="#{not empty localUpload.projects4Upload}" process="@form"
                                               value="Create"
                                               oncomplete="hideNewProjectDialog()"
                                               render="uploadWorkspaceProjectForm uploadPrjFromLocalMessageDiv projectTree nodeView"/>
                            <input type="button" value="Cancel" onclick="hideNewProjectDialog()"/>
                        </footer>
                    </h:panelGroup>
                </h:form>
            </rich:tab>

            <rich:tab header="Repository" rendered="#{not empty repositoryTreeController.nonFlatRepositories}">
                <h:form id="importFromRepoForm" style="padding-top: 6px">
                    <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
                        <h:outputLabel for="repositoryImport" value="Repository:" styleClass="required"/>
                        <h:selectOneMenu id="repositoryImport" value="#{repositoryTreeController.repositoryId}">
                            <f:ajax event="change" execute="@form" render="@form" onevent="initNewProjectDialogUI"/>
                            <f:selectItem itemLabel="" itemValue="#{null}" itemDisabled="true"/>
                            <f:selectItems value="#{repositoryTreeController.nonFlatRepositories}" var="repository"
                                           itemValue="#{repository.id}" itemLabel="#{repository.name}"/>
                        </h:selectOneMenu>

                        <h:outputLabel for="projectFolderImport" value="Path:"/>
                        <h:panelGroup>
                            <h:inputText id="projectFolderImport" size="35"
                                         styleClass="with-button-select"
                                         value="#{repositoryTreeController.projectFolder}"/>

                            <input type="button" value="..."
                                   class="button-select #{empty repositoryTreeController.repositoryId ? 'hidden' : ''}"
                                   onclick="openSelectFolderDialog('#{repositoryTreeController.repositoryId}', 'importFromRepoForm:projectFolderImport')"/>
                        </h:panelGroup>

                    </h:panelGrid>

                    <footer>
                        <h:commandButton id="sbtRepo" value="Import" action="#{repositoryTreeController.importFromRepo}"
                                         styleClass="button-primary" />
                        <input type="button" value="Cancel" onclick="hideNewProjectDialog()" />
                    </footer>
                </h:form>
            </rich:tab>

            <h:form>
                <a4j:jsFunction name="initNewProjectDialog" action="#{repositoryTreeController.openNewProjectDialog}"
                                render="createProjectFormTempl createProjectFormFiles uploadProjectForm uploadWorkspaceProjectForm"
                                oncomplete="showNewProjectDialog()"/>

                <a4j:jsFunction name="clearFiles">
                    <a4j:param name="fileNames" assignTo="#{repositoryTreeController.fileNamesToRemove}"/>
                </a4j:jsFunction>
            </h:form>

        </rich:tabPanel>
    </rich:popupPanel>

    <script>

        // TODO Move code to namespace

        //<![CDATA[

        let CommentTemplateHandler = function () {
            this.isEdited = false;
            this.createProjectCommentTemplate = "#{repositoryTreeController.retrieveCreateProjectCommentTemplate()}";

            let self = this;

            this.generateTemplate = function (projectName, input) {
                if (self.isEdited === false && projectName.length > 0 && self.createProjectCommentTemplate) {
                    input.value = self.createProjectCommentTemplate.replace(/\{project\-name}/g, projectName);
                }
            };
        };

        let uploadProjectFormCommentHandler = new CommentTemplateHandler();
        let createProjectFormTemplCommentHandler = new CommentTemplateHandler();
        let createProjectFormFilesCommentHandler = new CommentTemplateHandler();
        let createProjectFormOpenAPICommentHandler = new CommentTemplateHandler();
        //]]>

        function initNewProjectDialogUI() {
            enableCreateButton(false, #{rich:element("sbtFiles")});
            enableCreateButton(false, #{rich:element("sbtZips")});
            enableCreateButton(false, #{rich:element("sbtWorkspace")});
        enableCreateButton(false, #{rich:element("submitOpenAPIFile")});

        #{rich:element("createProjectFormFiles:projectName")}.onpaste = function () {
            enableCreateButton(true, #{rich:element("sbtFiles")});
        }
            #{rich:element("uploadProjectForm:projectName")}.onpaste = function () {
            enableCreateButton(true, #{rich:element("sbtZips")});
        }

            #{rich:element("openAPIProjectForm:projectName")}.onpaste = function () {
            enableCreateButton(true, #{rich:element("submitOpenAPIFile")});
        }

            initTemplates();
            $j("#createProjectFormFiles\\:projectName").val("");
            $j("#uploadProjectForm\\:projectName").val("");

            $j("#projectTemplates").on("click", "td", function() {
                selectTemplate($j(this));
            });
        }

        function enableCreateButton(enable, button) {
            if (button) {
                button.disabled = !enable;
            }
        }

        function openNewProjectDialog() {
            initNewProjectDialog();
        }

        function showNewProjectDialog() {
            initNewProjectDialogUI();

            RichFaces.$("projectType").switchToItem("@first");
            RichFaces.$("modalNewProject").show();
            focusElement("createProjectFormTempl:projectName");
        }

        function hideNewProjectDialog() {
            uploadProjectFormCommentHandler.isEdited = false;
            createProjectFormTemplCommentHandler.isEdited = false;
            createProjectFormFilesCommentHandler.isEdited = false;
            createProjectFormOpenAPICommentHandler.isEdited = false;
            $j("#createProjectFormTempl\\:projectName").val("");
            initTemplates();

            $j("#createProjectFormFiles\\:projectName").val("");
            $j("#uploadProjectForm\\:projectName").val("");
            $j("#openAPIProjectForm\\:openAPIProjectName").val("");
            $j("#createProjectFormTempl\\:commentTemplate").val("");
            $j("#createProjectFormFiles\\:commentExcel").val("");
            $j("#uploadProjectForm\\:commentZip").val("");
            $j("#openAPIProjectForm\\:commentOpenAPI").val("");

            RichFaces.$("modalNewProject").hide();
        }

        function changeStatus(element) {
            $j("#uploadWorkspaceProjectForm INPUT[type='checkbox']").prop("checked", element.checked);
            enableCreateButton(element.checked, #{rich:element('sbtWorkspace')});
        }

        function changeAllProjectCheck(element) {
            if ($j("#uploadWorkspaceProjectForm INPUT[id='uploadPrjFromLocalTable:selectAll']:checked").val() === "on") {
                if (!element.checked) {
                    $j("#uploadWorkspaceProjectForm INPUT[id='uploadPrjFromLocalTable:selectAll']").prop("checked", element.checked);
                }
            }

            let checkedCount = $j("#uploadWorkspaceProjectForm INPUT[type='checkbox']:checked").not("INPUT[id='uploadPrjFromLocalTable:selectAll']").size();
            let allCount = $j("#uploadWorkspaceProjectForm INPUT[type='checkbox']").not("INPUT[id='uploadPrjFromLocalTable:selectAll']").size();

            if (checkedCount === allCount) {
                $j("#uploadWorkspaceProjectForm INPUT[id='uploadPrjFromLocalTable:selectAll']").prop("checked", true);
            }

            enableCreateButton(checkedCount !== 0, #{rich:element('sbtWorkspace')});
        }

        function uncheckSelectAllProject() {
            $j("#uploadWorkspaceProjectForm INPUT[id='uploadPrjFromLocalTable:selectAll']").prop("checked", false);
        }

        //<![CDATA[

        let selectedTemplate;

        function initTemplates() {
            selectTemplate($j("#projectTemplates").find("td:first"));
        }

        function selectTemplate(newTemplate) {
            selectedTemplate && selectedTemplate.removeClass("row-selected");
            selectedTemplate = newTemplate;
            selectedTemplate.addClass("row-selected");

            $j("#createProjectFormTempl\\:projectTemplate").val(selectedTemplate.find("input").val());
            var projectNameInput = $j("#createProjectFormTempl\\:projectName");
            projectNameInput.val(selectedTemplate.find("span").text());
            projectNameInput.trigger("change");

            enableCreateButton(projectNameInput.val().trim().length > 0, #{rich:element('sbtTemplates')});
        }

        $j("#openAPIProjectForm\\:openAPIProjectName").val("");

        function checkFileName(event) {
            let file = event.rf.data.file;
            if (!file) {
                return;
            }
            let fileName = file.name;
            let name = fileName.split('.').slice(0, -1).join('.');

            if (name.toUpperCase() !== 'openapi'.toUpperCase()) {
                showMessagePopup('Only files with name "openapi" and formats JSON, YML/YAML are accepted');
                clearFiles(fileName);
                enableCreateButton(false, #{rich:element("submitOpenAPIFile")});
            }
        }
        function onClearFile(event) {
            let files = "";
            const data = event.rf.data;
            for (let i = 0; i < data.length; i++) {
                if (i > 0) {
                    files += "\n";
                }
                files += data[i].name;
            }

            clearFiles(files);
        }

        //]]>

    </script>

</ui:composition>
