<?xml version="1.0" encoding="UTF-8"?>
<ui:composition
    xmlns:ui="http://java.sun.com/jsf/facelets">

    <div id="designRepo">
        <ui:include src="/pages/modules/repository/tree.xhtml" />
    </div>
    <div id="productionRepo" style="display: none">
        <ui:include src="/pages/modules/repository/productionTree.xhtml" />
    </div>

    <script>
      //<![CDATA[
        function goToRepo(repo, repoHide) {
            $j("#" + repoHide + "RepoLink").addClass("view-header-link-inactive");
            $j("#" + repo + "RepoLink").removeClass("view-header-link-inactive");

            $j("#" + repo + "Repo").show();
            $j("#" + repoHide + "Repo").hide();

            $j("#" + repo + "RepoRefresh").show();
            $j("#" + repoHide + "RepoRefresh").hide();

            initRepoFilter(repo);
        }

        var FILTER_PATTERN_ITEM = "filterPattern";

        function initRepoFilter(repo) {
            var filterPattern = sessionStorage.getItem(FILTER_PATTERN_ITEM);

            if (filterPattern) {
                var filterId = (repo == "design" ? "#nameFilter" : "#prodNameFilter");
                $j(filterId).val(filterPattern);
                filterRepoProjects(repo, filterPattern);
            }
        }

        function filterRepoProjects(repo, pattern) {
            var filterId;
            var clearFilterId;
            if (repo == "design") {
                filterId = "#nameFilter";
                clearFilterId = '#clearFilter';
            } else {
                filterId = "#prodNameFilter";
                clearFilterId = '#clearProdFilter';
            }
            if (pattern && pattern.length) {
                $j(filterId).addClass('withClearButton');
                $j(clearFilterId).removeClass('hidden');
            } else {
                $j(filterId).removeClass('withClearButton');
                $j(clearFilterId).addClass('hidden');
            }

            sessionStorage.setItem(FILTER_PATTERN_ITEM, pattern);

            var treeId = (repo == "design" ? "#projectTree" : "#prodTree");
            var projects = $j(treeId + " > div > div.rf-tr-nd");

            projects.each(function() {
                var projectNode = $j(this).find(".rf-trn-lbl").first();
                var projectName = projectNode.clone().children().children().remove().end().text();
                $j(this).toggle(projectName.toLowerCase().indexOf(pattern.toLowerCase()) > -1);
            });
        }

        function initFilter() {
            initRepoFilter("design");
        }

        function initProdFilter() {
            initRepoFilter("production");
        }

        function filterProjects(pattern) {
            filterRepoProjects("design", pattern);
        }

        function prodFilterProjects(pattern) {
            filterRepoProjects("production", pattern);
        }

        function clearProjectsFilter() {
            $j("#nameFilter").val('');
            filterProjects('');
        }

        function clearProdProjectsFilter() {
            $j("#prodNameFilter").val('');
            prodFilterProjects('');
        }

        initFilter();

        var productionFlag = #{repositorySelectNodeStateHolder.isProductionNode()};
        if(productionFlag) {
            goToRepo('production', 'design');
        } else {
            goToRepo('design', 'production')
        }

      //]]>
    </script>

</ui:composition>
