<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:openl-ruleservice.properties"/>

	<import resource="openl-ruleservice-loader-beans.xml"/>
	<import resource="openl-ruleservice-publisher-beans.xml"/>
	
	<!-- Bean orchestrates logic for web services application to identify and deploy services.  -->
	<bean id="ruleService" class="org.openl.rules.ruleservice.core.RuleService">
		<property name="loader" ref="rulesLoader"></property>
		<property name="publisher" ref="rulesPublisher"></property>
	</bean>

	<!-- Determines the services that should be exposed using RulesLoader.  -->
	<bean id="serviceConfigurer" class="org.openl.rules.ruleservice.management.LastVersionProjectsServiceConfigurer">
		<property name="provideRuntimeContext" value="true"/>
	</bean>

	<!-- Controls all services currently exposed.
	Listens the data source changes and handles all deploy/redeploy/undelpoy operations.  -->
	<bean id="serviceManager" class="org.openl.rules.ruleservice.management.ServiceManager">
		<property name="serviceConfigurer" ref="serviceConfigurer"/>
		<property name="ruleService" ref="ruleService"/>
		<property name="rulesLoader" ref="rulesLoader"/>
	</bean>
</beans>
