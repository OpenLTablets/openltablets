<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Data binding type in WebServices(set it to the "serverPrototype" bean). -->
    <bean id="jaxwsServiceConfigurationReadXsiTypesFactoryBean"
          class="org.openl.rules.ruleservice.databinding.ServiceConfigurationBooleanFactoryBean" scope="prototype">
        <property name="propertyName" value="aegis.readXsiTypes"/>
        <property name="defaultValue" value="${ruleservice.aegis.readXsiTypes}"/>
    </bean>

    <bean id="jaxwsServiceConfigurationWriteXsiTypesFactoryBean"
          class="org.openl.rules.ruleservice.databinding.ServiceConfigurationBooleanFactoryBean" scope="prototype">
        <property name="propertyName" value="aegis.writeXsiTypes"/>
        <property name="defaultValue" value="${ruleservice.aegis.writeXsiTypes}"/>
    </bean>

    <bean id="jaxwsServiceConfigurationResolveMethodParameterNamesFactoryBean"
          class="org.openl.rules.ruleservice.databinding.ServiceConfigurationBooleanFactoryBean" scope="prototype">
        <property name="propertyName" value="jaxws.resolveMethodParameterNames"/>
        <property name="defaultValue" value="${ruleservice.jaxws.resolveMethodParameterNames:true}"/>
    </bean>

    <bean id="jaxwsAegisDatabindingFactoryBean"
          class="org.openl.rules.ruleservice.databinding.AegisDatabindingFactoryBean"
          scope="prototype">
        <property name="readXsiTypes" ref="jaxwsServiceConfigurationReadXsiTypesFactoryBean"/>
        <property name="writeXsiTypes" ref="jaxwsServiceConfigurationWriteXsiTypesFactoryBean"/>
        <property name="overrideTypes" ref="serviceConfigurationRootClassNamesBindingFactoryBean"/>
        <property name="supportVariations" ref="serviceConfigurationSupportVariationsFactoryBean"/>
    </bean>

    <bean id="jaxwsServiceDataBinding" factory-bean="jaxwsAegisDatabindingFactoryBean" factory-method="createAegisDatabinding"
          scope="prototype"/>

    <!-- Main description for the one WebService -->
    <!-- All configurations for server (like a data binding type and interceptors) 
        are represented there. ServerFactoryBean configuration is similar to a CXF 
        simple frontend configuration(see http://cxf.apache.org/docs/simple-frontend-configuration.html) 
        but without namespace "simple". -->

    <bean id="jaxwsServiceServerPrototype" class="org.apache.cxf.jaxws.JaxWsServerFactoryBean" scope="prototype">
        <property name="dataBinding" ref="jaxwsServiceDataBinding"/>
        <property name="features">
            <list>
                <bean id="webServicesLoggingFeature" class="org.openl.rules.ruleservice.storelogdata.LoggingFeature">
                    <property name="loggingEnabled" value="${ruleservice.logging.enabled}"/>
                </bean>
            </list>
        </property>
        <property name="bus" ref="cxf"/>
    </bean>

    <!-- Initializes OpenL Engine instances according to Rule Services configuration
        description and calls DeploymentAdmin to expose corresponding web service -->
    <!-- Exposes web services. -->
    <bean id="jaxwsServiceEnhancer" class="org.openl.rules.ruleservice.publish.jaxws.JAXWSOpenLServiceEnhancer" scope="prototype">
        <property name="resolveMethodParameterNamesEnabled" ref="jaxwsServiceConfigurationResolveMethodParameterNamesFactoryBean"/>
    </bean>

    <bean id="jaxwsServiceRuleServicePublisher"
          class="org.openl.rules.ruleservice.publish.JAXWSRuleServicePublisher">
        <property name="storeLogDataEnabled" value="${ruleservice.store.logs.enabled}"/>
    </bean>
</beans>
