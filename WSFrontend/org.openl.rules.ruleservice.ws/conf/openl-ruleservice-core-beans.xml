<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Controls instantiation of OpenL modules and creates service beans and service classes. -->
	<bean id="instantiationStrategyFactory"
		class="org.openl.rules.ruleservice.publish.RuleServiceInstantiationStrategyFactoryImpl">
		<property name="lazy" value="${ruleservice.instantiation.strategy.lazy}"/>
		<property name="skippedLazy" value="#{skippedLazyLoadingProjects.split('(\A#.*)?(([\r\n]\s*)+(#.*)?)+')}"/>
	</bean>

	<!-- A string which contains a 'newline' separated projects that should be warmed-up in lazy mode.
		this string is loaded from the openl-ruleservice-skip-lazy.conf file -->
	<bean id="skippedLazyLoadingProjects" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
				<constructor-arg value="classpath:openl-ruleservice-skip-lazy.conf" type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="org.openl.rules.ruleservice.core.RuleServiceStaticConfigurationUtil.setMaxThreadsForCompile" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.openl.rules.ruleservice.core.RuleServiceStaticConfigurationUtil.setMaxThreadsForCompile"/>
		<property name="arguments">
			<value>${ruleservice.instantiation.strategy.maxthreadsforcompile}</value>
		</property>
	</bean>

	<bean id="ruleServiceInstantiationFactory"
		class="org.openl.rules.ruleservice.core.RuleServiceOpenLServiceInstantiationFactoryImpl" depends-on="org.openl.rules.ruleservice.core.RuleServiceStaticConfigurationUtil.setMaxThreadsForCompile">
		<property name="instantiationStrategyFactory" ref="instantiationStrategyFactory" />
		<property name="ruleServiceLoader" ref="ruleServiceLoader" />
		<property name="externalParameters">
			<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="location" value="classpath:system.properties"/>
				<property name="ignoreResourceNotFound" value="true"/>
			</bean>
		</property>
	</bean>

	<!-- Bean orchestrates logic for web services application to identify and deploy services.  -->
	<bean id="ruleService" class="org.openl.rules.ruleservice.core.RuleServiceImpl">
		<property name="ruleServiceInstantiationFactory" ref="ruleServiceInstantiationFactory"/>
		<property name="ruleServicePublisher" ref="ruleServicePublisher"/>
	</bean>

	<!-- Controls all services currently exposed.
	Listens the data source changes and handles all deploy/redeploy/undelpoy operations.  -->
	<bean id="serviceManager" class="org.openl.rules.ruleservice.management.ServiceManagerImpl">
		<property name="serviceConfigurer" ref="serviceConfigurer"/>
		<property name="ruleService" ref="ruleService"/>
		<property name="ruleServiceLoader" ref="ruleServiceLoader"/>
	</bean>
</beans>
