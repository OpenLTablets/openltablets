<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Controls instantiation of OpenL modules and creates service beans and service classes. -->
	<bean id="instantiationStrategyFactory"
		class="org.openl.rules.ruleservice.publish.RuleServiceInstantiationStrategyFactoryImpl">
		<property name="lazyCompilation" value="${ruleservice.instantiation.strategy.lazy}"/>
	</bean>

	<bean id="org.openl.rules.ruleservice.core.RuleServiceStaticConfigurationUtil.setMaxThreadsForCompile" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.openl.rules.ruleservice.core.RuleServiceStaticConfigurationUtil.setMaxThreadsForCompile"/>
		<property name="arguments">
			<value>${ruleservice.instantiation.strategy.maxthreadsforcompile}</value>
		</property>
	</bean>

	<bean id="ruleServiceInstantiationFactory"
		class="org.openl.rules.ruleservice.core.RuleServiceOpenLServiceInstantiationFactoryImpl" depends-on="org.openl.rules.ruleservice.core.RuleServiceStaticConfigurationUtil.setMaxThreadsForCompile" autowire="byType">
		<property name="instantiationStrategyFactory" ref="instantiationStrategyFactory" />
		<property name="ruleServiceLoader" ref="ruleServiceLoader" />
		<property name="externalParameters">
			<props>
				<prop key="custom.spreadsheet.type">${custom.spreadsheet.type}</prop>
				<prop key="dispatching.mode">${dispatching.mode}</prop>
				<prop key="dispatching.validation">${dispatching.validation}</prop>
			</props>
		</property>
	</bean>

	<!-- Bean orchestrates logic for Rule Services application to identify and deploy services.  -->
	<bean id="ruleService" class="org.openl.rules.ruleservice.core.RuleServiceImpl">
		<property name="ruleServiceInstantiationFactory" ref="ruleServiceInstantiationFactory"/>
		<property name="ruleServiceManager" ref="ruleServiceManager"/>
	</bean>

	<!-- Controls all services currently exposed.
	Listens the data source changes and handles all deploy/redeploy/undelpoy operations.  -->
	<bean id="serviceManager" class="org.openl.rules.ruleservice.management.ServiceManagerImpl">
		<property name="serviceConfigurer" ref="serviceConfigurer"/>
		<property name="ruleService" ref="ruleService"/>
		<property name="ruleServiceLoader" ref="ruleServiceLoader"/>
	</bean>
	
	<bean id="serviceManagerStarter" class="org.openl.rules.ruleservice.conf.ServiceManagerStarterBean" depends-on="serviceManager" lazy-init="false">
		<property name="serviceManager" ref="serviceManager"/>
	</bean>
</beans>
