<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Local storage for all projects that is used in services. -->
	<bean id="localTemporaryDeploymentsStorage"
		class="org.openl.rules.ruleservice.loader.LocalTemporaryDeploymentsStorage">
		<constructor-arg value="${ruleservice.tmp.dir}"/>
	</bean>

	<bean id="datasourceConfigurerFactoryBean" class="org.openl.rules.ruleservice.conf.DatasourceConfigurerFactoryBean">
		<property name="fileSystemDatasource" value="#{'${production-repository.factory}' eq 'org.openl.rules.repository.LocalRepositoryFactory'}"/>
		<property name="singleton" value="false"/>
	</bean>

	<!-- Wrapper on data source that gives access to data source and resolves the OpenL projects/modules inside the projects. 
	Contains own storage for all projects that is used in services. -->
	<bean id="ruleServiceLoader" class="org.openl.rules.ruleservice.loader.RuleServiceLoaderImpl">
		<constructor-arg name="dataSource" ref="datasourceConfigurerFactoryBean" />
		<constructor-arg name="projectResolver" ref="projectResolver" />
		<constructor-arg name="storage"
			ref="localTemporaryDeploymentsStorage" />
	</bean>

	<bean id="projectResolver" class="org.openl.rules.project.resolving.ProjectResolver" factory-method="getInstance"/>
</beans>
