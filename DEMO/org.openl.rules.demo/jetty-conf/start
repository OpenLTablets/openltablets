#!/bin/bash

cd -- "$(dirname -- "${BASH_SOURCE:-$0}")" || { echo "Failed to change directory."; exit 1; }

used_java="unknown"

if [[ -n "$JRE_HOME" ]] && [[ -x "$JRE_HOME/bin/java" ]];  then
    _java="$JRE_HOME/bin/java"
    used_java=$_java
elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
    _java="$JAVA_HOME/bin/java"
    used_java=$_java
elif type -p java; then
    _java=java
    used_java="PATH"
else
    echo "--- Probably, you have not installed Java"
    exit 1
fi

if [[ "$_java" ]]; then
    version=$("$_java" -version 2>&1 | awk -F '"' '/version/ {print $2}')
fi

if [[ $(uname -s) == "Darwin" ]]; then
  memory=$(sysctl -a | grep hw.memsize | awk '{print $2/1024/1024/1024}')
else
  memory=$(free -g | awk '/Mem:/{print $2}')
fi

if [[ "$CONTAINER" != "true" ]]; then
  if [[ ${memory} -ge 48 ]]; then
    _JAVA_MEMORY="-Xms4g -Xmx42g"
  elif [[ ${memory} -ge 32 ]]; then
    _JAVA_MEMORY="-Xms4g -Xmx28g"
  elif [[ ${memory} -ge 24 ]]; then
    _JAVA_MEMORY="-Xms4g -Xmx20g"
  elif [[ ${memory} -ge 16 ]]; then
    _JAVA_MEMORY="-Xms4g -Xmx12g"
  elif [[ ${memory} -ge 12 ]]; then
    _JAVA_MEMORY="-Xms4g -Xmx10g"
  elif [[ ${memory} -ge 8 ]]; then
    _JAVA_MEMORY="-Xms4g -Xmx7g"
  elif [[ _memory -ge 6 ]]; then
    _JAVA_MEMORY="-Xms3g -Xmx5g"
  elif [[ ${memory} -ge 4 ]]; then
    _JAVA_MEMORY="-Xms2g -Xmx3g"
  else
    _JAVA_MEMORY="-Xms512m -Xmx2g"
  fi
fi


# Java extensions can be outside of JAVA_HOME. Needed for security manager
[[ -f demo-java.policy ]] && JETTY_OPTS="-Djava.security.manager -Djava.security.policy=demo-java.policy -Djava.extensions=/usr/java/packages/lib/ext"

export JAVA_OPTS="$JAVA_OPTS $_JAVA_MEMORY"
export JAVA_OPTIONS="$JAVA_OPTS $JETTY_OPTS $JAVA_OPTIONS"
OPENL_HOME=${OPENL_HOME:-./openl-demo}

echo "### Starting OpenL Tablets DEMO ..."
echo "Memory size (gigabytes):    $memory"
echo "Java version:               $version"
echo "Java found in:              $used_java"
echo "Using JAVA_OPTIONS:         $JAVA_OPTIONS"
echo "Using OPENL_HOME:           $OPENL_HOME"

TMPDIR=${TMPDIR:-/tmp}
JETTY_HOME=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
JETTY_BASE=$JETTY_HOME

exec "$_java" -DDEMO=DEMO -Dh2.bindAddress=localhost -Dopenl.home="$OPENL_HOME" $JAVA_OPTIONS -Djetty.home="$JETTY_HOME" -Djetty.base="$JETTY_HOME" -Djava.io.tmpdir="$TMPDIR" -jar "$JETTY_HOME/start.jar" jetty.state=jetty.state jetty-started.xml
